[
  {
    "regex": "([\\w]*)://(.*)",
    "refactor_regex": "((a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|0|1|2|3|4|5|6|7|8|9|_)*)(://)(.*)",
    "5_correct_answers": [
      "3c://dVzFj,FIWqO",
      "7://Hj#e,q8s",
      "BC://KG/-io",
      "://sYUv]nS0=t3%r",
      "://I*%^r-5BG0@JFrHb8EjZj"
    ],
    "5_incorrect_answers": [
      "3c:/ydjzFj=FIWqO",
      "7:/6H@#e,q8s",
      "BC::/KG/-Bo",
      ":~/sYUv]nS0=t3%r",
      ":h/I*%^r-5BG0@JFrHb8Ej@I"
    ]
  },
  {
    "regex": "'url':'([^']+)'",
    "refactor_regex": "'url':'([^'][^']*)'",
    "5_correct_answers": [
      "'url':'dUTCL9q4jkJY'",
      "'url':'lF5R2Vqg]b'",
      "'url':'lXq@\"s['",
      "'url':'#0[X0LcMzf*F6x);O=ue2nv3'",
      "'url':'1@l2UG8:?p2?g2o`LH.'"
    ],
    "5_incorrect_answers": [
      "zurl':'dUTCL9qL8kJY'",
      "Vurl':'lF5R2Vqg]b'",
      "'ur4':'-Xq@\"B['",
      "'iyl':'#0[~0LcMzf*F6x);O=ue2nv3'",
      ";url'8'1@l2UG8:?p2?g2o`LH.'"
    ]
  },
  {
    "regex": "(--.*)=(.*)",
    "refactor_regex": "--.*=.*",
    "5_correct_answers": [
      "--a56E4GQ)(=GS",
      "--<H6p;==[E7xWHJxjf`f%[qb mH",
      "--pVzk?!3ZNwSuQ=3)qL+X",
      "--EVM#7)5z#4T=a",
      "--=k'Mw>=&V)=A(,Ys`kUL_2Tb]1 S,"
    ],
    "5_incorrect_answers": [
      "--a56E4GQ)(^GS",
      "G-*H6p;==[E7xWHJxjf`f%[qb DH",
      "=-qVzk?!3ZNwSuQ=3)qL+X",
      "T-EV9#795z#4T=a",
      "-j=k'Mw>=&V)=A(,Ys`kUL_2Tb]1 S,"
    ]
  },
  {
    "regex": "var tagParam .*';",
    "refactor_regex": "(var tagParam ).*(';)",
    "5_correct_answers": [
      "var tagParam Cn5';",
      "var tagParam ?Mcoo\"dlQ iqRjY9';",
      "var tagParam +3Tn.j=Mx2W:<Q(i';",
      "var tagParam +1m6b=-';",
      "var tagParam 1RyX<pW=';"
    ],
    "5_incorrect_answers": [
      "vanjtagParam Cn5';",
      "var tagParamH?Mcoo\"dlQ iqRjY9';",
      "*ar tagParam +3Tn.j=Mx2W:<Q(i';",
      "var ta(+araG +1m6b=-';",
      "varstagPa<am 1RyX<pW=';"
    ]
  },
  {
    "regex": "\"resolution\":\\[\"(\\d+)\",\"(\\d+)\"\\]",
    "refactor_regex": "(\"resolution\":)\\[\"([0-9][0-9]{0,})(\",\")([0-9][0-9]{0,})\"\\]",
    "5_correct_answers": [
      "\"resolution\":[\"993\",\"22264\"]",
      "\"resolution\":[\"141116\",\"717269\"]",
      "\"resolution\":[\"34\",\"587292929436\"]",
      "\"resolution\":[\"556\",\"5119330936\"]",
      "\"resolution\":[\"1264\",\"90\"]"
    ],
    "5_incorrect_answers": [
      "\"resoluti\\n\":[\"993\",\"22264\"]",
      "\"resolution\":[\"1#1116\",\"71726?\"=",
      "\"r:solution\":[>34\",\"587292929436\"]",
      "\"resolution\":[\"556\",\"511933N906\"e",
      "rresolution\":[\"1264\",\"9]\"]"
    ]
  },
  {
    "regex": "[\\.,/\\\\]",
    "refactor_regex": "[.,/\\\\]",
    "5_correct_answers": [
      "/",
      "\\",
      "\\",
      "/",
      "\\"
    ],
    "5_incorrect_answers": [
      "y",
      "r",
      "W",
      "#",
      "H"
    ]
  },
  {
    "regex": "#|!|\\?",
    "refactor_regex": "#|!|[?]",
    "5_correct_answers": [
      "!",
      "?",
      "#",
      "!",
      "#"
    ],
    "5_incorrect_answers": [
      "8",
      "h",
      "U",
      "K",
      "C"
    ]
  },
  {
    "regex": "([a-zA-Z_0-9]+)\\s=\\s\"(.*)\"",
    "refactor_regex": "[a-zA-Z_0-9][a-zA-Z_0-9]{0,}( |\\t|\\n|\\r|\\f|\\v)=( |\\t|\\n|\\r|\\f|\\v)\".*\"",
    "5_correct_answers": [
      "vfIvZgxJJlZ_ = \"q\"",
      "JuOukPANqhxhxN = \"D+859[[Km;0_9\"",
      "Bv5ZYNg0 = \"A/Ol8PspXU) gLp'9k\"",
      "sxGG1b = \"%?!kLOqvwHPS\"",
      "li = \"U$l\""
    ],
    "5_incorrect_answers": [
      "vQIvZgx$JlC_ = \"q\"",
      "JuOukPANqhxhxN = \"D+859|[Km;0_9S",
      "Bv5ZYNg0 = $A/Ol8PspXm) gLp'9k\"",
      "sxG\\1b = \"%?!kLOqvwHPS\"",
      "#i = \"U$L\""
    ]
  },
  {
    "regex": "\\<\\!\\-\\-([^(\\-\\-\\>)]+)\\-\\-\\>",
    "refactor_regex": "\\<\\!\\-\\-[^(\\-\\>)]{1,}\\-\\-\\>",
    "5_correct_answers": [
      "<!--U!u-->",
      "<!--0JEHt?\\v#/X:6LLWmPpID\\-->",
      "<!--hODODxU@8b8VC\\xc1]-->",
      "<!--+-->",
      "<!--%z@oI2FhmFiink#1*\\-->"
    ],
    "5_incorrect_answers": [
      "<r--U!E-->",
      "<(--JJEHt?Tv#/X:6LLWmPpID\\-->",
      "<!>-hODODx6@8b8VC\\xc1]--)",
      "<!--+g->",
      "?!--%z@oI2FhmFiink#1*v-->"
    ]
  },
  {
    "regex": "jquery(\\.min)?\\.js",
    "refactor_regex": "(jquery)(\\.min){0,1}\\.(js)",
    "5_correct_answers": [
      "jquery.min.js",
      "jquery.min.js",
      "jquery.min.js",
      "jquery.js",
      "jquery.js"
    ],
    "5_incorrect_answers": [
      "jquery.mdngjs",
      "jqEery.min.js",
      "jq_ery.min.js",
      "'queHy.js",
      "jqu.ry.js"
    ]
  },
  {
    "regex": "\\(([^)]+)\\)|\\s(?:and|or)\\s",
    "refactor_regex": "\\(([^)]+)\\)|[ \\t\\n\\r\\f\\v](and|or)[ \\t\\n\\r\\f\\v]",
    "5_correct_answers": [
      "(\\KZE2Md#dLD)",
      "(w9!/g1*+;z)",
      "(]W-yK`X7!l-mEh!sG;)",
      "(gwQ#.I:ucDo*cV[O'qq)",
      "($l0W:$vzGmM=FuCAj)"
    ],
    "5_incorrect_answers": [
      "(\\KZE2Md#dLDi",
      "+w9!/g1*+;z)",
      "(]W-]K`X7!l-mEh!sG;~",
      "(ghQ#.e:ucDo*cV[O'qqd",
      "G$l0W:$vzGmM=FuCAj)"
    ]
  },
  {
    "regex": "\\$L\\([\"'](.*?)[\"'](,.*)?\\)",
    "refactor_regex": "\\$L\\([\"'].*?[\"'](,.*)?\\)",
    "5_correct_answers": [
      "$L(\"z<PWd-B?49',p(f[)",
      "$L('TE^c<`X[QPd/:__@o_.uF5X')",
      "$L(\"jgKPQ(=t)u\")",
      "$L(\"v++'zuv0N(lsyL.P\")",
      "$L(\"]',Gv)978m,!*43xw%v(Ix`By))"
    ],
    "5_incorrect_answers": [
      "$L(\"m<PWd-B?49j,p(f[)",
      "jL('TE^c<`Z[QPd/:__@o_.uF5X')",
      "$L/\"jgKPQ(=t)f\")",
      "$L(\"v++'zuv0N(lsyi.P\"W",
      "$L(\"]$,G&)978m,!*43xw%v(Ix`By))"
    ]
  },
  {
    "regex": "Simple Feature",
    "refactor_regex": "(Simple Feature)",
    "5_correct_answers": [
      "Simple Feature",
      "Simple Feature",
      "Simple Feature",
      "Simple Feature",
      "Simple Feature"
    ],
    "5_incorrect_answers": [
      "Simple F]ature",
      "Simple Featur>",
      "Simple Zeature",
      "^imple Fea_uru",
      "Simp1e FeaPuGe"
    ]
  },
  {
    "regex": "NqborNVE/([^\\s]*)",
    "refactor_regex": "(NqborNVE/)[^\\s]*",
    "5_correct_answers": [
      "NqborNVE/61)DdLiDS(3rT0R<V\\gE*",
      "NqborNVE/(Rgj&m1Ay(dy",
      "NqborNVE/p(-D0o;:^6m'mA",
      "NqborNVE/hD;v#x,3@MO-Q",
      "NqborNVE/V_p@6D]:g7]bJJE*jaY"
    ],
    "5_incorrect_answers": [
      "NqbprNVE/61)DdLiDd(3aT0R<V\\gE*",
      "NqborNVEk(Rgj&m1Au(dy",
      "<qborNVE/p(-D0oq:^6m'mA",
      "NqborN@E/hD;v#x,)@MO-Q",
      "N*borNVE/V_p@6D]:g7]ZJJE*jaY"
    ]
  },
  {
    "regex": "fakeroku",
    "refactor_regex": "(fakeroku)",
    "5_correct_answers": [
      "fakeroku",
      "fakeroku",
      "fakeroku",
      "fakeroku",
      "fakeroku"
    ],
    "5_incorrect_answers": [
      "fak!rosu",
      "_aReroku",
      "fZberoku",
      "fakerok=",
      "+ak#roku"
    ]
  },
  {
    "regex": "//\\w+\\.",
    "refactor_regex": "//\\w(\\w+)?(\\.)",
    "5_correct_answers": [
      "//R.",
      "//N.",
      "//Ns.",
      "//4y.",
      "//j."
    ],
    "5_incorrect_answers": [
      "/Y90",
      "%/N.",
      "//NQw",
      "/L4,.",
      "/VEN"
    ]
  },
  {
    "regex": "action-data=\\\\\"page=(\\d+)\\\\\"",
    "refactor_regex": "(action-data=)\\\\(\"page=)[0-9]+\\\\\"",
    "5_correct_answers": [
      "action-data=\\\"page=815526780\\\"",
      "action-data=\\\"page=5\\\"",
      "action-data=\\\"page=480\\\"",
      "action-data=\\\"page=0\\\"",
      "action-data=\\\"page=35224305053\\\""
    ],
    "5_incorrect_answers": [
      "aKtion-data^\\\"page=815526780#\"",
      "action-data=\\5page=5\\9",
      "a/tion-data=\\\"pageG480\\\"",
      "action-d$ta=\\\"_a<e=0\\\"",
      "a!tion-data=\\\"pagC=35224305053\\\""
    ]
  },
  {
    "regex": "XSRF-TOKEN=(.*);",
    "refactor_regex": "XSRF-TOKEN=.*;",
    "5_correct_answers": [
      "XSRF-TOKEN=vwzxkO;,H#rVFeD;",
      "XSRF-TOKEN=.*94]txz(wg]7JT;",
      "XSRF-TOKEN=M']ietLe\"R3ykWG4;",
      "XSRF-TOKEN=OQ65@fddXKa;",
      "XSRF-TOKEN=1UTRj22!Lrz@\\cE;c$;"
    ],
    "5_incorrect_answers": [
      "XSRFSTOKEN=vwzxkO;,HorVFeD;",
      "XSRF-T*KEN=.*94]4xz(wg]ZJT;",
      "YSRF-TOKEN=M']retLe\"R3ykVG4;",
      "XSRF-TOKENLOQ65@HddXKa;",
      "XSJF-TOKEN=1UTRj2~!Lrz@\\cE;c$C"
    ]
  },
  {
    "regex": "non-matching-regex",
    "refactor_regex": "(non-matching-regex)",
    "5_correct_answers": [
      "non-matching-regex",
      "non-matching-regex",
      "non-matching-regex",
      "non-matching-regex",
      "non-matching-regex"
    ],
    "5_incorrect_answers": [
      "nXn-matching-regex",
      "6on-matcLing-regex",
      "+on-matching-reFex",
      "no^-matching-regex",
      "%on-matcxing-rege`"
    ]
  },
  {
    "regex": "a|area",
    "refactor_regex": "(a|area)",
    "5_correct_answers": [
      "a",
      "a",
      "a",
      "area",
      "a"
    ],
    "5_incorrect_answers": [
      "Y",
      " ",
      "(",
      "!rea",
      "f"
    ]
  },
  {
    "regex": "(['\"])use strict;",
    "refactor_regex": "[\"']use strict;",
    "5_correct_answers": [
      "'use strict;",
      "\"use strict;",
      "\"use strict;",
      "'use strict;",
      "'use strict;"
    ],
    "5_incorrect_answers": [
      "'+se strict;",
      "^usv strict;",
      "\"use )triXt;",
      "'use str_ct;",
      "'use/strict:"
    ]
  },
  {
    "regex": "frequency=(\\d+)",
    "refactor_regex": "frequency=[0-9]{1,}",
    "5_correct_answers": [
      "frequency=3443779091412062443",
      "frequency=72447415285847366",
      "frequency=39921268485982370686874",
      "frequency=99657897228570",
      "frequency=59476"
    ],
    "5_incorrect_answers": [
      "f equency=3443779091413062443",
      "mrequency=72447415285847366",
      "frequen~y=3992126848598237068\\874",
      "frequencC=99657897228570",
      "frequeucy=59476"
    ]
  },
  {
    "regex": "-----BEGIN RSA PRIVATE KEY-----",
    "refactor_regex": "-{5}BEGIN RSA PRIVATE KEY-{5}",
    "5_correct_answers": [
      "-----BEGIN RSA PRIVATE KEY-----",
      "-----BEGIN RSA PRIVATE KEY-----",
      "-----BEGIN RSA PRIVATE KEY-----",
      "-----BEGIN RSA PRIVATE KEY-----",
      "-----BEGIN RSA PRIVATE KEY-----"
    ],
    "5_incorrect_answers": [
      "-----BEGIN RSA PRIV_TE KEY-----",
      "H----BEGIN RSA PRIVATE KEY-----",
      "-----BEGIN RSA PRIcATE KEY-----",
      "-----BEGIN RSA PRIVATEQKEY-----",
      "--[--BEGIN RSA PRIVATE KEY-----"
    ]
  },
  {
    "regex": "/File:",
    "refactor_regex": "(/File:)",
    "5_correct_answers": [
      "/File:",
      "/File:",
      "/File:",
      "/File:",
      "/File:"
    ],
    "5_incorrect_answers": [
      "qFile{",
      "/Fi9k:",
      "/'ilr:",
      "/Fil`:",
      "/FiRe:"
    ]
  },
  {
    "regex": "([()[{+.$^\\\\|?])",
    "refactor_regex": "(\\(|\\)|\\[|\\{|\\+|\\.|\\$|\\^|\\\\|\\||\\?)",
    "5_correct_answers": [
      ".",
      ")",
      "{",
      "$",
      ")"
    ],
    "5_incorrect_answers": [
      "H",
      "r",
      "c",
      "9",
      "Z"
    ]
  },
  {
    "regex": "doc has no carmen:text on id:1",
    "refactor_regex": "(doc has no carmen:text on id:1)",
    "5_correct_answers": [
      "doc has no carmen:text on id:1",
      "doc has no carmen:text on id:1",
      "doc has no carmen:text on id:1",
      "doc has no carmen:text on id:1",
      "doc has no carmen:text on id:1"
    ],
    "5_incorrect_answers": [
      "doc has no carm`n:text on id:1",
      "do( has]no carmen:text on id:1",
      "doc has no ca$men:text on id:1",
      "doc has no carmen:te(t on id:1",
      "doc has no carmen:texc on$id:1"
    ]
  },
  {
    "regex": "src=[']?([^',\\)]+)[']?",
    "refactor_regex": "src=(|['])([^',\\)]{1,})(|['])",
    "5_correct_answers": [
      "src='az-bl?ROXXjiVbY]",
      "src='s/T>#= rVr\\P;x[x",
      "src=`Q:0!N<qhly.2bP",
      "src=<Je<5;-!_L`Y@3Em9m#Q",
      "src='/\"xO$\\+%d]5<(PFgmCQ(.zk6"
    ],
    "5_incorrect_answers": [
      "hrc='az-bl?ROXXjiVbYL",
      "s c='s/T>9= rVr\\P;x[n",
      "srch`Q:}!N<qhly.2KP",
      "s%c=<Je<5;-!_LbY@3Em9m#Q",
      "|rc=#/\"xO$\\+%d]5<(PFgmCQ(.zk6"
    ]
  },
  {
    "regex": "\\[object Array\\]",
    "refactor_regex": "\\[(object Array)\\]",
    "5_correct_answers": [
      "[object Array]",
      "[object Array]",
      "[object Array]",
      "[object Array]",
      "[object Array]"
    ],
    "5_incorrect_answers": [
      "['bjec2 Erray]",
      "[gbject Ar\\ay]",
      ".object Array]",
      "[obj8ct Array]",
      "[{bject @rray]"
    ]
  },
  {
    "regex": "lodash|moment",
    "refactor_regex": "(lodash|moment)",
    "5_correct_answers": [
      "lodash",
      "lodash",
      "lodash",
      "moment",
      "lodash"
    ],
    "5_incorrect_answers": [
      "lo(asL",
      "fodash",
      "l{da,U",
      "mel?nt",
      "loLasb"
    ]
  },
  {
    "regex": "bb10",
    "refactor_regex": "(bb10)",
    "5_correct_answers": [
      "bb10",
      "bb10",
      "bb10",
      "bb10",
      "bb10"
    ],
    "5_incorrect_answers": [
      "bb.0",
      "b_10",
      "bD1H",
      "bbU0",
      "bb1H"
    ]
  },
  {
    "regex": "Timeout|Assertion",
    "refactor_regex": "((Timeout)|(Assertion))",
    "5_correct_answers": [
      "Assertion",
      "Timeout",
      "Assertion",
      "Timeout",
      "Assertion"
    ],
    "5_incorrect_answers": [
      "Asser+ion",
      "NiNeout",
      "A6sertion",
      "Ti(eout",
      "Asfurzion"
    ]
  },
  {
    "regex": "\\[if.* supportFields.*\\]",
    "refactor_regex": "\\[(if).*( supportFields).*\\]",
    "5_correct_answers": [
      "[if j-5$K!e supportFieldsE24C5;]",
      "[if 35j supportFields^m]",
      "[ifsd8+=p supportFieldsXdc>Y,@k3]",
      "[ifT!)\\;/ supportFields% Bl]DaBLb]",
      "[if>6xz supportFields4u]"
    ],
    "5_incorrect_answers": [
      "[if j-5$K!e su^portWieldsE24\\5;]",
      "[if 35B suppor4FielPs^m]",
      "[ifsd8+=p supportFiEldsXdc>Y,@k3]",
      "[ifT!)\\;/ supportRields% Bl]DarLb]",
      "[if>6xz suUfortFields\"u]"
    ]
  },
  {
    "regex": "[\\d\\w_.]+:[-\\d\\w_.]+",
    "refactor_regex": "(\\d|\\w|_|\\.){1,}:(-|\\d|\\w|_|\\.){1,}",
    "5_correct_answers": [
      "v:ZJ",
      "U0:j",
      "9wUI:IcpII",
      "53:g",
      "AWr:B"
    ],
    "5_incorrect_answers": [
      "v:/J",
      "U0:$",
      "9wUIHIcpII",
      "5/3g",
      "AWrVB"
    ]
  },
  {
    "regex": "([^::]+)::([^()]+)?(?:\\((.*)\\))?",
    "refactor_regex": "([^::][^:]*)::([^()]+)?(?:\\((.*)\\))?",
    "5_correct_answers": [
      "bv'mP$085,1Pu6s_%2bf#h::CEp6\\",
      "O<Wi9&)Q#-JCp\"='::qzW;-lH=P%*En",
      "8::",
      "e]zw3x::",
      "LY*d;?AdGh<=::(^awi zE]S)"
    ],
    "5_incorrect_answers": [
      "bv'mP$i;5,1Pu6s_%2bf#h:`CEp6\\",
      "O<W:9&)Q#-JCp\"='::;zW;-lH=Px*En",
      "cD:",
      "e]zwvUy:",
      "LY*r;?AdGh<=B:(^awi zE]S)"
    ]
  },
  {
    "regex": ".*hotfix.*",
    "refactor_regex": ".*(hotfix).*",
    "5_correct_answers": [
      "Ta;p(%#UjZQX*tu7hotfix_[j<#",
      "Ly!Ra9^hotfixkN",
      "B^U6 \"thotfix",
      "BxJg1%hotfixUo5uu",
      "c\\hotfix;A,n-pk"
    ],
    "5_incorrect_answers": [
      "\"a;p(%#UjZQXdtu7hotf2x_[j<#",
      "Ly!Ra9^hotfwRkN",
      "7^U6 \"th>?fix",
      "BxJg1%hotfVxUo5uu",
      "c1pot=ix;A,n-pk"
    ]
  },
  {
    "regex": "Index out of range \\(-2 < 0\\)",
    "refactor_regex": "(Index out of range )\\((-2 < 0)\\)",
    "5_correct_answers": [
      "Index out of range (-2 < 0)",
      "Index out of range (-2 < 0)",
      "Index out of range (-2 < 0)",
      "Index out of range (-2 < 0)",
      "Index out of range (-2 < 0)"
    ],
    "5_incorrect_answers": [
      "Index out oW range (-2 < 0C",
      "Index out of yaYge 2-2 < 0)",
      "Index out Uf range %-2 <M0)",
      "Index out of rsnge (Q2O< 0)",
      "Index out of range (-< < g)"
    ]
  },
  {
    "regex": "[\\s]*clipbottom: .*?[;]?",
    "refactor_regex": "[ \\t\\n\\r\\f\\v]*clipbottom: .*?([;]|)",
    "5_correct_answers": [
      "clipbottom: hKjN;",
      "   clipbottom: l!/K6",
      "clipbottom: GH4FAIrYL(n_]\\Hc'/;",
      "clipbottom: u_7i>;",
      "clipbottom: G3)_dQ6OPMom@`0f)Gwy[r"
    ],
    "5_incorrect_answers": [
      "clipb?ttom: hKjN;",
      "   cli7bottom: l!/K6",
      "clipb:Ytom: GH4FAIYYL(n_]\\Hc'/;",
      "clipbottRm: u_7iD;",
      "4lipbottom: G3)_dQ6OPMom@`0f)Gwy[r"
    ]
  },
  {
    "regex": "/\\*\\*/[\\s\\S]*/\\*\\*/",
    "refactor_regex": "/\\*\\*/[\\S\\s]{0,}/\\*\\*/",
    "5_correct_answers": [
      "/**//**/",
      "/**//**/",
      "/**//**/",
      "/**//**/",
      "/**//**/"
    ],
    "5_incorrect_answers": [
      "v**//*[/",
      "/**/gZj/",
      "/{*/u**z",
      "/M*//**/",
      "D**//**/"
    ]
  },
  {
    "regex": "Nan::NAN_METHOD_RETURN_TYPE",
    "refactor_regex": "(Nan::NAN_METHOD_RETURN_TYPE)",
    "5_correct_answers": [
      "Nan::NAN_METHOD_RETURN_TYPE",
      "Nan::NAN_METHOD_RETURN_TYPE",
      "Nan::NAN_METHOD_RETURN_TYPE",
      "Nan::NAN_METHOD_RETURN_TYPE",
      "Nan::NAN_METHOD_RETURN_TYPE"
    ],
    "5_incorrect_answers": [
      "Nan::~AN_METHOD_RETURN_TYPE",
      "Nan::NAN_rETHOD_RETURN_TYPE",
      "Ngn::NAN_0ETHOD_sETURN_TYPE",
      "Nan::NAN_METHOD_GETURN_TY1E",
      "Nan:<NAN_METHOD_RETURN-TsPE"
    ]
  },
  {
    "regex": "needs to be a function",
    "refactor_regex": "(needs to be a function)",
    "5_correct_answers": [
      "needs to be a function",
      "needs to be a function",
      "needs to be a function",
      "needs to be a function",
      "needs to be a function"
    ],
    "5_incorrect_answers": [
      "needs to be a Nunctikn",
      "needs to,be a function",
      "neIds to be a fun<tion",
      "needsmtL be a fu8ction",
      "needs tO be a functiol"
    ]
  },
  {
    "regex": "Invalid translator",
    "refactor_regex": "(Invalid translator)",
    "5_correct_answers": [
      "Invalid translator",
      "Invalid translator",
      "Invalid translator",
      "Invalid translator",
      "Invalid translator"
    ],
    "5_incorrect_answers": [
      "IHvalid translator",
      "Invalid 0ranslator",
      "Invalid t@anslaEor",
      "Invalid translaY4r",
      "Invalid translato4"
    ]
  },
  {
    "regex": "The ASF licenses",
    "refactor_regex": "(The ASF licenses)",
    "5_correct_answers": [
      "The ASF licenses",
      "The ASF licenses",
      "The ASF licenses",
      "The ASF licenses",
      "The ASF licenses"
    ],
    "5_incorrect_answers": [
      "The8AS\\ li5enses",
      "The QSF licensks",
      "The ASF licensCs",
      "Phe ASFoliOenses",
      "Tge ASi licen_es"
    ]
  },
  {
    "regex": "(\\>=?\\d+(\\.\\d+)*?)\\.x",
    "refactor_regex": "\\>=?[0-9]{1,}((\\.[0-9]{1,})+)??\\.x",
    "5_correct_answers": [
      ">07.0134637877729.x",
      ">=4495931671202485168306.x",
      ">=4448710.x",
      ">=11488841.x",
      ">=2336123021532142562.034712.582.x"
    ],
    "5_incorrect_answers": [
      ">07.013463787772{.x",
      ">=4495v31671202485168306.x",
      ">=7<48710.x",
      ">=11+88841.x",
      ">=2336123021532#42562.034712.582zx"
    ]
  },
  {
    "regex": "[\\?|&]callback=([a-z0-9_]+)",
    "refactor_regex": "[&\\?\\|]callback=([a-z0-9_][a-z0-9_]{0,})",
    "5_correct_answers": [
      "&callback=ickjc24dn2_",
      "&callback=srnx8w2_cfkjco9l",
      "|callback=txf3",
      "?callback=9g_pa4yhcekco",
      "&callback=q4pffvi"
    ],
    "5_incorrect_answers": [
      "&callb}ck=icyjc24dn*_",
      "&/allb2ck=srnx8w2_cfkjco9l",
      "|callba`k=txf3",
      "?callbackN9<_pa4yhcekco",
      "&ca-lback=q4p<fvi"
    ]
  },
  {
    "regex": "([^=?&]+)=([^&]*)",
    "refactor_regex": "[^=?&]{1,}=[^&]*",
    "5_correct_answers": [
      "+i.=Rb>Z5I+<WvBw@S`",
      "fpk \"*b4N)x\"D3C^=sB.S'[0c$l8@_=b",
      "!bbp+=0b97XKvQ8xp#?-unw\"WSJO8",
      "]\\ca0trqT9/jCso:<=`?MP@4UV;9",
      ",lj)i\"DSp/%'+Z#>P6iA=j"
    ],
    "5_incorrect_answers": [
      "EiFJRb>Z5I+<WvBw@S`",
      "fpk \"*bdN)x\"D3C^~sB.S'[0c$l8@_sb",
      "!bbp+R0W97XK*Q8xp#?-unw\"WSJO8",
      "]\\ca0{rqT9/jC'o:<d`?MP@4UV;9",
      ",lj)i&DSm/%'+Z#>P6iA=j"
    ]
  },
  {
    "regex": "(go\\d+\\.?\\d+?\\.?\\d*)",
    "refactor_regex": "(go[0-9]{1,}[.]?[0-9]{1,}?[.]?[0-9]{0,})",
    "5_correct_answers": [
      "go27.896378235.3771509698026467",
      "go9614362609832643513641713433",
      "go2273688524061461116",
      "go06405565344.758588347459604501",
      "go7.1.70560906865501458"
    ],
    "5_incorrect_answers": [
      "goJ?.896378235.3771509698026467",
      "g<9614362609832643513641713433",
      "g72f7368852~061461116",
      "go)z405565344.758588347459604501",
      "gha.1.70560906q65501458"
    ]
  },
  {
    "regex": "<code\\s\\S*>",
    "refactor_regex": "<code[ \\t\\n\\r\\f\\v]((\\S+))?>",
    "5_correct_answers": [
      "<code >",
      "<code >",
      "<code >",
      "<code >",
      "<code >"
    ],
    "5_incorrect_answers": [
      ".code >",
      "<co]e >",
      "3c[de >",
      "ecode >",
      "<cohe >"
    ]
  },
  {
    "regex": "1970",
    "refactor_regex": "(1970)",
    "5_correct_answers": [
      "1970",
      "1970",
      "1970",
      "1970",
      "1970"
    ],
    "5_incorrect_answers": [
      "h970",
      "49_0",
      "197k",
      "1`S0",
      "!9K0"
    ]
  },
  {
    "regex": "n+b+s+p\\.",
    "refactor_regex": "n+b+s+p([.])",
    "5_correct_answers": [
      "nnnnnnnnnnnnnnbbbsssssssssssssssp.",
      "nnbbsssssssp.",
      "nnnnnnbbbbbbbbbbbbssssssssssssssp.",
      "nnnnnnnnnnnnnbbbbbsssssssssp.",
      "nnnnnnbbbbbbbbbbbbsssp."
    ],
    "5_incorrect_answers": [
      "nnnnnnnnnnnnYn;bbssssssssssssssspo",
      "Tnbbsssfsssp.",
      "nnnnnnbbbbbbbbfbbbssswsssssssssup.",
      "nnnnnnnnnnnnnbbbbbrssssssssp.",
      "nBnnnnbbbbbbbbbbbbsssp."
    ]
  },
  {
    "regex": "handler.+function",
    "refactor_regex": "handler.{1,}function",
    "5_correct_answers": [
      "handler5x-D<n-kOQ/P]function",
      "handler$cVZqGlCM R1`^r?function",
      "handlerlfunction",
      "handlerm3 XMV10JvuhlljNifunction",
      "handlerKEOvAS)@:Sp9&seKfunction"
    ],
    "5_incorrect_answers": [
      "handler-xxD<n-kOQ/P]func7ion",
      "yandle/$cVZqGlCM0R1`^r?function",
      "handletlfSnctio4",
      "hanflBrm3 XMV10JvuhlljN;function",
      "handlerKEO\"AS)@:Sp9&seKfunc1ion"
    ]
  },
  {
    "regex": "sheetrock\\.min",
    "refactor_regex": "(sheetrock)\\.(min)",
    "5_correct_answers": [
      "sheetrock.min",
      "sheetrock.min",
      "sheetrock.min",
      "sheetrock.min",
      "sheetrock.min"
    ],
    "5_incorrect_answers": [
      "sheetrxck.min",
      "sheeDrTck.min",
      "sheetrUck.m[n",
      "sheetrNck.mA!",
      "sh<etrlck.~in"
    ]
  },
  {
    "regex": "&&",
    "refactor_regex": "(&&)",
    "5_correct_answers": [
      "&&",
      "&&",
      "&&",
      "&&",
      "&&"
    ],
    "5_incorrect_answers": [
      "EA",
      "A&",
      "&m",
      "r&",
      "&L"
    ]
  },
  {
    "regex": "char|text",
    "refactor_regex": "((char)|(text))",
    "5_correct_answers": [
      "text",
      "text",
      "char",
      "char",
      "char"
    ],
    "5_incorrect_answers": [
      "teFt",
      "gex5",
      "ahGr",
      "sbaF",
      "whYr"
    ]
  },
  {
    "regex": "p\\.([A-Za-z]*)[0-9]*([A-Za-z]*)",
    "refactor_regex": "p[.]([A-Za-z]*)[0-9]*([A-Za-z]*)",
    "5_correct_answers": [
      "p.CHX8331693622271283139ernxKP",
      "p.bjRaGchCtfZMiX84506HkEyOiNNegUMD",
      "p.qEfnZVWncATcStxdWqZPcjoLtrPBiz",
      "p.QpAlZQuqZjTzHyAnAUmumup",
      "p.764681974510HbOWQrbz"
    ],
    "5_incorrect_answers": [
      "p0CHXJ331693622271283139ernxKP",
      "prbjRaGchCtfZMiX/4506Hk7yOiNNegUMD",
      "_.qEfn1VWncATc\\txdWqZPcjoLtrPBiz",
      "pWQpAlZQuqZjTzHyAnAUnumup",
      "pn764681974510HbOWWrbj"
    ]
  },
  {
    "regex": "&n=\\d+",
    "refactor_regex": "&n=\\d(\\d{1,})?",
    "5_correct_answers": [
      "&n=44911698",
      "&n=150878994649956466219",
      "&n=000740604972355",
      "&n=1116707533",
      "&n=5593811690248766322900540"
    ],
    "5_incorrect_answers": [
      "vn=449`1698",
      "&n=\"5S878994649956466219",
      "&n#00074060497Y355",
      " n=1116707533",
      "&q=5593811690248966322T00540"
    ]
  },
  {
    "regex": "versionCode=(\\d+)",
    "refactor_regex": "versionCode=(0|1|2|3|4|5|6|7|8|9)(0|1|2|3|4|5|6|7|8|9)*",
    "5_correct_answers": [
      "versionCode=91",
      "versionCode=89885866338030219",
      "versionCode=0665",
      "versionCode=5105549919125011",
      "versionCode=83287595816152298893"
    ],
    "5_incorrect_answers": [
      "versionCWde=Z1",
      "versionCo^e=8X8858`6338030219",
      "ver_ienCode=0665",
      "versi6nOode=5105549919125011",
      "version2ode=83287595B16152298893"
    ]
  },
  {
    "regex": "[\\s,;{}()]",
    "refactor_regex": "(,|;|\\(|\\)|[ \\t\\n\\r\\f\\v]|\\{|\\})",
    "5_correct_answers": [
      " ",
      ";",
      "{",
      ";",
      "{"
    ],
    "5_incorrect_answers": [
      "W",
      "!",
      "y",
      "M",
      "l"
    ]
  },
  {
    "regex": "/img1\\.\\d+\\.gif",
    "refactor_regex": "/img1\\.\\d\\d*\\.gif",
    "5_correct_answers": [
      "/img1.3631470.gif",
      "/img1.17356475994173929874.gif",
      "/img1.91791377052181730.gif",
      "/img1.0768779355621306610.gif",
      "/img1.41896551637.gif"
    ],
    "5_incorrect_answers": [
      "/img1!36314p0.gif",
      "/img1L1735J475994173Y29874.gif",
      "/imgEO91791377052181730Bgif",
      "/img1.0(6877935V621306610.gif",
      "/img1.418965Z1637.eif"
    ]
  },
  {
    "regex": "Server Version",
    "refactor_regex": "(Server Version)",
    "5_correct_answers": [
      "Server Version",
      "Server Version",
      "Server Version",
      "Server Version",
      "Server Version"
    ],
    "5_incorrect_answers": [
      "Server_Ve*sion",
      "Serve) Version",
      "Server Vers=on",
      "Serter VeHNion",
      "Server Ve@sion"
    ]
  },
  {
    "regex": "(<u>)(.*?)(</u>)",
    "refactor_regex": "<u>.*?</u>",
    "5_correct_answers": [
      "<u>jW6.Z!vh</u>",
      "<u>TfS1$[1=1X+BwB A</u>",
      "<u>T<</u>",
      "<u>TiWFIov`vh=E2xq0</u>",
      "<u>Z.aYX.t(N+8IC.02G]4oR5</u>"
    ],
    "5_incorrect_answers": [
      "<u>jW6^Z!vh</h>",
      "<;>TfSs$[1=1X+BwB Av/u>",
      "<'>Tm</uK",
      ";u>TiWFIz-`vh=E2xq0</u>",
      "ru>Z.aYXgt(N+8IC.020]4oR5</u>"
    ]
  },
  {
    "regex": "[`\\\\]",
    "refactor_regex": "`|\\\\",
    "5_correct_answers": [
      "`",
      "\\",
      "`",
      "`",
      "`"
    ],
    "5_incorrect_answers": [
      ":",
      ":",
      ",",
      "a",
      "w"
    ]
  },
  {
    "regex": "IdList.Id.[1-5]{3}",
    "refactor_regex": "IdList.Id.((1|2|3|4|5)(1|2|3|4|5)(1|2|3|4|5))",
    "5_correct_answers": [
      "IdListGIdF221",
      "IdListpIdV154",
      "IdList,Id*214",
      "IdListrIdW143",
      "IdListkIde542"
    ],
    "5_incorrect_answers": [
      "IdListGIdF22%",
      "IdListpedV1#4",
      "IdListm]4*214",
      "IdListr rW14~",
      "IdL}xtkIde542"
    ]
  },
  {
    "regex": "^[A-Z]*(_[A-Z]*)*$",
    "refactor_regex": "^[ABCDEFGHIJKLMNOPQRSTUVWXYZ]*(_[ABCDEFGHIJKLMNOPQRSTUVWXYZ]*)*$",
    "5_correct_answers": [
      "BUBOKBOLHYIQD",
      "OMVVKHNDXXGQ_LSDHV",
      "NELA_JMISW",
      "XS__HMFDNSENWDRGZQHEQVOMPE",
      "SHIVUXACUTCFZVNSA"
    ],
    "5_incorrect_answers": [
      "BU^OKBOLHYIQD",
      "OMVVKHEDXXG\\_L{DHV",
      "NE8A_JMISW",
      "XS__HMFDNSENWDRGZQHEQ(OMPE",
      "SHIFUXACUTCFZ)NSA"
    ]
  },
  {
    "regex": "^(\\d\\d)-(\\d\\d)$",
    "refactor_regex": "^[0-9][0-9]-[0-9][0-9]$",
    "5_correct_answers": [
      "43-76",
      "77-18",
      "96-88",
      "81-29",
      "14-11"
    ],
    "5_incorrect_answers": [
      "4b-76",
      "D7{18",
      ".6-?\\",
      "%1-\\9",
      "14/11"
    ]
  },
  {
    "regex": "(?:\\]\\bsub\\b)",
    "refactor_regex": "\\]\\b(sub)\\b",
    "5_correct_answers": [
      "]sub",
      "]sub",
      "]sub",
      "]sub",
      "]sub"
    ],
    "5_incorrect_answers": [
      "*su4",
      "]cuy",
      "]su:",
      "S<Vb",
      "Tsub"
    ]
  },
  {
    "regex": "[^s]*(ss)[^s]*",
    "refactor_regex": "[^s]{0,}(ss)[^s]{0,}",
    "5_correct_answers": [
      "XY6[?lrss]0YY?xp'*97R@>6;",
      "5R<jd;ssU-C!P#fqn/0-pUn\\y`<.6",
      "nkD)ass8>qrKd0tIf]E\"(72FG",
      "A+T _x+,ssHFoCRpj",
      "EVS0ss5y+F<00v\\kgDC5VLf!mV?YD%"
    ],
    "5_incorrect_answers": [
      "XY$[?lr#s]0YY?xp'*97R@>6;",
      "5R<9d;.sU-C!P#fqn/0-pUn\\y`<.P",
      "nkD)asO8>qr^d0tIf]A\"(72FG",
      "A+T _x+,s3HFoCRpj",
      "EVS0<s5y+F<00v\\kg'C5VLf!mV?YD%"
    ]
  },
  {
    "regex": "<b><i>",
    "refactor_regex": "(<b><i>)",
    "5_correct_answers": [
      "<b><i>",
      "<b><i>",
      "<b><i>",
      "<b><i>",
      "<b><i>"
    ],
    "5_incorrect_answers": [
      "<\\>Oi>",
      "<bw<i>",
      "<bx<i>",
      "<b>,i>",
      "<bD<E>"
    ]
  },
  {
    "regex": "^(?:#~ )?msgctxt\\s+(.*)",
    "refactor_regex": "^(?:#~ ){0,1}msgctxt\\s\\s*(.*)",
    "5_correct_answers": [
      "msgctxt F/H$?ED",
      "msgctxt ,iQXjM3^e6$P1Dg",
      "msgctxt RKS8[i03p2Ey;klqpl5",
      "msgctxt ",
      "#~ msgctxt .05J^ B^9lP-z-5Fv9uX"
    ],
    "5_incorrect_answers": [
      "msgctxI F/H$*<D",
      "msRctxt `iQXjM3^e6$P1Dg",
      "msgctx! RKS8Di03p2Ey;klqpl5",
      "m5gcext ",
      "#~ msgDtxt .05J^ B^9lP-zA5Fv:uX"
    ]
  },
  {
    "regex": "invalid fetch implementation",
    "refactor_regex": "(invalid fetch implementation)",
    "5_correct_answers": [
      "invalid fetch implementation",
      "invalid fetch implementation",
      "invalid fetch implementation",
      "invalid fetch implementation",
      "invalid fetch implementation"
    ],
    "5_incorrect_answers": [
      "inv6lid ?etch implQmentation",
      "5nvaliG fetch implementatio$",
      "invalid fetch $mplementqtion",
      "invalid fetch impMem1ntation",
      "Xnvalid fetch impl7mentation"
    ]
  },
  {
    "regex": "^promo-.*-extra$",
    "refactor_regex": "^(promo-).*(-extra)$",
    "5_correct_answers": [
      "promo-C)\"nGqF`k/qPUg-extra",
      "promo-\\U7w&cIQI:JcEW^54fbN-extra",
      "promo-7\\2yj,.cUnaw_S[SWVmi-extra",
      "promo-hrIm<72$+>webpr-extra",
      "promo-uv7K-extra"
    ],
    "5_incorrect_answers": [
      "promo-C)\"nGqF`k/qPUg-e_tZa",
      "pr]mo-\\UMw&cIQI:JcEW^54fbN-extra",
      "promo-7\\2yj,.cUnaw_S[SWVmi$extra",
      "promo-hrIm<72$+>webpj-extrS",
      "proAo-uv7K-eItra"
    ]
  },
  {
    "regex": "<(.*)(/>$)",
    "refactor_regex": "<.*(/>)$",
    "5_correct_answers": [
      "<NMP+6U/>",
      "<.Oa/>",
      "<R'N&dVEx+#D,3$\\&jT/>",
      "<`G'z7/e+\"vmjP8uHQI/>",
      "<)xoX*.?ZZhLjfPU5NhJT9i/>"
    ],
    "5_incorrect_answers": [
      "<NMP+0U/Q",
      "<.O\"//",
      "eR'#&dVEx+#D,3$\\&jT/>",
      "<`U'z7/e+\"vmjP8:HQIR>",
      "6)xoX*.?ZZhLjfPU5shJF9i/>"
    ]
  },
  {
    "regex": "^(.*,[ \\r\\n\\t\\f\\s]*).*$",
    "refactor_regex": "^.*,[ \\r\\n\\t\\f \\t\\n\\r\\f\\v]{0,}.*$",
    "5_correct_answers": [
      "E#$tCLj?t0q,zIj:qmR",
      "JciC&_dy5e94k<?]lv3F<a,1_",
      ">R2M]Xz>,I)\"t",
      "We5Az+$1;X%4e$@Pv,oAC,e",
      "$!(odEi,6a$rs7RN+*0xtHxhjJ"
    ],
    "5_incorrect_answers": [
      "E#$tCLj?t0qdzIj:qmR",
      "JciC&_dy5e94k<?]Rv3F<aM1_",
      "8R2M]Xz>(I)\"I",
      "We5Az+$1+X%4e$@PvhoAC@e",
      "$!(odEi_6K$rs7RN+*0xtHxh<J"
    ]
  },
  {
    "regex": "^(\\t|[ ]{1,4})",
    "refactor_regex": "^(\\t|( )(| |  |   ))",
    "5_correct_answers": [
      " ",
      " ",
      "    ",
      "   ",
      "    "
    ],
    "5_incorrect_answers": [
      "X",
      "h",
      "A   ",
      "\\P(",
      "0}  "
    ]
  },
  {
    "regex": "^[\\d]*$",
    "refactor_regex": "^[0123456789]*$",
    "5_correct_answers": [
      "4628521811948762092",
      "64",
      "159874950661",
      "3414528517574",
      "5011004684055"
    ],
    "5_incorrect_answers": [
      "462}521811948q62092",
      ";!",
      "1598749506x1",
      "34145285175j4",
      "50D1@046840w5"
    ]
  },
  {
    "regex": "L(\\d)?(?:-([^L]*))?$",
    "refactor_regex": "L(\\d){0,1}(?:-([^L]*))?$",
    "5_correct_answers": [
      "L",
      "L5",
      "L- g@VKyS<gzeUCIy1\"y\\",
      "L4",
      "L-Sh>,hf5]#+e*n;7w1B;+"
    ],
    "5_incorrect_answers": [
      "D",
      "x5",
      "L~ g@VKuS<gzefCIy1\"y\\",
      "94",
      "[-_h_,hf5]#+e*n;7w1B;+"
    ]
  },
  {
    "regex": "^/app/(.*)\\.tmpl$",
    "refactor_regex": "^(/app/.*)[.](tmpl)$",
    "5_correct_answers": [
      "/app/Kb+61-.tmpl",
      "/app/3uFnNR.tmpl",
      "/app/rIIyhjM0.tmpl",
      "/app/Icui@FTx;AF?! Z.tmpl",
      "/app/s)m3KIg]kS.tmpl"
    ],
    "5_incorrect_answers": [
      "/app/K e61-.tmpN",
      "/,pp/3uFnNR.tmpl",
      "/]pp/reIyhjM0.tmpl",
      "/app/Icui@FTx;AF?! Z.tm+l",
      "/3ppQs)h3KIg]kS.tmpl"
    ]
  },
  {
    "regex": "\\bHunting\\sfor\\s",
    "refactor_regex": "\\bHunting[ \\t\\n\\r\\f\\v]for[ \\t\\n\\r\\f\\v]",
    "5_correct_answers": [
      "Hunting for ",
      "Hunting for ",
      "Hunting for ",
      "Hunting for ",
      "Hunting for "
    ],
    "5_incorrect_answers": [
      "HuntingDfor ",
      "HuntYnY f(r ",
      "Hrntgng for ",
      "H2nting \\or ",
      "Huzting@fmr "
    ]
  },
  {
    "regex": "rgb\\((\\d+)[, ]+(\\d+)[, ]+(\\d+)\\)",
    "refactor_regex": "rgb\\(\\d{1,}[, ]{1,}\\d{1,}[, ]{1,}\\d{1,}\\)",
    "5_correct_answers": [
      "rgb(59291  6690052694 ,,, , ,,,95)",
      "rgb(0, ,8467 ,,,  ,  ,82738014930)",
      "rgb(1039 ,    3127735343206 52)",
      "rgb(834,  ,, 730    ,,7247113)",
      "rgb(186719, ,,,,,,,  ,6284 ,, 8)"
    ],
    "5_incorrect_answers": [
      "rgb(59291  O6900526z4 ,,, , h,,95)",
      "rgb(0, ,8467 ,,,  ,  ,827380B4930)",
      "r(b(1039 ,    3r2L735343206 52)",
      "rgb(834,  ,, 730   i,,7247113#",
      "rgb(1/6719, ,,,,,,,  ,62m4 ,, 8)"
    ]
  },
  {
    "regex": "Listening\\son\\sport\\s\\d+",
    "refactor_regex": "(Listening)[ \\t\\n\\r\\f\\v](on)[ \\t\\n\\r\\f\\v](port)[ \\t\\n\\r\\f\\v]\\d+",
    "5_correct_answers": [
      "Listening on port 361533635",
      "Listening on port 862924",
      "Listening on port 9826752",
      "Listening on port 40",
      "Listening on port 46959"
    ],
    "5_incorrect_answers": [
      "Lidtening on porG 361533635",
      "Liswening on port%862924",
      "Listening on Vort 98260&2",
      "Listening -n Eort 4O",
      "Listening on|port 46959"
    ]
  },
  {
    "regex": "not:\\s?",
    "refactor_regex": "not:\\s{0,1}",
    "5_correct_answers": [
      "not:",
      "not:",
      "not:",
      "not:",
      "not:"
    ],
    "5_incorrect_answers": [
      "n@t:",
      "net4",
      "n\\B:",
      "nOtR",
      "8wt:"
    ]
  },
  {
    "regex": "angular-animate",
    "refactor_regex": "(angular-animate)",
    "5_correct_answers": [
      "angular-animate",
      "angular-animate",
      "angular-animate",
      "angular-animate",
      "angular-animate"
    ],
    "5_incorrect_answers": [
      "angClar-animate",
      "angular]an_mote",
      "aXgular-@nimate",
      "angelarAanimate",
      "angu+ar-Qnimate"
    ]
  },
  {
    "regex": "^(\\w+://[^/]+).*",
    "refactor_regex": "^[a-zA-Z\\d_]{1,}://[^/]{1,}.*",
    "5_correct_answers": [
      "G://?K",
      "jw://Gi<\\_n(t@r*:bjd<md\\b",
      "XT://GD3ETa@@v",
      "6://5UKu'$R/1W+P),a.Fx#OEz9",
      "Fwy8://g>kJ^>-jS*t0eYJ)CKEIJ[[;ex."
    ],
    "5_incorrect_answers": [
      "G7//?^",
      "jw>//Gi<\\_n(t@r*:bjd<md\\b",
      "XD:/ GD3ETa@@v",
      "6}//5UKu'$R/1W+0),a.Fx#OEz9",
      "#wy8://g>kJ^>-jS*t0eYJ)CKEIJ[[;ex."
    ]
  },
  {
    "regex": "^(?:default)",
    "refactor_regex": "^default",
    "5_correct_answers": [
      "default",
      "default",
      "default",
      "default",
      "default"
    ],
    "5_incorrect_answers": [
      "defaxlt",
      "defabat",
      "de/(ult",
      "d$fRult",
      "x9fault"
    ]
  },
  {
    "regex": "s|\\.",
    "refactor_regex": "[s.]",
    "5_correct_answers": [
      "s",
      ".",
      ".",
      ".",
      "s"
    ],
    "5_incorrect_answers": [
      "9",
      "-",
      "]",
      "8",
      "^"
    ]
  },
  {
    "regex": "\\b(transform)\\b",
    "refactor_regex": "\\btransform\\b",
    "5_correct_answers": [
      "transform",
      "transform",
      "transform",
      "transform",
      "transform"
    ],
    "5_incorrect_answers": [
      "trac2form",
      "t%anZfor ",
      "t8an[for?",
      "tr3nsforA",
      "tSansfoVm"
    ]
  },
  {
    "regex": "[-a-zA-Z0-9 ._]+$",
    "refactor_regex": "(-|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|0|1|2|3|4|5|6|7|8|9| |\\.|_)(-|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|0|1|2|3|4|5|6|7|8|9| |\\.|_){0,}$",
    "5_correct_answers": [
      "VtQ",
      "V8R3-uFbWJEgONg",
      "rIfc",
      "7-7MQyMQS_LqE-Cf_D",
      "5T_tuwCI"
    ],
    "5_incorrect_answers": [
      "Vz@",
      "V8R3-|FbWJEgONh",
      "rIf@",
      "7-7M0yMQS_LqE-Cv$D",
      "53_tu\\5I"
    ]
  },
  {
    "regex": "href=\\\"/watch\\?v=.*?&",
    "refactor_regex": "(href=)\\\"(/watch)((\\?))(v=).*?&",
    "5_correct_answers": [
      "href=\"/watch?v=fV$Gv)#cr/B:1wgeh &",
      "href=\"/watch?v=\\q#N&",
      "href=\"/watch?v='Fh;;I?=6&",
      "href=\"/watch?v=&",
      "href=\"/watch?v=;Wa\"' _.)y&"
    ],
    "5_incorrect_answers": [
      "href=\"/watcZ?v=fV$Gv)#cr/B:1wDen &",
      ")ref=\"/watch?v=8q#N&",
      "href=\"/watch?v='Fh+;I?=6x",
      "jref_\"/watch?v=&",
      "href=\"7watch?v=;Wa\"' _.)y&"
    ]
  },
  {
    "regex": "\\.markdown-body[>:].+",
    "refactor_regex": "(\\.)markdown-body(>|:).+",
    "5_correct_answers": [
      ".markdown-body>M^#uE\\sAW. 'p>mIZ0",
      ".markdown-body:R:JZ=\"QB.#LPo@z(0X",
      ".markdown-body:>f[m",
      ".markdown-body:8(%7bd#/\"",
      ".markdown-body>_:sUm`!c0fIL9"
    ],
    "5_incorrect_answers": [
      ".\\arkdown-body>M^#uE\\sAV. 'p>mIZ0",
      ".markdown-b6dy:R:J>=\"QB.#LPo@z(0X",
      ".markdown-bod>:>f[m",
      ".markdown-b$dy78(%7bd#/\"",
      ".mBrkdown-body>_:sUm`!{0fIL9"
    ]
  },
  {
    "regex": "tan\\^-1",
    "refactor_regex": "(tan)\\^(-1)",
    "5_correct_answers": [
      "tan^-1",
      "tan^-1",
      "tan^-1",
      "tan^-1",
      "tan^-1"
    ],
    "5_incorrect_answers": [
      "K-n^-q",
      "Man^-1",
      "8an^-1",
      "ban^-_",
      "ta0^-G"
    ]
  },
  {
    "regex": "\"[\\s]+\"",
    "refactor_regex": "\"( |\\t|\\n|\\r|\\f|\\v){1,}\"",
    "5_correct_answers": [
      "\" \"",
      "\" \"",
      "\" \"",
      "\" \"",
      "\" \""
    ],
    "5_incorrect_answers": [
      "\"6d",
      "+ \"",
      "\"Bk",
      "\"[>",
      "1 N"
    ]
  },
  {
    "regex": "\" target=\"_blank\" rel=\"noopener\">",
    "refactor_regex": "(\" target=\"_blank\" rel=\"noopener\">)",
    "5_correct_answers": [
      "\" target=\"_blank\" rel=\"noopener\">",
      "\" target=\"_blank\" rel=\"noopener\">",
      "\" target=\"_blank\" rel=\"noopener\">",
      "\" target=\"_blank\" rel=\"noopener\">",
      "\" target=\"_blank\" rel=\"noopener\">"
    ],
    "5_incorrect_answers": [
      "\" target7\"_blank\" rel=\"noopener\"B",
      "\" target=\"yblank\" relo\"noopener\">",
      "\" target=\"_blank\" rel=znoopeber\">",
      "\" trrget!\"_blank\" rel=\"noopener\">",
      "\" targbt=\">blank\"orel=\"noopener\">"
    ]
  },
  {
    "regex": "expects role to be",
    "refactor_regex": "(expects role to be)",
    "5_correct_answers": [
      "expects role to be",
      "expects role to be",
      "expects role to be",
      "expects role to be",
      "expects role to be"
    ],
    "5_incorrect_answers": [
      "e0pMcts role to be",
      "expe[ts 8ole to be",
      "etpectV role _o be",
      "exiects role to bO",
      "e&pects role qo }e"
    ]
  },
  {
    "regex": "bstyle",
    "refactor_regex": "(bstyle)",
    "5_correct_answers": [
      "bstyle",
      "bstyle",
      "bstyle",
      "bstyle",
      "bstyle"
    ],
    "5_incorrect_answers": [
      "bs_)le",
      "bs'yle",
      "b7t4le",
      "b>tvle",
      "b3/yle"
    ]
  },
  {
    "regex": "RUB|USD|EUR|undefined",
    "refactor_regex": "(RUB|USD|EUR|undefined)",
    "5_correct_answers": [
      "USD",
      "RUB",
      "EUR",
      "RUB",
      "RUB"
    ],
    "5_incorrect_answers": [
      "(iD",
      ":&/",
      "EUy",
      "RUo",
      "S^B"
    ]
  },
  {
    "regex": "<!-- APP_DEBUG_MODE -->",
    "refactor_regex": "(<!-- APP_DEBUG_MODE -->)",
    "5_correct_answers": [
      "<!-- APP_DEBUG_MODE -->",
      "<!-- APP_DEBUG_MODE -->",
      "<!-- APP_DEBUG_MODE -->",
      "<!-- APP_DEBUG_MODE -->",
      "<!-- APP_DEBUG_MODE -->"
    ],
    "5_incorrect_answers": [
      "<!-- APP_DEBUa_MO @ -->",
      "<!-- APP_DEBUG_MODE K->",
      "<!-- APPPDEBUG_MODE 4->",
      "<!-` APP_DEBUG_MODET-->",
      "<!-- APP_DEBwG_MODE -->"
    ]
  },
  {
    "regex": "^\\d+-.*\\.md$",
    "refactor_regex": "^[0-9]+-.*[.](md)$",
    "5_correct_answers": [
      "821906382518516-T;lm/-Re5.md",
      "7144008-ekH+:(dndj 6BDYD\\dP\"B.md",
      "068873633-S.#2^4D8d+r&4gi.ch.md",
      "78571-GpR'WuN)6LF)kAs@.md",
      "60114-Mt](Q4kl4'Qk3qMjD+qeXRO.md"
    ],
    "5_incorrect_answers": [
      "K21r06382518516NT;lm/-Re5.md",
      "7!44008-ekH+:(dndj 6BDYD\\dP\"B.md",
      "068873633-S.#2^4D8d+r&4ti.ch.Dd",
      "78571-GpR'WuN)6LF)kAs@.yd",
      "6$114-Mt](Q4kt4'Qk3qMjD+qeXRO.md"
    ]
  },
  {
    "regex": "#(.+)#",
    "refactor_regex": "#.{1,}#",
    "5_correct_answers": [
      "#Ay$w#",
      "#v[Ay%3T!x1$GXlQR(ibU#",
      "#S:qg5W@ph9m_9R;e_[;+##",
      "#Kt[3 #0#",
      "#=ZnC5<R`_K#s%P#"
    ],
    "5_incorrect_answers": [
      "OAy)w#",
      "#v[Ay%3T!x1$GXlQR(ibU-",
      "HS:q15W@ph9m_9R;e_[;+##",
      " Kt[3 #0m",
      "D=Z@C5<R#_K#s%P#"
    ]
  },
  {
    "regex": "{id: \"(embedded\\d+)\"}",
    "refactor_regex": "{id: \"embedded\\d\\d*\"}",
    "5_correct_answers": [
      "{id: \"embedded459127418139154721\"}",
      "{id: \"embedded0\"}",
      "{id: \"embedded0559299\"}",
      "{id: \"embedded98250392\"}",
      "{id: \"embedded692\"}"
    ],
    "5_incorrect_answers": [
      "{id: \"embe6ded45n127418d39154721\"}",
      "Wid: \"e(b%dded0\"}",
      "{%d: \"embedded0559299\"}",
      "{id: \"embedded98250392I}",
      "{id: \"embedAed692\"}"
    ]
  },
  {
    "regex": "ERR",
    "refactor_regex": "(ERR)",
    "5_correct_answers": [
      "ERR",
      "ERR",
      "ERR",
      "ERR",
      "ERR"
    ],
    "5_incorrect_answers": [
      "ER]",
      "MaR",
      "E@f",
      "KWR",
      "E^R"
    ]
  },
  {
    "regex": ".js(\\?\\w*)?$",
    "refactor_regex": ".js(\\?[a-zA-Z0-9_]*)?$",
    "5_correct_answers": [
      "4js",
      "Tjs",
      "vjs",
      "wjs",
      "Zjs"
    ],
    "5_incorrect_answers": [
      "Sj9",
      "(hs",
      "MNs",
      "wj:",
      "+HN"
    ]
  },
  {
    "regex": "[0-9]+.[0-9]+.[0-9]+",
    "refactor_regex": "[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*",
    "5_correct_answers": [
      "206849w069727704042D51465334",
      "807X595257762904420>2225544",
      "73126072449+241464$997",
      "36028273890[2782736A55152300877",
      "79%22522027665039419948J57"
    ],
    "5_incorrect_answers": [
      "J06849w0297A7704042D51465334",
      "807XW(5257762904420>222554%",
      "%31260724E9+241464$^97",
      "q60282_3890[2782j36A55152300877",
      "w9%2252202I665039419948JG7"
    ]
  },
  {
    "regex": "^[A-Z0-9_]+$",
    "refactor_regex": "^(A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|0|1|2|3|4|5|6|7|8|9|_)+$",
    "5_correct_answers": [
      "DA8GIM9W65KU",
      "8R66FI816SKFBJDE51_38XN",
      "BOKW_MQTUHCZ",
      "QM6ZR6YB7BSZH5JU",
      "843GYRWHR__ZMVO"
    ],
    "5_incorrect_answers": [
      "8T8GIM9W6$KU",
      "8R6qFg816SKFBJDEa1_38XN",
      "BOKW_MQTU:CZ",
      "QM6ZR6YB7;SpH5JU",
      "843GYRWHR__ZMV<"
    ]
  },
  {
    "regex": "Mozilla.*?Mobile.*?Gecko.*?Firefox",
    "refactor_regex": "(Mozilla).*?(Mobile).*?(Gecko).*?(Firefox)",
    "5_correct_answers": [
      "MozillaprMobileGeckoSRFirefox",
      "Mozilla5 Mobile)GeckoKU.(Firefox",
      "MozillaMobile6tyxbC-A_GeckoFirefox",
      "MozillaDUYMobile*RDGecko2O#Firefox",
      "MozillaW$Mobile@hAiGecko ]Firefox"
    ],
    "5_incorrect_answers": [
      "MozillapryobileGeckoSRFir+fox",
      "Mozil-a5 Mobile(GeckoqU.(Firefox",
      "MozillaM0bile6tyxbC-A_GeckoFirefox",
      "MozillaDUYMobile*RDGecko9O#Fire|ox",
      "MozillaW$Mobile@hAiGscko ]Fire3ox"
    ]
  },
  {
    "regex": "[^'\",\\s]+",
    "refactor_regex": "[^'\", \\t\\n\\r\\f\\v][^'\", \\t\\n\\r\\f\\v]{0,}",
    "5_correct_answers": [
      "L?CPn1",
      "uxgL",
      "dO\\$j>2h",
      "h",
      "Ug:cE"
    ],
    "5_incorrect_answers": [
      ",?CPn2",
      " xgL",
      "'O\\$j>)h",
      "'",
      "\"g:cE"
    ]
  },
  {
    "regex": "file-[0-9a-f]{3}\\.js",
    "refactor_regex": "file-(0|1|2|3|4|5|6|7|8|9|a|b|c|d|e|f)(0|1|2|3|4|5|6|7|8|9|a|b|c|d|e|f)(0|1|2|3|4|5|6|7|8|9|a|b|c|d|e|f)\\.js",
    "5_correct_answers": [
      "file-25f.js",
      "file-be5.js",
      "file-bc4.js",
      "file-129.js",
      "file-38e.js"
    ],
    "5_incorrect_answers": [
      "file-gRf.is",
      "file-be5&)Q",
      "file-bc4.jR",
      "filW-n29.js",
      "Xil@-38e.js"
    ]
  },
  {
    "regex": "referenced but not called",
    "refactor_regex": "(referenced but not called)",
    "5_correct_answers": [
      "referenced but not called",
      "referenced but not called",
      "referenced but not called",
      "referenced but not called",
      "referenced but not called"
    ],
    "5_incorrect_answers": [
      "referenceq but not call8d",
      "refezenued but not called",
      "referenced but notocalled",
      "referenced but not(called",
      "re^erenced but not called"
    ]
  },
  {
    "regex": "^https:[/][/]",
    "refactor_regex": "^https://",
    "5_correct_answers": [
      "https://",
      "https://",
      "https://",
      "https://",
      "https://"
    ],
    "5_incorrect_answers": [
      "*/tps:/`",
      "ptBps://",
      "h;}es://",
      "htspso//",
      "Wttps://"
    ]
  },
  {
    "regex": "['\"<>&`]",
    "refactor_regex": "('|\"|<|>|&|`)",
    "5_correct_answers": [
      "\"",
      "`",
      "\"",
      "\"",
      "&"
    ],
    "5_incorrect_answers": [
      " ",
      "w",
      "H",
      "q",
      "G"
    ]
  },
  {
    "regex": "^\\?([\\d\\w]+)$",
    "refactor_regex": "^\\?((\\d|\\w)+)$",
    "5_correct_answers": [
      "?C",
      "?U",
      "?7",
      "?i",
      "?aJ"
    ],
    "5_incorrect_answers": [
      "Ry",
      "p&",
      "D7",
      "oi",
      "!a3"
    ]
  },
  {
    "regex": "/(about|contact)?$",
    "refactor_regex": "/(about|contact|)$",
    "5_correct_answers": [
      "/",
      "/about",
      "/contact",
      "/",
      "/contact"
    ],
    "5_incorrect_answers": [
      "7",
      "aa`oVt",
      "/contac~",
      "H",
      "/9ontac9"
    ]
  },
  {
    "regex": "^src/features/[^/]+/index\\.js$",
    "refactor_regex": "^src/features/[^/][^/]*/index[.]js$",
    "5_correct_answers": [
      "src/features/l'D,Bmo/index.js",
      "src/features/e\\.%CaT#xZ:b/index.js",
      "src/features/D_/index.js",
      "src/features/r3qr)/index.js",
      "src/features/Z@Sq/index.js"
    ],
    "5_incorrect_answers": [
      "src/features l'DgBmoyindex.js",
      "src/f%atures/e\\.%CaT#xZ:b/index.js",
      "src/fePtures/D_/index.js",
      "src/features/r3.r[/inde,.js",
      "src/features/Z@5q/iLdex.js"
    ]
  },
  {
    "regex": "^(?:preset_rename\\b)",
    "refactor_regex": "^(preset_rename\\b)",
    "5_correct_answers": [
      "preset_rename",
      "preset_rename",
      "preset_rename",
      "preset_rename",
      "preset_rename"
    ],
    "5_incorrect_answers": [
      "prDset_cFname",
      "preset_r[name",
      "preset_renam1",
      "preset_gename",
      "pAeset_rename"
    ]
  },
  {
    "regex": "<\\?xml (.*?)\\?>",
    "refactor_regex": "<\\?(xml ).*?\\?>",
    "5_correct_answers": [
      "<?xml xfMx\\IEA gU'_;!?A6Jg40?>",
      "<?xml 2%x0,zsQc'?>",
      "<?xml PHK?>",
      "<?xml y84xWw1U?>",
      "<?xml DlJ'Eb<3+!)P25?>"
    ],
    "5_incorrect_answers": [
      "<?xmY xfex\\IEA gU'_;!?A6Jg40?>",
      "<?xfl 2%x0,zsQc'?>",
      "<?#ml PHK?>",
      ")?xml y84xWw1U?>",
      "*?xml DlJ'Eb<3+!)P25?>"
    ]
  },
  {
    "regex": "^(.*?)=(.+?),.*$",
    "refactor_regex": "^.*?=.{1,}?,.*$",
    "5_correct_answers": [
      "zn=fY_/,5J.$%#o",
      "S9=,)!Fv,I/_c>:ZMSN,s",
      "=;&p*\"j,:K E",
      "twN3@=J,X=<xPBSbI@?Fkyko/I52,m sO",
      ")7 #4x!jOi,H=Rn=/B,g';"
    ],
    "5_incorrect_answers": [
      "zn=fY_/h5J=$%#o",
      "S9R,)!Fv,L/_c>:ZMSN,s",
      "=;&p*njR:K E",
      "twN3@7J,XX<xPBSbI@?Fkyko/I52,m s~",
      ")7 #MxxjOi,H=Rn=/B7g';"
    ]
  },
  {
    "regex": "RAX_SERVICENET_IPV4",
    "refactor_regex": "(RAX_SERVICENET_IPV4)",
    "5_correct_answers": [
      "RAX_SERVICENET_IPV4",
      "RAX_SERVICENET_IPV4",
      "RAX_SERVICENET_IPV4",
      "RAX_SERVICENET_IPV4",
      "RAX_SERVICENET_IPV4"
    ],
    "5_incorrect_answers": [
      "RAw_ScRVICENET_IPV4",
      "RAX_SERVICQZET_IPVb",
      "RAP_SlRVICENET_I\\V4",
      "R1X_SERVICENET_IPV4",
      "RAX_SERVICE;ET_WPV4"
    ]
  },
  {
    "regex": "^([^:]+)(?::(\\d+))?$",
    "refactor_regex": "^([^:]+)(:(\\d+)){0,1}$",
    "5_correct_answers": [
      "^ciw]8D0xiShE=\"s'9A']>y",
      "<=I7n%nHtq-T5",
      "F)Y)v'Ezjw%n:14416109",
      " ",
      "7UU8(RP3=T:59"
    ],
    "5_incorrect_answers": [
      "^cuw]8D0xiShE=\"s'9A4]>:",
      "<=I7;%nHt:-T5",
      "F)Y)v'pzjw%n:1%416109",
      ":",
      "7UU8(RP3=T:5Q"
    ]
  },
  {
    "regex": "bootstrap-sass",
    "refactor_regex": "(bootstrap-sass)",
    "5_correct_answers": [
      "bootstrap-sass",
      "bootstrap-sass",
      "bootstrap-sass",
      "bootstrap-sass",
      "bootstrap-sass"
    ],
    "5_incorrect_answers": [
      "boogstrap-sass",
      "b}otstrap-sass",
      "bootscrap-saF,",
      "bobtstr\"t-sass",
      "bootslraN-sass"
    ]
  },
  {
    "regex": "__data__",
    "refactor_regex": "(__data__)",
    "5_correct_answers": [
      "__data__",
      "__data__",
      "__data__",
      "__data__",
      "__data__"
    ],
    "5_incorrect_answers": [
      ":_dara__",
      "__datJ__",
      "__da!a__",
      "__daza__",
      "__dCta__"
    ]
  },
  {
    "regex": "OFFSET (\\d+)",
    "refactor_regex": "OFFSET ([0-9]{1,})",
    "5_correct_answers": [
      "OFFSET 592562660",
      "OFFSET 6923213761717161795970076",
      "OFFSET 2126356237",
      "OFFSET 24072",
      "OFFSET 279025144886228"
    ],
    "5_incorrect_answers": [
      "OFFS-Ti592562h60",
      "OFF|ET 69232137617171617T5970076",
      "OFASET 21(6356237",
      "OwFSET 540T2",
      "OFFSET S79025144A86528"
    ]
  },
  {
    "regex": "type parameter `.+` is unused",
    "refactor_regex": "type parameter `.{1,}` is unused",
    "5_correct_answers": [
      "type parameter `#` is unused",
      "type parameter `q,Vg` is unused",
      "type parameter `d:>UiI` is unused",
      "type parameter `-W/` is unused",
      "type parameter `YxayM\"h` is unused"
    ],
    "5_incorrect_answers": [
      "type param*ter `7` is unuseM",
      "typ% parametor `q,Vg` is unuseT",
      "type par&,eter `d:>UiI` ks unused",
      "type param]ter `-W/` is unused",
      "type parameter `YxFyM\"h` is un*sed"
    ]
  },
  {
    "regex": "^([a-z\\d]+).ddv.json$",
    "refactor_regex": "^([a-z0-9]+).ddv.json$",
    "5_correct_answers": [
      "ty1k2haoyxz8xddv7json",
      "2taa3b9j81a3iodg8gddvojson",
      "1ssk9oddvejson",
      "n8m3u6kecaw20s2fsuzddvfjson",
      "3t2im6hzsa5a3yc7cmqu50yvgQddvbjson"
    ],
    "5_incorrect_answers": [
      "ty1k2haoyx!8xdd67jgon",
      "2taa3b9j81a3iodg{gddvojson",
      "1ssk9:ddvejsot",
      "n8m3u6kecaw20s2fsuoddvfjsln",
      "3t2im6Czsa5a3yc7cmqu50tvgQddvb*son"
    ]
  },
  {
    "regex": "(<office:document[^>]*>)",
    "refactor_regex": "(<office:document)[^>]*>",
    "5_correct_answers": [
      "<office:document[p>",
      "<office:document>",
      "<office:documentwBdk/9*c@D>",
      "<office:document>",
      "<office:document]=^(UqAPwTt*Y$3C>"
    ],
    "5_incorrect_answers": [
      "<oqfice:docuSent[p>",
      "<ofZice:document>",
      "<office:dobumintEBdk/9*c@D>",
      "<o>fice:document>",
      "<office:documen;]=^(UqAPwTt*Y$3C>"
    ]
  },
  {
    "regex": "^([\\s\\S]+)\\?$",
    "refactor_regex": "^([ \\t\\n\\r\\f\\v\\S][ \\t\\n\\r\\f\\v\\S]*)[?]$",
    "5_correct_answers": [
      " ?",
      " ?",
      " ?",
      " ?",
      " ?"
    ],
    "5_incorrect_answers": [
      " 6",
      " :",
      "[\"",
      " *",
      "[V"
    ]
  },
  {
    "regex": "^[\" \"\\t]",
    "refactor_regex": "^(\"| |\"|\\t)",
    "5_correct_answers": [
      "\"",
      " ",
      " ",
      "\"",
      "\""
    ],
    "5_incorrect_answers": [
      "V",
      "f",
      "]",
      "L",
      ";"
    ]
  },
  {
    "regex": "\\w+(?:fO/o)",
    "refactor_regex": "\\w{1,}fO/o",
    "5_correct_answers": [
      "BfO/o",
      "QFvfO/o",
      "YkW1pfO/o",
      "xGfO/o",
      "uJfO/o"
    ],
    "5_incorrect_answers": [
      "BfO/[",
      "QFvfOKE",
      "YCW1wfO/t",
      "qGrO/o",
      "uJPO/o"
    ]
  },
  {
    "regex": ".*\\.tar\\.gz",
    "refactor_regex": ".*([.]tar[.]gz)",
    "5_correct_answers": [
      "Hy5!io%eXaDNORdBMv/.tar.gz",
      "p8/6I*y+' PLPu#a)'&v.tar.gz",
      "yS >m>o>)uI.Sm)#^q.tar.gz",
      "5n3rCw@ZYYWWXZI;)rC< .tar.gz",
      "Il\\o0<\"dc&%\"&dB.tar.gz"
    ],
    "5_incorrect_answers": [
      "H85!io%e4aDNORdBMv/xtar.gz",
      "p8/6I*y+' PLPu#a)'&v.t7r.gU",
      "yS >m>Q>)uI.Lm)#^qotar.gz",
      "5^3rCw@ZYYWWXZI;)rC< Atar.gz",
      "Il\\o0<\"ZcW%\"&dButar.gz"
    ]
  },
  {
    "regex": "[=><!~&|+\\-*/\\^%]+",
    "refactor_regex": "(=|>|<|!|~|&|[|]|\\+|\\-|\\*|/|\\^|%){1,}",
    "5_correct_answers": [
      "<|/&-!|<|^",
      "^+~=%~%<&!",
      "^>&-*>*/",
      "+/</><^--!%%^/=^*<%",
      "^---^<&-"
    ],
    "5_incorrect_answers": [
      ",|/&-!|<#^",
      "6+~=C~%<&!",
      "'>&-*J*/",
      "ZZN/><^--!%%^/=^*<%",
      "w---^<Y-"
    ]
  },
  {
    "regex": "([A-Za-z][a-zA-Z0-9'. ]*)+",
    "refactor_regex": "[A-Za-z][a-zA-Z0-9'. ]*([A-Za-z][a-zA-Z0-9'. ]*)*",
    "5_correct_answers": [
      "BuwExjCfZGLJBYNB'vZd'Tc",
      "E7znI0HVStQz06I0UQT Cr'.YifIPO9",
      "CRVCJrCxAUlPsE RW0GkOM6NisM3EX",
      "TQQLbgaSSfw9lQf2Ex8 It589TAruKXrx",
      "E'fgCUO2QFH.edoPawd0Bxxm3KfvR5"
    ],
    "5_incorrect_answers": [
      "<uwExjCfZGL2BYNB'vLd'Tc",
      "=7znI0HVStQz06I0UGT Cr'.Yif\\PO9",
      ",RVCJrCxAUlPsE RW0GkOM6NisM3EX",
      " QQLbgaSSfw9lQf2Ex8 It589TAruKXrx",
      "1'fgCUO2QF2.edoPawd0Bexm3KfvR5"
    ]
  },
  {
    "regex": "\\'re",
    "refactor_regex": "\\'(re)",
    "5_correct_answers": [
      "'re",
      "'re",
      "'re",
      "'re",
      "'re"
    ],
    "5_incorrect_answers": [
      "'\\t",
      "'rJ",
      "'&e",
      "'~e",
      "' e"
    ]
  },
  {
    "regex": "^(?:CODE\\b)",
    "refactor_regex": "^(CODE)\\b",
    "5_correct_answers": [
      "CODE",
      "CODE",
      "CODE",
      "CODE",
      "CODE"
    ],
    "5_incorrect_answers": [
      "NdDD",
      "COD)",
      "CODX",
      "COIE",
      "CD7E"
    ]
  },
  {
    "regex": "^(?:[^\\t\\r\\n>]+)",
    "refactor_regex": "^[^\\t\\r\\n>][^\\t\\r\\n>]*",
    "5_correct_answers": [
      "0;",
      "swHb-:XNB -Y",
      "XM",
      "RXR@",
      "tI$ZX/"
    ],
    "5_incorrect_answers": [
      ">;",
      ">wHb-:XNB -Y",
      ">C",
      ">{1@",
      ">I$ZX/"
    ]
  },
  {
    "regex": "^\\s+|\\s+$/",
    "refactor_regex": "^\\s{1,}|\\s{1,}$/",
    "5_correct_answers": [
      " /",
      "  ",
      " ",
      " /",
      " /"
    ],
    "5_incorrect_answers": [
      "t/",
      "a ",
      "T",
      "N/",
      "XQ"
    ]
  },
  {
    "regex": "(^|[^:\\w]):(\\w{1,4})",
    "refactor_regex": "(^|[^:a-zA-Z\\d_]):([a-zA-Z\\d_][a-zA-Z\\d_]?[a-zA-Z\\d_]?[a-zA-Z\\d_]?)",
    "5_correct_answers": [
      "@:t",
      "):Hc",
      ":B",
      "^:S",
      ":Gw"
    ],
    "5_incorrect_answers": [
      "@At",
      "Y|H[",
      "bQ",
      "^:+",
      "lCw"
    ]
  },
  {
    "regex": "<(.*?)>$",
    "refactor_regex": "<.*?>$",
    "5_correct_answers": [
      "<C>#xE@!/r\"czU!>",
      "<WoNXC]kGe*Qn0r_x7DGM=&X7>",
      "<B-nK&d>",
      "<5eq7-syfZHVL^uMus(C(>",
      "<YM'/ +f_BL>"
    ],
    "5_incorrect_answers": [
      "BC>#x_@!/r\"czU!>",
      "<WoNXC]kGe*Qn0r_E7DGM{&X7G",
      "<B-n'&d3",
      "<5eq7lsyfZHVL^uMus(C(o",
      "<YM</ +f_Bwr"
    ]
  },
  {
    "regex": "::[\\w ]+$",
    "refactor_regex": "::[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_ ]+$",
    "5_correct_answers": [
      "::y",
      "::yb",
      "::B",
      "::I",
      "::C"
    ],
    "5_incorrect_answers": [
      "i:L",
      "{:y^",
      "R4B",
      "::(",
      "6hC"
    ]
  },
  {
    "regex": "([0-9]+ - [0-9]+)",
    "refactor_regex": "(\\d(\\d+)? - \\d(\\d+)?)",
    "5_correct_answers": [
      "0137 - 8115953969812",
      "85794816215115682145009 - 87389295",
      "153532456142 - 728077077381126859",
      "00545070615556819 - 00538186135423",
      "1294669665 - 197138726732576628"
    ],
    "5_incorrect_answers": [
      "0137 - n11595m969812",
      "85?948!6215115682145009 - 87389295",
      "153532456<42 - 728077077381126859",
      "00545(7061.556819 - 00538186135423",
      "12946{9665 - 197!38726732576628"
    ]
  },
  {
    "regex": "^there was",
    "refactor_regex": "^(there was)",
    "5_correct_answers": [
      "there was",
      "there was",
      "there was",
      "there was",
      "there was"
    ],
    "5_incorrect_answers": [
      "there w,s",
      "the1e Vas",
      "Chere wC'",
      ".here was",
      "there Eas"
    ]
  },
  {
    "regex": "versioning|command",
    "refactor_regex": "((versioning)|(command))",
    "5_correct_answers": [
      "versioning",
      "versioning",
      "command",
      "versioning",
      "command"
    ],
    "5_incorrect_answers": [
      "Cers%oning",
      "versioVjmg",
      "cO0mafd",
      "vers!oninC",
      "co.maXd"
    ]
  },
  {
    "regex": "[\\][,]",
    "refactor_regex": "\\]|\\[|,",
    "5_correct_answers": [
      "[",
      "]",
      "[",
      "]",
      "["
    ],
    "5_incorrect_answers": [
      "J",
      "I",
      "4",
      "V",
      "z"
    ]
  },
  {
    "regex": "\\{\\(([^)\\n]+)\\)\\}=",
    "refactor_regex": "\\{\\([^)\\n][^)\\n]{0,}\\)\\}=",
    "5_correct_answers": [
      "{(11(7)}=",
      "{(d4\"N-`')}=",
      "{(9q8<)}=",
      "{(CxKRQYY//oS3q)}=",
      "{(Mn0wcL)}="
    ],
    "5_incorrect_answers": [
      "{(11(7*}=",
      "{(d4\"N}`')}+",
      "N(9q8<)}=",
      "{(C>KRQYY//oS3q4}T",
      "n(Mn0wcL)}="
    ]
  },
  {
    "regex": "^fbOutline\\w$",
    "refactor_regex": "^(fbOutline)\\w$",
    "5_correct_answers": [
      "fbOutline3",
      "fbOutlinen",
      "fbOutlineu",
      "fbOutlinem",
      "fbOutline1"
    ],
    "5_incorrect_answers": [
      "ibOutline3",
      "fbOutlUnen",
      "BbOutlineu",
      "fbOutlhnem",
      "fbOutl:neb"
    ]
  },
  {
    "regex": "</(html|head|body|link)\\>",
    "refactor_regex": "(</html|</head|</body|</link)\\>",
    "5_correct_answers": [
      "</link>",
      "</html>",
      "</link>",
      "</html>",
      "</head>"
    ],
    "5_incorrect_answers": [
      "</li7k>",
      "e/html>",
      "<r$in]>",
      "#/htRl>",
      "</hetd>"
    ]
  },
  {
    "regex": "Field \".+\" is missing",
    "refactor_regex": "Field \".{1,}\" is missing",
    "5_correct_answers": [
      "Field \"FjFt@uRpKXWhzo@\" is missing",
      "Field \"Vffc_5XNB$wtv \" is missing",
      "Field \")D\" is missing",
      "Field \"h5+*?bToV!Nf\" is missing",
      "Field \"\\\" is missing"
    ],
    "5_incorrect_answers": [
      "Jield \"FjFt@uRpKXWhzo@\" is3missi4g",
      "uield \"Vffc_5XNB$wtv \" is missing",
      "Fie]d \")D\" isDmissing",
      "Field \"h5+*?]ToV!Nf\" is Kis`ing",
      "Field \"\\\"Mis missing"
    ]
  },
  {
    "regex": "^44",
    "refactor_regex": "^(44)",
    "5_correct_answers": [
      "44",
      "44",
      "44",
      "44",
      "44"
    ],
    "5_incorrect_answers": [
      "gx",
      ">E",
      "P4",
      ">n",
      "ca"
    ]
  },
  {
    "regex": "propset_(.*?)\\((.*?)\\)",
    "refactor_regex": "(propset_)(.*?)\\((.*?)\\)",
    "5_correct_answers": [
      "propset_[(5sJ)",
      "propset_^y^4cew2Oh_p-(WWCjxO)",
      "propset_lTqKH(r%p>_<9)",
      "propset_JZT]B-)]Yoy\"()",
      "propset_Z@/(%;0uw'm4!:(>?`1MQCHe)"
    ],
    "5_incorrect_answers": [
      "pXSpset_[(5sJ)",
      "promset_gy^4cew2Oh_pW(WWCjxO)",
      "propset_lTqKH(r%p>_<9?",
      "pr6pset_JZT]B-)xYoy\"()",
      "prHfset_Z@/(X;0uw'm4!:(>?`1MQCHe)"
    ]
  },
  {
    "regex": "/\\*[^\\*]*\\*/",
    "refactor_regex": "/[*][^\\*]{0,}[*]/",
    "5_correct_answers": [
      "/*$Tk*/",
      "/*Q\"l!pWHV8TG: LPT=-T?Wm.*/",
      "/* )BpkF]4FG>Q]+&enV1g<<ZI*/",
      "/*D<u?U5zC#2P;k62U`*/",
      "/*web(yF*/"
    ],
    "5_incorrect_answers": [
      "j*$TE*/",
      "/|Q\"l!pWHV8TG: LsT=-T??m.*/",
      "/% )BpkF]4FG>Q]+&enV1;<<ZI*/",
      "/jD<u?U56C#2P;k62U`*/",
      "/6weN(yL*/"
    ]
  },
  {
    "regex": "<head([^>])*>",
    "refactor_regex": "(<head)(([^>])+)?>",
    "5_correct_answers": [
      "<headI@V'[<(i/bB(!q<x3sUGF.B_>",
      "<headY<E[dd[u>",
      "<headrN>",
      "<headami6+/!>",
      "<head5e4*%oWnD,W8Hq/gC>"
    ],
    "5_incorrect_answers": [
      "<h#adI@V'[,(i/bB(!q<x3sUGF.B_>",
      "<hewdY<EYdd[u>",
      ":hsadr5>",
      "<hepdamiq+/!>",
      "<=ead5e6*%oWnD,W8Hq:gC>"
    ]
  },
  {
    "regex": "private\\b",
    "refactor_regex": "(private)\\b",
    "5_correct_answers": [
      "private",
      "private",
      "private",
      "private",
      "private"
    ],
    "5_incorrect_answers": [
      "pr {fte",
      "privatD",
      "p/iv&te",
      "pr7vaue",
      "privE\"e"
    ]
  },
  {
    "regex": "^[\\t ]*?\\\\(\\w+)[\\t \\-]*",
    "refactor_regex": "^[\\t ]{0,}?\\\\(\\w{1,})[\\t \\-]{0,}",
    "5_correct_answers": [
      "\\6g",
      "  \\I--   ",
      "\\9  -",
      "       \\O",
      "\\O"
    ],
    "5_incorrect_answers": [
      "c@g",
      " u\\{!-   ",
      "=9 W-",
      "   5   \\O",
      "Gy"
    ]
  },
  {
    "regex": "\\.pot$",
    "refactor_regex": "[.]pot$",
    "5_correct_answers": [
      ".pot",
      ".pot",
      ".pot",
      ".pot",
      ".pot"
    ],
    "5_incorrect_answers": [
      "[pot",
      "/pot",
      ".<ot",
      "Jp,(",
      "{pot"
    ]
  },
  {
    "regex": "draggable-\\d+",
    "refactor_regex": "draggable-[0-9]{1,}",
    "5_correct_answers": [
      "draggable-218066914",
      "draggable-36382",
      "draggable-382",
      "draggable-616",
      "draggable-46809394907569"
    ],
    "5_incorrect_answers": [
      "draggablO-21806691\\",
      "dr]ggable-3!38D",
      "draggaYne-3[2",
      "drcggable-616",
      "qraggable-46809394907569"
    ]
  },
  {
    "regex": "SPS",
    "refactor_regex": "(SPS)",
    "5_correct_answers": [
      "SPS",
      "SPS",
      "SPS",
      "SPS",
      "SPS"
    ],
    "5_incorrect_answers": [
      "S_S",
      "Sq,",
      "luS",
      "SP-",
      ";PJ"
    ]
  },
  {
    "regex": "api/products",
    "refactor_regex": "(api/products)",
    "5_correct_answers": [
      "api/products",
      "api/products",
      "api/products",
      "api/products",
      "api/products"
    ],
    "5_incorrect_answers": [
      "api/pr_ducts",
      "afi/Eroducts",
      "axi/products",
      "api/producXs",
      "a=i/productV"
    ]
  },
  {
    "regex": "[0-9a-f]{3}\\Z",
    "refactor_regex": "[0123456789abcdef]{3}\\Z",
    "5_correct_answers": [
      "2ab",
      "2d3",
      "e03",
      "e1a",
      "31e"
    ],
    "5_incorrect_answers": [
      "Jab",
      "2J.",
      "eS3",
      "ePa",
      "_pe"
    ]
  },
  {
    "regex": "__crudName__",
    "refactor_regex": "(__crudName__)",
    "5_correct_answers": [
      "__crudName__",
      "__crudName__",
      "__crudName__",
      "__crudName__",
      "__crudName__"
    ],
    "5_incorrect_answers": [
      "o_c;\\dName__",
      "__cruqN/me__",
      "__c\\udName__",
      "__zrudN#me__",
      "}_cr7TName__"
    ]
  },
  {
    "regex": "[^-]style",
    "refactor_regex": "[^-](style)",
    "5_correct_answers": [
      "Rstyle",
      "0style",
      "vstyle",
      "Rstyle",
      "jstyle"
    ],
    "5_incorrect_answers": [
      "R1tyle",
      "0E:yle",
      "vstpXe",
      "*sqyle",
      "}stya<"
    ]
  },
  {
    "regex": "\\(\\s*?\\)\\s*?$",
    "refactor_regex": "\\([ \\t\\n\\r\\f\\v]{0,}?\\)[ \\t\\n\\r\\f\\v]{0,}?$",
    "5_correct_answers": [
      "()",
      "()",
      "()",
      "()",
      "( )"
    ],
    "5_incorrect_answers": [
      "#)",
      "6I",
      "')",
      "g)",
      "(s)"
    ]
  },
  {
    "regex": "(#N/A)[ ]",
    "refactor_regex": "#N/A",
    "5_correct_answers": [
      "#N/A ",
      "#N/A ",
      "#N/A ",
      "#N/A ",
      "#N/A "
    ],
    "5_incorrect_answers": [
      "#N/Zk",
      "ON(A ",
      "HN/A ",
      "#Y/A ",
      "#%/Ai"
    ]
  },
  {
    "regex": "_pjax=[^&]+&?",
    "refactor_regex": "_pjax=[^&]{1,}&?",
    "5_correct_answers": [
      "_pjax=k3/Jr^rF0R+",
      "_pjax=T7yRfR1C[ex9ef=>Z",
      "_pjax=Y:wdKPZOZH)GL3o/$k7<*!L]&",
      "_pjax=V`'8",
      "_pjax=$9Xe4>BS\\m<4V8gna"
    ],
    "5_incorrect_answers": [
      "_p:aiMk3/Jr^rF0R+",
      "_pjax\"T7yRfR1C[ex9ef=>Z",
      "_pjfx=Y:wdKPZOZH)GL3o/$k7Y*!L]&",
      "rpjNx,V`'8",
      "_pjaS=$9Xe4|BS\\m<3V8gna"
    ]
  },
  {
    "regex": "\\s+\\{",
    "refactor_regex": "[ \\t\\n\\r\\f\\v]+\\{",
    "5_correct_answers": [
      " {",
      "  {",
      " {",
      " {",
      " {"
    ],
    "5_incorrect_answers": [
      "\"{",
      "3x{",
      " t",
      "a{",
      "/{"
    ]
  },
  {
    "regex": "^!delaytells?",
    "refactor_regex": "^(!delaytell)(s){0,1}",
    "5_correct_answers": [
      "!delaytells",
      "!delaytell",
      "!delaytells",
      "!delaytells",
      "!delaytells"
    ],
    "5_incorrect_answers": [
      "!delayt{lls",
      "!delalPell",
      "!dtlayterls",
      "!delcRtells",
      "}aelaytells"
    ]
  },
  {
    "regex": "^(\\d+)(?:\\.(\\d+))?",
    "refactor_regex": "^[0-9]+(\\.([0-9]+))?",
    "5_correct_answers": [
      "70188173607.224851026274869247",
      "6127966.7338228018346166877908760",
      "51907834687811988",
      "4392901926",
      "36666006965552672390347"
    ],
    "5_incorrect_answers": [
      "x)188173607.224851026{74869247",
      "=127966.7338228018346166877908760",
      "x1907Q346[7811988",
      "R3929DO926",
      "$6666B06965552672390347"
    ]
  },
  {
    "regex": "http://([\\w.]+):(\\d+)",
    "refactor_regex": "http://((\\w|\\.)+):(\\d\\d*)",
    "5_correct_answers": [
      "http://F:8335",
      "http://i:6682972037461877534",
      "http://g9Fe6O:6316102920832269456",
      "http://ss:7361605143508286331980",
      "http://sO:038090608989608436205150"
    ],
    "5_incorrect_answers": [
      "Dt!p://F:8335",
      "Rttp://i:66829-2037461.77534",
      "htap://g9Fe6O:6316102920832269456",
      "http:?/ss:7361605;43508286331980",
      "http://sO:g38090608989608436205150"
    ]
  },
  {
    "regex": "horizontal-scroll-",
    "refactor_regex": "(horizontal-scroll-)",
    "5_correct_answers": [
      "horizontal-scroll-",
      "horizontal-scroll-",
      "horizontal-scroll-",
      "horizontal-scroll-",
      "horizontal-scroll-"
    ],
    "5_incorrect_answers": [
      "horizonm:l-scroll-",
      "horiNontal-sAroll-",
      "ho(izontal-scroll-",
      "horizontalns roll-",
      "horizontalc&croll-"
    ]
  },
  {
    "regex": "-[a-z]\\b",
    "refactor_regex": "-[abcdefghijklmnopqrstuvwxyz]\\b",
    "5_correct_answers": [
      "-f",
      "-t",
      "-t",
      "-f",
      "-d"
    ],
    "5_incorrect_answers": [
      "-:",
      "*t",
      "<t",
      "\"=",
      "-*"
    ]
  },
  {
    "regex": "(.*)\\.([0-9]+)(\\.gz)?$",
    "refactor_regex": ".*[.][0-9]+([.]gz|)$",
    "5_correct_answers": [
      ">:2gGbcK.868203",
      "f6Oo 7J/k]$aDH.82794684",
      "<SP&UNEm'Z0j.31",
      "Zn'.316422486505610221153534.gz",
      "O[oxJ_>'MCg+: &PSL.1302.gz"
    ],
    "5_incorrect_answers": [
      "J:2gGbcK.86T20{",
      "f6Lo 7J/k]$aSH.8279s684",
      "<SP&UNEm'ZFj.3\\",
      "Zn'\\31642248650561022115353F.fz",
      "O[oxa_>'MCg+: &PSL.1302.g."
    ]
  },
  {
    "regex": "([pP]lugin.+)\\.py(c?)$",
    "refactor_regex": "(P|p)lugin.+\\.pyc?$",
    "5_correct_answers": [
      "PluginNmc(5.pyc",
      "plugin/s7.py",
      "plugin\"?;&Nh>'nEDFi-Bk%f=QW'6.pyc",
      "PluginIQ23;O?.pyc",
      "Plugins$.pyc"
    ],
    "5_incorrect_answers": [
      "P5uzInNmc(5.pyc",
      "pluXin/k7.py",
      "plug;n\"?;&Nh>'nEDFi-Bk%f=QW'6.pyc",
      "PluginIQn3;O?.fy@",
      "Plugins$.p c"
    ]
  },
  {
    "regex": "[\\.\\w\\-_+/]+\\.\\w+?",
    "refactor_regex": "[\\.a-zA-Z0-9\\-_+/]+\\.[a-zA-Z0-9_]+?",
    "5_correct_answers": [
      "2.n",
      "k.V",
      "1.h",
      "fSa.GbR.Xzc",
      "o+Si.LU"
    ],
    "5_incorrect_answers": [
      "[VN",
      "iF4",
      "[.h",
      "fSaOGbR]Xzc",
      "o=SiPLU"
    ]
  },
  {
    "regex": "\\.(?:bt|bezierCurveTo)\\(.+?\\)",
    "refactor_regex": "[.](bt|bezierCurveTo)\\(.{1,}?\\)",
    "5_correct_answers": [
      ".bt($)",
      ".bt(VNrk[)^(-E7tem*Da)C:*\"y)",
      ".bezierCurveTo(l6CF#pez<)",
      ".bt(dVbpY4!81>7)",
      ".bt(S?k5J)"
    ],
    "5_incorrect_answers": [
      ".bt($I",
      ".bt+VNrk[)^(-(7tem*Da)C:*\"y)",
      "DbezJerCurveEo(l6CF#pez<)",
      ".bt4dVb?Y4!81.7)",
      ".b'(S?k5J)"
    ]
  },
  {
    "regex": "<!--([\\S\\s]*)-->",
    "refactor_regex": "<!--((\\S|\\s){0,})-->",
    "5_correct_answers": [
      "<!---->",
      "<!---->",
      "<!---->",
      "<!---->",
      "<!---->"
    ],
    "5_incorrect_answers": [
      "<!p---A",
      "Z!---->",
      "<_-y-->",
      "<!---F>",
      "<B--|-u"
    ]
  },
  {
    "regex": "\\.gif$",
    "refactor_regex": "([.])(gif)$",
    "5_correct_answers": [
      ".gif",
      ".gif",
      ".gif",
      ".gif",
      ".gif"
    ],
    "5_incorrect_answers": [
      ".f&f",
      "IgiY",
      ".^ii",
      ".gR)",
      ".guf"
    ]
  },
  {
    "regex": "@TaskMem\\((.*?)\\)",
    "refactor_regex": "@TaskMem\\(.*?\\)",
    "5_correct_answers": [
      "@TaskMem(w]EJ/1x-P_)",
      "@TaskMem(wc(>DDMj\\=%.U W2/)",
      "@TaskMem(K<1+-LK#]#lFqjE)",
      "@TaskMem(oDo!\\giVsJ,Zx)",
      "@TaskMem(kAci)"
    ],
    "5_incorrect_answers": [
      "@TaskMeY(w]EJ/1x-P_)",
      "@TaskMemFwc(>DDIj\\=%.U v2/)",
      "@TaUkMem>K<1+-LK#]#0FqjE)",
      "tTaskMeb(oDo!\\giVsJ,Zx)",
      "@TaskMdm(kmci)"
    ]
  },
  {
    "regex": "(?:\\s)?(.*?)=(?:\"|')(.*?)(?:\"|')",
    "refactor_regex": "(|(?:[ \\t\\n\\r\\f\\v])).*?=(?:\"|').*?(?:\"|')",
    "5_correct_answers": [
      "=';E8x/+W7\"",
      " 9c4jC\\3Dt5XH=\"6&Xu>&SO;K\"",
      "lfd!!oxB5fm#!CS'f=` y$VZ=\"Un=<'",
      "a'\"9RK4='y;Dgrai</= jQa[>y'",
      "M?$yw_4TEg=\"16(@eaxOi'"
    ],
    "5_incorrect_answers": [
      "=';I8x/+W~5",
      " 9c4jC\\3Dt5XH!\"6&Xu>&SO;K\"",
      "lfd!!oxB5fm#!CS'f=` y$VZ=\"Un=T?",
      "a'\"9RK4=1y;8grai</= jYa[>y'",
      "M?$yw_4TPg=616(@eaxOi~"
    ]
  },
  {
    "regex": "unknown attribute binding",
    "refactor_regex": "(unknown attribute binding)",
    "5_correct_answers": [
      "unknown attribute binding",
      "unknown attribute binding",
      "unknown attribute binding",
      "unknown attribute binding",
      "unknown attribute binding"
    ],
    "5_incorrect_answers": [
      "unknownuattribute binding",
      "unk[own att4ibute bindinq",
      "Dnknown at5ribute-binding",
      "unknown attribute bindinS",
      "unknLwn attribute bi8ding"
    ]
  },
  {
    "regex": ":|\\.|,",
    "refactor_regex": "[,:.]",
    "5_correct_answers": [
      ",",
      ":",
      ",",
      ":",
      ","
    ],
    "5_incorrect_answers": [
      "\"",
      "F",
      "Y",
      "'",
      "O"
    ]
  },
  {
    "regex": "^http://|https://|//|^//",
    "refactor_regex": "(^http://|https://|//|^//)",
    "5_correct_answers": [
      "http://",
      "//",
      "https://",
      "http://",
      "//"
    ],
    "5_incorrect_answers": [
      "het1://",
      "s/",
      "https:/E",
      "htvp://",
      "L/"
    ]
  },
  {
    "regex": "-{(.*?)}-",
    "refactor_regex": "-{.*?}-",
    "5_correct_answers": [
      "-{*Yj>N?5XZU+]e%D}-",
      "-{WBBZ^UZg/V}-",
      "-{v\\*QD,BsrJ;,}-",
      "-{>.7\\pu^}-",
      "-{L d-Bg0`M(nW.\"/z#^s[t'L}-"
    ],
    "5_incorrect_answers": [
      "-{=Yj>N?5XZU+]e%D}~",
      "-n'BBZ&UZg/V}-",
      "-5v\\*QD,BHrJ;,}-",
      "-*>.7\\Gu^}-",
      "-{L d-Bg0`M(nW.\"/z#^s[t'L}F"
    ]
  },
  {
    "regex": "(\\$output=\\$EMPTY\\+)",
    "refactor_regex": "\\$output=\\$EMPTY(\\+)",
    "5_correct_answers": [
      "$output=$EMPTY+",
      "$output=$EMPTY+",
      "$output=$EMPTY+",
      "$output=$EMPTY+",
      "$output=$EMPTY+"
    ],
    "5_incorrect_answers": [
      "$ou0puH=$EMPTm+",
      "$qutpu\\=$EMPTY+",
      "$output=$EMPT=+",
      "$out#ut=$~MPTY+",
      "$ouOput=$EMPTY+"
    ]
  },
  {
    "regex": "<pre\\b.*?>([\\s\\S]*?)</pre>",
    "refactor_regex": "<pre\\b.*?>[\\s\\S]{0,}?</pre>",
    "5_correct_answers": [
      "<pre<giWbz.OiK-aysKt^KUXW!> </pre>",
      "<pre!Z?P=53ge></pre>",
      "<pre></pre>",
      "<pre;y^EK1h\"(fLR></pre>",
      "<pre+)n(`S&Im-w^GE]I> </pre>"
    ],
    "5_incorrect_answers": [
      "<pre<gzWbz.OiK-aysKt^KUXW!> </preG",
      "<pre!i?P=530e_</pre>",
      "<4re></pge>",
      "<pre;y^EK1h\"(fLR>9/pre>",
      "<pren)Y(>S&Im-w^GE]I> </pre>"
    ]
  },
  {
    "regex": "<[^<>]*>",
    "refactor_regex": "<[^<>]{0,}>",
    "5_correct_answers": [
      "<>",
      "<o00E:p6+D%>",
      "<$>",
      "<iwu6 \"K-oOU>",
      "<Lzm!PM^?3tB`q6M.'5P>"
    ],
    "5_incorrect_answers": [
      "=>",
      "<o00E5p6+8%@",
      "<$ ",
      "'|wu6 \"K-oOU>",
      "<Lzm!PM^?xtB`q6M.'5P+"
    ]
  },
  {
    "regex": "[*?+{}]",
    "refactor_regex": "(\\*|[?]|\\+|\\{|\\})",
    "5_correct_answers": [
      "+",
      "+",
      "+",
      "{",
      "+"
    ],
    "5_incorrect_answers": [
      "T",
      "~",
      "Z",
      "]",
      "G"
    ]
  },
  {
    "regex": "^diff\\s--git",
    "refactor_regex": "^(diff)[ \\t\\n\\r\\f\\v](--git)",
    "5_correct_answers": [
      "diff --git",
      "diff --git",
      "diff --git",
      "diff --git",
      "diff --git"
    ],
    "5_incorrect_answers": [
      "diff --gi)",
      "dif! ;-git",
      "diff^Q-giy",
      "difV --g}t",
      "diff]--gWt"
    ]
  },
  {
    "regex": "HTTP/1\\.1",
    "refactor_regex": "(HTTP/1)\\.1",
    "5_correct_answers": [
      "HTTP/1.1",
      "HTTP/1.1",
      "HTTP/1.1",
      "HTTP/1.1",
      "HTTP/1.1"
    ],
    "5_incorrect_answers": [
      "HTTP/_.1",
      "`_TP/1.u",
      "HTTP/n@M",
      "HT~P/1.1",
      "HlTP/1.1"
    ]
  },
  {
    "regex": "(.+): (.+) \\((.+)\\).*",
    "refactor_regex": ".{1,}(: ).{1,} \\(.{1,}\\).*",
    "5_correct_answers": [
      "G: \"&D\"ftja!+>WP.L\"Z (E>H;J`k)\\F] ",
      "IW=qu AIkL: ]p$X>k67T (KwmQ1R)'0",
      "HP:8Mp(&: V;U (a4;H#)HYkvy-,TcV;MU",
      "'G: tO3 (CW)-=Gd",
      "t@_S[u: C^t*]v* (7/+QRZ)%:(4H"
    ],
    "5_incorrect_answers": [
      "G{ \"&D\"ftja!+>WP.LzZ (E>H;J`k)\\F],",
      "IW=qu AIkLn ]p|X>k67T (KwmQ1R)'0",
      "HP:8Mp(&: V;Us(a4;Y#)HYkvy-,gcV;MU",
      "'G: >r3 (CWJ-=Gd",
      "t@_S[u:UC^t*]v* (7/+QRZ)%:(4H"
    ]
  },
  {
    "regex": "(\\(.+?)(,)(.+?\\))",
    "refactor_regex": "(\\(.{1,}?)(,)(.{1,}?\\))",
    "5_correct_answers": [
      "(vGE\"%4s%54)1:2C,65BH6mnEvA7@RU)",
      "(:<t,2,2@)",
      "(CWc*,qyx)",
      "(<_Vt/bwF',IP ZSi;,[)",
      "(aS^dq[F,%)"
    ],
    "5_incorrect_answers": [
      "(vGE\"%4s%54)1:2C,65BH6mnEvA7@RUB",
      "(:<t,2,2@,",
      "`CWc*,.yx)",
      "(<_Vt/bwF',IP ZSi;,[T",
      "<aS^dq[F[%\\"
    ]
  },
  {
    "regex": "^\\s*--prefix\\s*",
    "refactor_regex": "^[ \\t\\n\\r\\f\\v]*(--prefix)[ \\t\\n\\r\\f\\v]*",
    "5_correct_answers": [
      "--prefix",
      "--prefix",
      "--prefix",
      "--prefix",
      "--prefix "
    ],
    "5_incorrect_answers": [
      "--px!fix",
      "-6+refix",
      "--pre[ix",
      "-;prefOx",
      "?-prefix "
    ]
  },
  {
    "regex": "^#?collect",
    "refactor_regex": "^(|#)(collect)",
    "5_correct_answers": [
      "collect",
      "collect",
      "#collect",
      "#collect",
      "#collect"
    ],
    "5_incorrect_answers": [
      "coll\"ct",
      "Bollnct",
      "#covject",
      "#collnct",
      "#nolse{t"
    ]
  },
  {
    "regex": "^net$",
    "refactor_regex": "^(net)$",
    "5_correct_answers": [
      "net",
      "net",
      "net",
      "net",
      "net"
    ],
    "5_incorrect_answers": [
      "ney",
      "Set",
      "\\el",
      "neA",
      "nq("
    ]
  },
  {
    "regex": "--related-hanging-timeout=([0-9]+)",
    "refactor_regex": "(--related-hanging-timeout=)[0-9]{1,}",
    "5_correct_answers": [
      "--related-hanging-timeout=8621327",
      "--related-hanging-timeout=656",
      "--related-hanging-timeout=17660583",
      "--related-hanging-timeout=85853",
      "--related-hanging-timeout=97576972"
    ],
    "5_incorrect_answers": [
      "-2selated-hanging-timeoutt8621327",
      "--related-hanging-time@ut=656",
      "--related-hanging-timeou[=J7660583",
      "--eelated-hang&ng-timeout=85853",
      "--relat<d-hanging-timeout=97576972"
    ]
  },
  {
    "regex": "^\\.tscommand$",
    "refactor_regex": "^(\\.)(tscommand)$",
    "5_correct_answers": [
      ".tscommand",
      ".tscommand",
      ".tscommand",
      ".tscommand",
      ".tscommand"
    ],
    "5_incorrect_answers": [
      "-tscommand",
      ".tsfo7mand",
      ".tscomma$J",
      ".tc_4mmand",
      ".nscFmma<d"
    ]
  },
  {
    "regex": "LLL",
    "refactor_regex": "L{3,3}",
    "5_correct_answers": [
      "LLL",
      "LLL",
      "LLL",
      "LLL",
      "LLL"
    ],
    "5_incorrect_answers": [
      "L.5",
      "YLD",
      "NmL",
      ")LL",
      "Lr\\"
    ]
  },
  {
    "regex": "### F",
    "refactor_regex": "(###)( F)",
    "5_correct_answers": [
      "### F",
      "### F",
      "### F",
      "### F",
      "### F"
    ],
    "5_incorrect_answers": [
      "##c F",
      "\\## F",
      "}#p F",
      "###oF",
      "4C# ]"
    ]
  },
  {
    "regex": "Watcher",
    "refactor_regex": "(Watcher)",
    "5_correct_answers": [
      "Watcher",
      "Watcher",
      "Watcher",
      "Watcher",
      "Watcher"
    ],
    "5_incorrect_answers": [
      "uatcheg",
      "Wa7ch)r",
      "'alch?r",
      "WatchSt",
      "Eatc-er"
    ]
  },
  {
    "regex": "^file\\.rotate",
    "refactor_regex": "^(file)[.](rotate)",
    "5_correct_answers": [
      "file.rotate",
      "file.rotate",
      "file.rotate",
      "file.rotate",
      "file.rotate"
    ],
    "5_incorrect_answers": [
      "fild.roSaZe",
      "6ile.rotate",
      "f#le.rot|te",
      "fileL)otate",
      "Aise.uotate"
    ]
  },
  {
    "regex": "from\\s+('|\")vux('|\")",
    "refactor_regex": "from\\s{1,}(\"|')vux(\"|')",
    "5_correct_answers": [
      "from 'vux\"",
      "from \"vux\"",
      "from \"vux\"",
      "from 'vux'",
      "from  'vux\""
    ],
    "5_incorrect_answers": [
      "fro&l'vux\"",
      "froH \"vux\"",
      "from \"#8x\"",
      "from 'vMx'",
      "fromK 'vux\""
    ]
  },
  {
    "regex": "^(867)",
    "refactor_regex": "^867",
    "5_correct_answers": [
      "867",
      "867",
      "867",
      "867",
      "867"
    ],
    "5_incorrect_answers": [
      "88Q",
      "8l{",
      "XHC",
      "86F",
      "86x"
    ]
  },
  {
    "regex": "&\\w+;",
    "refactor_regex": "&[0-9A-Z_a-z]{1,};",
    "5_correct_answers": [
      "&24;",
      "&Rg;",
      "&Y;",
      "&IM;",
      "&RC;"
    ],
    "5_incorrect_answers": [
      "+24;",
      "qHg;",
      "&Y.",
      "&IM]",
      "xRC|"
    ]
  },
  {
    "regex": "^-\\>\\$(\\d+)$",
    "refactor_regex": "^-\\>\\$(0|1|2|3|4|5|6|7|8|9)+$",
    "5_correct_answers": [
      "->$6021700",
      "->$071423901285",
      "->$9529478997916",
      "->$19337453004",
      "->$566"
    ],
    "5_incorrect_answers": [
      "->$60a1700",
      "->@071423901285",
      "->$M5294\\89979/6",
      "->$1k337453004",
      "B>$l66"
    ]
  },
  {
    "regex": "(?:^|\\n)\\s*(@[a-zA-Z:]*)",
    "refactor_regex": "(?:^|\\n)(\\s+)?(@[a-zA-Z:]{0,})",
    "5_correct_answers": [
      "  @ZVzosRdWfxQyZSzEpFnLrU",
      "  @Te",
      "@nWDU",
      "  @fntemEltkiNFPP",
      " @YXNK:"
    ],
    "5_incorrect_answers": [
      "  [Zrzos2dWfxQyZSzEpFnLrU",
      " [(ce",
      "snWvU",
      "\\ @fntemEltkiNFPP",
      " -Y5NK:"
    ]
  },
  {
    "regex": "o|m|e",
    "refactor_regex": "(o|m|e)",
    "5_correct_answers": [
      "m",
      "m",
      "e",
      "o",
      "o"
    ],
    "5_incorrect_answers": [
      "_",
      "|",
      "n",
      "Z",
      ","
    ]
  },
  {
    "regex": "\\.const$",
    "refactor_regex": "([.])const$",
    "5_correct_answers": [
      ".const",
      ".const",
      ".const",
      ".const",
      ".const"
    ],
    "5_incorrect_answers": [
      ".cCnst",
      ".cWnRt",
      "bcon}t",
      "Sc0n4t",
      ".co9st"
    ]
  },
  {
    "regex": "Google Desktop/([0-9.]*)",
    "refactor_regex": "Google Desktop/[\\d.]*",
    "5_correct_answers": [
      "Google Desktop/932483735680.261073",
      "Google Desktop/0.47403.13479837",
      "Google Desktop/38138515297..3",
      "Google Desktop/8968",
      "Google Desktop/99871855"
    ],
    "5_incorrect_answers": [
      "Go@gle DesktPp/9324837&5680.261073",
      "G*ogle Desktop/0.47403.13479837",
      "Google Desk`op/38138515297..3",
      "Google DesMtop/8968",
      "Goo'le Desktop/99871855"
    ]
  },
  {
    "regex": "^TZ=",
    "refactor_regex": "^(TZ=)",
    "5_correct_answers": [
      "TZ=",
      "TZ=",
      "TZ=",
      "TZ=",
      "TZ="
    ],
    "5_incorrect_answers": [
      "TZ9",
      "3Z=",
      "T(=",
      "TZ^",
      "D?r"
    ]
  },
  {
    "regex": "static int[^A-Za-z]*",
    "refactor_regex": "(static int)[^A-Za-z]*",
    "5_correct_answers": [
      "static int#;8?'1 1`;1[(:\\->([$$",
      "static int^0*<3/\"/.",
      "static int7&#(_*?\\5$\\",
      "static int) '49\"70>)9",
      "static int>!8),"
    ],
    "5_incorrect_answers": [
      "static i1t#;r?'1 1`;1[(:\\->([$$",
      "stawic int^0*<S/\"/.",
      "statMc int7&#(_*?=5$\\",
      "statiE int) '49\"7y>)9",
      "st_tic int>!8),"
    ]
  },
  {
    "regex": "(;)?(\\^+)(;)?",
    "refactor_regex": ";?(\\^{1,});?",
    "5_correct_answers": [
      ";^^^^^^",
      ";^;",
      "^^^^^^^^^^^^^;",
      "^^^^^^^^^^^^^^^^^^^^^^^^^",
      "^^^^^^^^^^^^^^^^^"
    ],
    "5_incorrect_answers": [
      ";F^a^^^",
      "Q^;",
      "U^^^^^Y^^^^^w;",
      "R^^^^^^^^^^^^^^5^^D^^^^^^",
      ".^^^^^^^^^H^^^^^i"
    ]
  },
  {
    "regex": "My Error",
    "refactor_regex": "(My Error)",
    "5_correct_answers": [
      "My Error",
      "My Error",
      "My Error",
      "My Error",
      "My Error"
    ],
    "5_incorrect_answers": [
      "My Er0or",
      "My Yrro!",
      "gy Er\\or",
      "My nrrCn",
      "vy EOrOr"
    ]
  },
  {
    "regex": "@negative",
    "refactor_regex": "(@negative)",
    "5_correct_answers": [
      "@negative",
      "@negative",
      "@negative",
      "@negative",
      "@negative"
    ],
    "5_incorrect_answers": [
      "@nega#ive",
      "@nega2ive",
      "@negFtive",
      "@gegat9[e",
      "@n=gative"
    ]
  },
  {
    "regex": "(BREW);",
    "refactor_regex": "(BREW;)",
    "5_correct_answers": [
      "BREW;",
      "BREW;",
      "BREW;",
      "BREW;",
      "BREW;"
    ],
    "5_incorrect_answers": [
      "B8\"WW",
      "BREW0",
      "BREda",
      "&dEY;",
      "BG`W;"
    ]
  },
  {
    "regex": "([!\\(\\{\\}:;=,\\n])",
    "refactor_regex": "(!|\\(|\\{|\\}|:|;|=|,|\\n)",
    "5_correct_answers": [
      "}",
      "{",
      "=",
      ";",
      "}"
    ],
    "5_incorrect_answers": [
      " ",
      ".",
      "Z",
      "'",
      "s"
    ]
  },
  {
    "regex": "([^\\\\])S|^S",
    "refactor_regex": "(([^\\\\])S|^S)",
    "5_correct_answers": [
      "S",
      "$S",
      "SS",
      "S",
      "S"
    ],
    "5_incorrect_answers": [
      "Y",
      "$&",
      "Dy",
      "q",
      "Y"
    ]
  },
  {
    "regex": "(?:/\\*([\\s\\S]+)\\*/)?(\\w+)",
    "refactor_regex": "(?:/\\*([ \\t\\n\\r\\f\\v\\S]+)\\*/)?\\w+",
    "5_correct_answers": [
      "k",
      "YOqv",
      "S",
      "L",
      "L6"
    ],
    "5_incorrect_answers": [
      " ",
      "^Ofv",
      "\\",
      " ",
      "*/"
    ]
  },
  {
    "regex": "(https?://)([^:]+:[^@]+@)?(.*)$",
    "refactor_regex": "(https?://)([^:]{1,}:[^@]{1,}@)?(.*)$",
    "5_correct_answers": [
      "http://,#J7f`qyXkBj",
      "http://QlN\\mbn",
      "https://UkwK:wFWTp?",
      "https://tRwNujsQ\\d<J8e4V*(:7/Z",
      "https://"
    ],
    "5_incorrect_answers": [
      "2ttp://,8J7f`qyXkBj",
      "httpu//QlN\\E&n",
      "ht>ps://UkwK:wFWTp'",
      "https///tR0NujsQ\\d<J8e4V*(:73Z",
      "https:/u"
    ]
  },
  {
    "regex": "-|/|\\.|\\s|:",
    "refactor_regex": "-|/|\\.|[ \\t\\n\\r\\f\\v]|:",
    "5_correct_answers": [
      ".",
      "-",
      ".",
      "-",
      " "
    ],
    "5_incorrect_answers": [
      ",",
      "c",
      "5",
      "9",
      "L"
    ]
  },
  {
    "regex": "^<|('[\\w]+)?>$",
    "refactor_regex": "^<|>$|'[a-zA-Z\\d_][a-zA-Z\\d_]*>$",
    "5_correct_answers": [
      ">",
      "<",
      ">",
      "<",
      "<"
    ],
    "5_incorrect_answers": [
      "P",
      ":",
      "]",
      "b",
      "`"
    ]
  },
  {
    "regex": "node_modules/lodash",
    "refactor_regex": "(node_modules/lodash)",
    "5_correct_answers": [
      "node_modules/lodash",
      "node_modules/lodash",
      "node_modules/lodash",
      "node_modules/lodash",
      "node_modules/lodash"
    ],
    "5_incorrect_answers": [
      "nXde_modules/lodas6",
      "node_modules/\"odasJ",
      "nore_mqdules/lodash",
      "<odB&modules/lodash",
      "node_moduleZ/lodaWh"
    ]
  },
  {
    "regex": "<(.*?)>",
    "refactor_regex": "<.*?>",
    "5_correct_answers": [
      "<%>=';!Djys#bcml/>",
      "<gv*8YvvJ\\NbYR_G w\"2&fRX>",
      "<WX,KzXB,\">",
      "<X'==>",
      "<EFPK>"
    ],
    "5_incorrect_answers": [
      "f%>=';!Djys_bcml/>",
      "/gv*8YvvJ\\NbYR_G wP2&fRX>",
      "@WX1K.XB,\">",
      "UX'==U",
      ";EFPI>"
    ]
  },
  {
    "regex": "hyphens",
    "refactor_regex": "(hyphens)",
    "5_correct_answers": [
      "hyphens",
      "hyphens",
      "hyphens",
      "hyphens",
      "hyphens"
    ],
    "5_incorrect_answers": [
      "hsphens",
      "Byphens",
      "=ypZeQs",
      "hy!hEn~",
      "h<piens"
    ]
  },
  {
    "regex": "^\\$<(\\d+)([*/]{1,4})>",
    "refactor_regex": "^\\$<(\\d{1,}(\\*|/)(\\*|/)?(\\*|/)?(\\*|/)?)>",
    "5_correct_answers": [
      "$<5190322442935243*//>",
      "$<095//*>",
      "$<7//*/>",
      "$<0885988846161/*//>",
      "$<2591/>"
    ],
    "5_incorrect_answers": [
      "$<51p0322442935a43*//>",
      "b<095//*>",
      "T<7//*IW",
      "$<088598881w?61/*//>",
      "$<l591/>"
    ]
  },
  {
    "regex": "^[?#&]",
    "refactor_regex": "^(#|&|[?])",
    "5_correct_answers": [
      "&",
      "#",
      "&",
      "#",
      "?"
    ],
    "5_incorrect_answers": [
      "u",
      "%",
      "t",
      "k",
      "s"
    ]
  },
  {
    "regex": "^(/es\\d+)?/",
    "refactor_regex": "^(/es\\d{1,})?/",
    "5_correct_answers": [
      "/es098133138676291918636/",
      "/",
      "/",
      "/",
      "/es5987108297563252300/"
    ],
    "5_incorrect_answers": [
      "\\e*09813313867z291918636/",
      "V",
      "7",
      "d",
      "8es5987108297563252300/"
    ]
  },
  {
    "regex": "prebuild --install",
    "refactor_regex": "(prebuild --install)",
    "5_correct_answers": [
      "prebuild --install",
      "prebuild --install",
      "prebuild --install",
      "prebuild --install",
      "prebuild --install"
    ],
    "5_incorrect_answers": [
      "prebuild n-install",
      "prebuild --igstall",
      "arebuild --install",
      "prebuiAd --install",
      "preO\"ild -jinstall"
    ]
  },
  {
    "regex": "init complete",
    "refactor_regex": "(init complete)",
    "5_correct_answers": [
      "init complete",
      "init complete",
      "init complete",
      "init complete",
      "init complete"
    ],
    "5_incorrect_answers": [
      "init compFete",
      "init uomplets",
      "init coopl)t|",
      "ivit compl,te",
      "init co&pl:t#"
    ]
  },
  {
    "regex": ".\\.less$",
    "refactor_regex": ".([.])(less)$",
    "5_correct_answers": [
      ">.less",
      "+.less",
      "P.less",
      "g.less",
      "..less"
    ],
    "5_incorrect_answers": [
      "%.l\\ss",
      "+.lYss",
      "S.leHs",
      "#ll*ss",
      "l.les;"
    ]
  },
  {
    "regex": "dO",
    "refactor_regex": "(dO)",
    "5_correct_answers": [
      "dO",
      "dO",
      "dO",
      "dO",
      "dO"
    ],
    "5_incorrect_answers": [
      "dp",
      "uO",
      "JO",
      "dD",
      "bR"
    ]
  },
  {
    "regex": "[.]crdownload$",
    "refactor_regex": "\\.(crdownload)$",
    "5_correct_answers": [
      ".crdownload",
      ".crdownload",
      ".crdownload",
      ".crdownload",
      ".crdownload"
    ],
    "5_incorrect_answers": [
      "rcrdo,nload",
      ".crdownl|ad",
      ".crdo\"nload",
      ".cr[ownload",
      "ccr#owjload"
    ]
  },
  {
    "regex": "#ifndef \\w+",
    "refactor_regex": "(#ifndef )\\w\\w*",
    "5_correct_answers": [
      "#ifndef 9",
      "#ifndef V",
      "#ifndef p",
      "#ifndef pN_",
      "#ifndef Yhl"
    ],
    "5_incorrect_answers": [
      "#if&def 9",
      "#ifnder V",
      "#ifnde9 p",
      "#ifndef (N_",
      "#ifndef %jl"
    ]
  },
  {
    "regex": "^[\\s';\"\\[\\]|&<>]+$|[()]",
    "refactor_regex": "^[ \\t\\n\\r\\f\\v';\"\\[\\]|&<>]+$|[()]",
    "5_correct_answers": [
      "(",
      "(",
      ")",
      ")",
      ")"
    ],
    "5_incorrect_answers": [
      "S",
      "B",
      "+",
      "C",
      "U"
    ]
  },
  {
    "regex": "(^|\\w)'(\\w|$)",
    "refactor_regex": "[\\^\\w]'[\\$\\w]",
    "5_correct_answers": [
      "i'5",
      "7'c",
      "w'l",
      "g'v",
      "o'X"
    ],
    "5_incorrect_answers": [
      "i(5",
      "i'+",
      "$\"l",
      "$'u",
      "ubX"
    ]
  },
  {
    "regex": "; charset=UTF-8",
    "refactor_regex": "(; charset=UTF-8)",
    "5_correct_answers": [
      "; charset=UTF-8",
      "; charset=UTF-8",
      "; charset=UTF-8",
      "; charset=UTF-8",
      "; charset=UTF-8"
    ],
    "5_incorrect_answers": [
      "; ch-rs%t=U{F-8",
      "' chaMset=FTF-8",
      "; charse?=UTF-8",
      "; q)arset=UTF-8",
      "; charslt=UTF-8"
    ]
  },
  {
    "regex": "^\\s*Scenario:(.*)",
    "refactor_regex": "^\\s*(Scenario:)(.*)",
    "5_correct_answers": [
      "Scenario:ne-jqa`wn_)y3%WU?2O z",
      "Scenario:XuOfM39`+uQI4GV+1^g*GT",
      "Scenario:N;qI.Rsu>iZvReT",
      " Scenario:.\\wrw+BQG3'Gq9",
      "Scenario:,QF9;-"
    ],
    "5_incorrect_answers": [
      "ScenarioTne-jqa`wn_)y3%WU?2O z",
      "S4enario:XuOfM39`+uQI4GV+1^g*GT",
      "2cenario:NoqI.Rsu>iZvReT",
      " Scenarsop.\\wrw+BQG3'Gq9",
      "Scenaris:bQF9;M"
    ]
  },
  {
    "regex": "^2\\d\\d .*\\b([a-f0-9]{3})\\b.*$",
    "refactor_regex": "^2[0-9][0-9] .*\\b(a|b|c|d|e|f|[0-9]){3,3}\\b.*$",
    "5_correct_answers": [
      "268 '846+Of'8LxP,%b*WxHzX",
      "299 p``g_%l\\N8N;*<b1c]_s]0xq!,>",
      "204 p2vfb5LFrb$CBmv?12c[",
      "215 S&,[d7f!$S<CH@KP_'B",
      "230 ufFz[?h4i.W.m9M@d28"
    ],
    "5_incorrect_answers": [
      "26\" '846+Of'8LxP,%b*WxHzX",
      "999 p``g_%l\\N8N;*<f1c]_s]0xq!,>",
      "204 p2dfb5LFrb$CBmv?12&[",
      "21/ S&,[d7f!$S<CH@KP_'B",
      "230JufFz[?h4i.W.m9M@d28"
    ]
  },
  {
    "regex": "^set<(\\w+)>$",
    "refactor_regex": "^set<\\w{1,}>$",
    "5_correct_answers": [
      "set<d>",
      "set<h07h>",
      "set<v>",
      "set<zrug>",
      "set<mHx>"
    ],
    "5_incorrect_answers": [
      "uet<d>",
      "sgB<h|7h>",
      "Ve1<v>",
      "set<'r$g>",
      "set<=Hx>"
    ]
  },
  {
    "regex": "^[+-]?(\\d+)\\s*/\\s*(\\d+)$",
    "refactor_regex": "^[+-]?([0-9][0-9]*)\\s*/\\s*([0-9][0-9]*)$",
    "5_correct_answers": [
      "73219680857/ 88446447715367459590",
      "-925903685408321475108/377",
      "+33816978055933233643 /26510311",
      "62/ 1691451",
      "097390/06931335"
    ],
    "5_incorrect_answers": [
      "73219680857]&88446447715367459590",
      "-925903685408321475108/3FQ",
      "a3381y978055935233643 /26510311",
      "67/@1691O51",
      "097390/06/31335"
    ]
  },
  {
    "regex": "\\bearlier\\sthan\\s",
    "refactor_regex": "\\b(earlier)\\s(than)\\s",
    "5_correct_answers": [
      "earlier than ",
      "earlier than ",
      "earlier than ",
      "earlier than ",
      "earlier than "
    ],
    "5_incorrect_answers": [
      "earlier :hfn ",
      "earlisr thans",
      "earli?r than ",
      "earlier thaeQ",
      "eaclier mhan "
    ]
  },
  {
    "regex": "::drop_db_if_exists::",
    "refactor_regex": "(::drop_db_if_exists::)",
    "5_correct_answers": [
      "::drop_db_if_exists::",
      "::drop_db_if_exists::",
      "::drop_db_if_exists::",
      "::drop_db_if_exists::",
      "::drop_db_if_exists::"
    ],
    "5_incorrect_answers": [
      ":`drop_db_;f_exisVs::",
      "::drop_db_i%_exists::",
      "::=rop_db_if_e>ists::",
      "::dro$_db_if_exists:f",
      "::drop_db_if_exi^ts::"
    ]
  },
  {
    "regex": "/|origin",
    "refactor_regex": "(/|(origin))",
    "5_correct_answers": [
      "origin",
      "/",
      "/",
      "/",
      "origin"
    ],
    "5_incorrect_answers": [
      "ormgin",
      " ",
      "9",
      ",",
      "]rigin"
    ]
  },
  {
    "regex": "\\bInto\\sand\\sout\\sof\\s",
    "refactor_regex": "\\bInto( |\\t|\\n|\\r|\\f|\\v)and( |\\t|\\n|\\r|\\f|\\v)out( |\\t|\\n|\\r|\\f|\\v)of( |\\t|\\n|\\r|\\f|\\v)",
    "5_correct_answers": [
      "Into and out of ",
      "Into and out of ",
      "Into and out of ",
      "Into and out of ",
      "Into and out of "
    ],
    "5_incorrect_answers": [
      "Vnto an' outMof ",
      "IntU anr out -f ",
      "I7to andiout of ",
      "IAto and oSt of ",
      "Iut[ xnd out of "
    ]
  },
  {
    "regex": "\\bLeaving\\sout\\s",
    "refactor_regex": "\\b(Leaving)( |\\t|\\n|\\r|\\f|\\v)(out)( |\\t|\\n|\\r|\\f|\\v)",
    "5_correct_answers": [
      "Leaving out ",
      "Leaving out ",
      "Leaving out ",
      "Leaving out ",
      "Leaving out "
    ],
    "5_incorrect_answers": [
      "Leaving jut ",
      "?eav#nA out ",
      "Leaving o{} ",
      "Leavtn{ jut ",
      "LeJving Uut "
    ]
  },
  {
    "regex": "\\bIn\\sspite\\sof\\sthat\\s",
    "refactor_regex": "\\b(In)( |\\t|\\n|\\r|\\f|\\v)(spite)( |\\t|\\n|\\r|\\f|\\v)(of)( |\\t|\\n|\\r|\\f|\\v)(that)( |\\t|\\n|\\r|\\f|\\v)",
    "5_correct_answers": [
      "In spite of that ",
      "In spite of that ",
      "In spite of that ",
      "In spite of that ",
      "In spite of that "
    ],
    "5_incorrect_answers": [
      "In spiEe ofKthbt ",
      "Sn]spitv of that ",
      "In spite of thaA ",
      "In spi8e oN that ",
      "In spi2e of that0"
    ]
  },
  {
    "regex": "(node_modules|test|svg-icons)",
    "refactor_regex": "(node_modules)|(test)|(svg-icons)",
    "5_correct_answers": [
      "test",
      "svg-icons",
      "node_modules",
      "test",
      "node_modules"
    ],
    "5_incorrect_answers": [
      "te}N",
      "svg-ichn`",
      "nvde_modules",
      "mpst",
      "node}modu)es"
    ]
  },
  {
    "regex": "([aeiou])([aeiou])",
    "refactor_regex": "(a|e|i|o|u)(a|e|i|o|u)",
    "5_correct_answers": [
      "ei",
      "ie",
      "ie",
      "ii",
      "ua"
    ],
    "5_incorrect_answers": [
      "e\"",
      "is",
      "Y&",
      "`p",
      "uB"
    ]
  },
  {
    "regex": "rand\" value=\"(.*)\"",
    "refactor_regex": "(rand\" value=\".*)\"",
    "5_correct_answers": [
      "rand\" value=\"]I!x^:poAnN\"",
      "rand\" value=\"XF\"",
      "rand\" value=\"e7n=*o8,\"",
      "rand\" value=\"nchpZmi*_kgSun z.X%w\"",
      "rand\" value=\"\\\""
    ],
    "5_incorrect_answers": [
      "rand\"|value=\"]I!x^:poAnN\"",
      "rand\"-valu0=\"XF\"",
      "rand\" valMe=\"e7r=*o8,\"",
      "rand\"Oval)e=0nchpZmi*_kgSun z.X%w\"",
      "rand\" vaRue=\"\\S"
    ]
  },
  {
    "regex": "(\\<script.+?src=[\"'])(.+?)([\"'])",
    "refactor_regex": "\\<script.{1,}?src=(\"|').{1,}?(\"|')",
    "5_correct_answers": [
      "<scriptry`%+lB'h>src=\"PpI;'",
      "<script>.fHsrc=\"X^YeRi Y>'",
      "<script0-src='l'",
      "<script`%2E>hrCw%Ce`+Mb,pAsrc=\"S\"",
      "<script3P'Y&k:;LP9c\\g3@src='A'"
    ],
    "5_incorrect_answers": [
      "<sc]iptry|%+lB'h>src=\"PpI;'",
      "<scrip`>.fHsr9=\"X^Ye'i Y>'",
      "<scriTt'-sr-='l'",
      "<scrQpt`%2E>hrCw%Ce`+xb,pAsrc=\"S\"",
      "<scmipt3RoY&k:;LP9c\\g3@src='A'"
    ]
  },
  {
    "regex": ".*\\.csv$",
    "refactor_regex": ".*[.]csv$",
    "5_correct_answers": [
      "cHF.csv",
      "cEFh2@xpq)cY'-an\\8o.csv",
      "r!!?V8pjm3jXsw,5.csv",
      "KgE[4,kPaHWni[p7V.csv",
      "):vAjgD4\"/W$n$i<v+_3l.csv"
    ],
    "5_incorrect_answers": [
      "cHF.Yd-",
      "QEFh2@xpq)cY'-an\\8oxcRv",
      "r!!?V8pjm3jXsw,5.cfv",
      "KpE[4,kPaHWni[p7f.;sv",
      "):vAjgD3\"/W$n$i<v+_3l.cLu"
    ]
  },
  {
    "regex": "on line 1",
    "refactor_regex": "(on line 1)",
    "5_correct_answers": [
      "on line 1",
      "on line 1",
      "on line 1",
      "on line 1",
      "on line 1"
    ],
    "5_incorrect_answers": [
      "ln line?1",
      "Qn line 1",
      "onxliD# 1",
      "on 4vne 1",
      "on line 3"
    ]
  },
  {
    "regex": "incompatible receiver",
    "refactor_regex": "(incompatible receiver)",
    "5_correct_answers": [
      "incompatible receiver",
      "incompatible receiver",
      "incompatible receiver",
      "incompatible receiver",
      "incompatible receiver"
    ],
    "5_incorrect_answers": [
      "FTcospatible receiver",
      "incompatible receivcr",
      "incom-atible receiver",
      "incospatible rec[iver",
      "incompatible receiOer"
    ]
  },
  {
    "regex": ".*\\s[\\*_]\\s",
    "refactor_regex": ".*( |\\t|\\n|\\r|\\f|\\v)([*]|_)( |\\t|\\n|\\r|\\f|\\v)",
    "5_correct_answers": [
      " _ ",
      "ym_&cA(ggor=? * ",
      "/`Vydgv!uW[ lXhXTU]6 _ ",
      "'`L*WMSh OwKz.' * ",
      ">hcxORJ _ "
    ],
    "5_incorrect_answers": [
      "}_H",
      "ym_&cA(Rgor=? 8 ",
      "/`Vydgv!uW[PlXhXTU]6-L ",
      "''L*&MSh OwKz.'N* ",
      "> cxORJ h "
    ]
  },
  {
    "regex": "\\]\\[([^\\]]+)",
    "refactor_regex": "\\]\\[[^\\]][^\\]]*",
    "5_correct_answers": [
      "][+!^j?O?n)i,",
      "][XA=F:CCR_z^/%&CHOv=,oWC",
      "][<UnS?L%_c72:Vm)SqIXm;c96",
      "][3d_SO0?H",
      "][14Y5_&P,y"
    ],
    "5_incorrect_answers": [
      "]d+!^j?O?nri,",
      ".[XA=F:CCR_z^/%&wHOv=,oWC",
      "8[<tnS?L%_c72:Vm)SqIXm;c96",
      "]m3d_aO0?H",
      "X[14Y\"H&P,y"
    ]
  },
  {
    "regex": "^I am on the Landing Page$",
    "refactor_regex": "^(I am on the Landing Page)$",
    "5_correct_answers": [
      "I am on the Landing Page",
      "I am on the Landing Page",
      "I am on the Landing Page",
      "I am on the Landing Page",
      "I am on the Landing Page"
    ],
    "5_incorrect_answers": [
      "I am on the L<ndingdPage",
      "I am on`the Landixg PagO",
      "I 3m on the Land5ng Page",
      "I am on the Landin! Page",
      "I aN on the Landing EPge"
    ]
  },
  {
    "regex": "(^.+)/\\.[^/]+(/|$)",
    "refactor_regex": "(^.+)/(\\.)[^/]+(\\$|/)",
    "5_correct_answers": [
      "TKo+^/.K9wj3Kk4tnF5k\"paRSprckN3/",
      "R.I_\\U\"7T.r7$:6/.kGCa=n,dnvYhD3y/",
      "XZD;^(W/.ol#bWpl]5@H^$V%",
      "h_6D/..2j2/",
      "7fw&KYYv-ZM[caJ\\*$o/.BU$p/"
    ],
    "5_incorrect_answers": [
      "TKo+^V.KBwj3Kk4t}F5k\"paRSprckN3/",
      "R.I_\\U\"7T.r7$:6^akGCa=b,dnvYhD3y/",
      "XZD;^(Wf.ol#bWpl]5@H^$V%",
      "h_6D/`.2j(/",
      "7fw&KYYv-:M[caJ\\*$o/)BU$p/"
    ]
  },
  {
    "regex": "^https://host\\.cz",
    "refactor_regex": "^(https://host)([.])(cz)",
    "5_correct_answers": [
      "https://host.cz",
      "https://host.cz",
      "https://host.cz",
      "https://host.cz",
      "https://host.cz"
    ],
    "5_incorrect_answers": [
      "3ttps://host.cf",
      "Kttpsf//ho(t.cz",
      "https://ho<t.c_",
      "https://iost.cz",
      "https://hout.cz"
    ]
  },
  {
    "regex": "^/files$",
    "refactor_regex": "^(/files)$",
    "5_correct_answers": [
      "/files",
      "/files",
      "/files",
      "/files",
      "/files"
    ],
    "5_incorrect_answers": [
      "/fil<!",
      "/fbjee",
      "/fiIes",
      "/f5?es",
      ")file0"
    ]
  },
  {
    "regex": "XX0 0XX is not in a zone",
    "refactor_regex": "(XX0 0XX is not in a zone)",
    "5_correct_answers": [
      "XX0 0XX is not in a zone",
      "XX0 0XX is not in a zone",
      "XX0 0XX is not in a zone",
      "XX0 0XX is not in a zone",
      "XX0 0XX is not in a zone"
    ],
    "5_incorrect_answers": [
      "XX0 0XXIis not in a zone",
      "XX0 0XX i\\ not in a zone",
      "X_0 0XX is nob in axzone",
      "XX0 0XX -spnot in a zone",
      "X~0 0XX is not i~ a zone"
    ]
  },
  {
    "regex": "\\* @require [\\s-]*(.*?\\.js)",
    "refactor_regex": "\\* @require [\\s-]*.*?[.]js",
    "5_correct_answers": [
      "* @require ]yK%iP>:iWfcu-.V.js",
      "* @require D*9s*f(At:sy>.js",
      "* @require Ejo!HWl!`cJ2.js",
      "* @require 4wV[J\"gmV&Gt.js",
      "* @require P6EZ>%6Q/e9:NM]>Ap.js"
    ],
    "5_incorrect_answers": [
      "l @require ]yK%iP>'iWfcu-.V.js",
      "* @require D19s*f(At:sy>Vjs",
      "* @requir5 E&o!HWl!`cJe.js",
      "* @require 4wV[J\"gmV&Gt(js",
      "* @require P6EZ>%6Q/eK:NM]>Ap.us"
    ]
  },
  {
    "regex": "[^\\.\\w'\"]([a-z_\\$][\\w\\d\\._\\$]*)",
    "refactor_regex": "[^\\.\\w'\"][a-z_\\$][\\w\\d\\._\\$]{0,}",
    "5_correct_answers": [
      "%_07",
      "$pQ",
      "<z",
      "&k_",
      ",am"
    ],
    "5_incorrect_answers": [
      "%(-7",
      ".pQ",
      "Jz",
      "&O_",
      "Wcm"
    ]
  },
  {
    "regex": "(\\w+):(\\d+)x(\\d+)",
    "refactor_regex": "(\\w+):([0-9]+)x([0-9]+)",
    "5_correct_answers": [
      "FL:42715889147x9381107986524",
      "Wn:84025566153965993138x3",
      "7:5820x1606214126330952096",
      "h:480792648x59902132280229",
      "S:395414864398272x832"
    ],
    "5_incorrect_answers": [
      "IL:4271588k147x93\"1107986524",
      "Wn_840255661539b5993138u3",
      "7:J820x1606214/26330c52096",
      "h+480792Z48x59902132280228",
      "S:3B54148643M8272x832"
    ]
  },
  {
    "regex": "\"authorName\"",
    "refactor_regex": "(\"authorName\")",
    "5_correct_answers": [
      "\"authorName\"",
      "\"authorName\"",
      "\"authorName\"",
      "\"authorName\"",
      "\"authorName\""
    ],
    "5_incorrect_answers": [
      "\"aStho[Name\"",
      "eauthorName\"",
      "Bau&horName\"",
      "\"a_thd`Name\"",
      "\"a;thorName\""
    ]
  },
  {
    "regex": "^(?:Boolean\\b)",
    "refactor_regex": "^(Boolean)\\b",
    "5_correct_answers": [
      "Boolean",
      "Boolean",
      "Boolean",
      "Boolean",
      "Boolean"
    ],
    "5_incorrect_answers": [
      "Blclean",
      "Booleaz",
      "B\"olean",
      "B~5le1n",
      "Bool}aY"
    ]
  },
  {
    "regex": "</e><e>",
    "refactor_regex": "(</e><e>)",
    "5_correct_answers": [
      "</e><e>",
      "</e><e>",
      "</e><e>",
      "</e><e>",
      "</e><e>"
    ],
    "5_incorrect_answers": [
      "</e><eR",
      "Y/e><e>",
      "S/9><e>",
      "</:><{>",
      "</e]yeR"
    ]
  },
  {
    "regex": "^most$",
    "refactor_regex": "^(most)$",
    "5_correct_answers": [
      "most",
      "most",
      "most",
      "most",
      "most"
    ],
    "5_incorrect_answers": [
      "~*st",
      "uost",
      "moIl",
      "moC8",
      "m]s2"
    ]
  },
  {
    "regex": "\"angular-cookies\": \"2\\.0\\.0\"",
    "refactor_regex": "(\"angular-cookies\": \"2)\\.0\\.(0\")",
    "5_correct_answers": [
      "\"angular-cookies\": \"2.0.0\"",
      "\"angular-cookies\": \"2.0.0\"",
      "\"angular-cookies\": \"2.0.0\"",
      "\"angular-cookies\": \"2.0.0\"",
      "\"angular-cookies\": \"2.0.0\""
    ],
    "5_incorrect_answers": [
      "\"angular-cookies\": \"2.&.0\"",
      "3angular-cookWes\":-\"2.0.0\"",
      "\"ahgular-cookies\": \"2.0.0S",
      "\"angtlar-coRkies\": \"2.0.0\"",
      "\"angularjcookies\": \"2.0.0\""
    ]
  },
  {
    "regex": "^TRIBE ([^\\s]+)",
    "refactor_regex": "^TRIBE [^\\s][^\\s]*",
    "5_correct_answers": [
      "TRIBE +?-[]>*'WR=)MBMo5",
      "TRIBE no3lDp92fx",
      "TRIBE `O^!fKVhGWkc0:8\"9D)",
      "TRIBE Ejqp'nN",
      "TRIBE >i%EH<!RDDW8@ps`c>o,"
    ],
    "5_incorrect_answers": [
      " RIBE +?-X]>*'WR=)MBMo5",
      "TRIBEVno3lDp92fx",
      "TRMBE `O^!vKVhGEkc0:8\"9D)",
      "TRIB^SEjhp'nN",
      "TR?BE >i%EH<!RDDW8@ps`c>o,"
    ]
  },
  {
    "regex": "parsererror",
    "refactor_regex": "(parsererror)",
    "5_correct_answers": [
      "parsererror",
      "parsererror",
      "parsererror",
      "parsererror",
      "parsererror"
    ],
    "5_incorrect_answers": [
      "pbrse?eBror",
      "pa;[e<error",
      "Zarseverr-r",
      "parmererPor",
      "5arsererrwr"
    ]
  },
  {
    "regex": "[\\w\\.]+\\?\\d+",
    "refactor_regex": "[a-zA-Z0-9_\\.]{1,}\\?[0-9]{1,}",
    "5_correct_answers": [
      "F?37",
      "l?559526904",
      "IL?5803051",
      "x?9178695034790006875884358",
      "Z?695496616492255432108181"
    ],
    "5_incorrect_answers": [
      "F?\\N",
      "l055&526904",
      "I#r5803051",
      "x+91q869503479000687o884358",
      "Z>695496616492255|32108181"
    ]
  },
  {
    "regex": "(\\()",
    "refactor_regex": "\\(",
    "5_correct_answers": [
      "(",
      "(",
      "(",
      "(",
      "("
    ],
    "5_incorrect_answers": [
      "V",
      "m",
      "9",
      "z",
      "l"
    ]
  },
  {
    "regex": "noMatch",
    "refactor_regex": "(noMatch)",
    "5_correct_answers": [
      "noMatch",
      "noMatch",
      "noMatch",
      "noMatch",
      "noMatch"
    ],
    "5_incorrect_answers": [
      "no;atch",
      "n#MRtch",
      "no8atch",
      "n Maech",
      "n?Matc0"
    ]
  },
  {
    "regex": "\\d{3}(-\\d{1,4}(-\\d{1,4})?)?",
    "refactor_regex": "\\d{3,3}(-\\d\\d?\\d?\\d?(-\\d\\d?\\d?\\d?)?)?",
    "5_correct_answers": [
      "440-993-712",
      "800",
      "046",
      "034",
      "635"
    ],
    "5_incorrect_answers": [
      "44<69(3-712",
      "80#",
      "0L@",
      "63`",
      "6Iw"
    ]
  },
  {
    "regex": "(server\\.conf)$",
    "refactor_regex": "(server)\\.(conf)$",
    "5_correct_answers": [
      "server.conf",
      "server.conf",
      "server.conf",
      "server.conf",
      "server.conf"
    ],
    "5_incorrect_answers": [
      "server.\\onf",
      "seEver.conf",
      "servtr?conf",
      "?erver.conf",
      "server.cocf"
    ]
  },
  {
    "regex": "#|/|>|\\{|&|=|!",
    "refactor_regex": "!|#|&|/|=|>|\\{",
    "5_correct_answers": [
      "#",
      "&",
      "=",
      "&",
      ">"
    ],
    "5_incorrect_answers": [
      ")",
      "y",
      "p",
      "*",
      "A"
    ]
  },
  {
    "regex": "^mat[0-9]x[0-9]$",
    "refactor_regex": "^mat(0|1|2|3|4|5|6|7|8|9)x(0|1|2|3|4|5|6|7|8|9)$",
    "5_correct_answers": [
      "mat0x7",
      "mat8x3",
      "mat3x5",
      "mat8x6",
      "mat4x2"
    ],
    "5_incorrect_answers": [
      "m{tvx7",
      "mat8g3",
      "mat3x?",
      "mkt8x6",
      "mNt4&2"
    ]
  },
  {
    "regex": "already have a",
    "refactor_regex": "(already have a)",
    "5_correct_answers": [
      "already have a",
      "already have a",
      "already have a",
      "already have a",
      "already have a"
    ],
    "5_incorrect_answers": [
      "already havz a",
      "already have[a",
      "alrecdy 5ave a",
      "aHr4ady have a",
      "Wlready have a"
    ]
  },
  {
    "regex": "function\\s*(\\w+)\\(",
    "refactor_regex": "(function)[ \\t\\n\\r\\f\\v]*\\w+\\(",
    "5_correct_answers": [
      "functionu(",
      "functiont0cUa(",
      "function p(",
      "functionj(",
      "function w("
    ],
    "5_incorrect_answers": [
      "fGnctionu(",
      "functiCnt0cUa(",
      "f nction z(",
      "fxnctionj(",
      "funNtion w("
    ]
  },
  {
    "regex": "AMDRouterRegexp-.*",
    "refactor_regex": "(AMDRouterRegexp-).*",
    "5_correct_answers": [
      "AMDRouterRegexp-L.I\\Y%BDQj)b+[kp",
      "AMDRouterRegexp-zO^",
      "AMDRouterRegexp-?x2Tn<;N",
      "AMDRouterRegexp-^o`?uf5GK#f8fUQ$B",
      "AMDRouterRegexp-2n;*RR.4<Q(I&Tj!j@"
    ],
    "5_incorrect_answers": [
      "APDRouterRege#p-L.I\\Y%BDQj)b+[kp",
      "AMDRXuterRcgexp-zO^",
      "AMDRouterRegexm-?xRTn<;N",
      "AMDNouterRegexp-^o`?uf5GK#f8fUQ$B",
      "AMDRouterRkgexp-2n;*RR.4<Q(I&TP!j@"
    ]
  },
  {
    "regex": "^Error: Unknown parameter \"foo\"$",
    "refactor_regex": "^(Error: Unknown parameter \"foo\")$",
    "5_correct_answers": [
      "Error: Unknown parameter \"foo\"",
      "Error: Unknown parameter \"foo\"",
      "Error: Unknown parameter \"foo\"",
      "Error: Unknown parameter \"foo\"",
      "Error: Unknown parameter \"foo\""
    ],
    "5_incorrect_answers": [
      "Error: Unknown parpmeter \"foo\"",
      "Error: Unknown paramet]r \"fooo",
      "Error: Unknown paraIetepH\"foo\"",
      "Error: UnkVown parameter \"doo\"",
      "Error:1Unknown parameter \"foo\""
    ]
  },
  {
    "regex": "%([ASHKV]+)10",
    "refactor_regex": "%([ASHKV][ASHKV]*10)",
    "5_correct_answers": [
      "%VHSKAHKAAHAHASA10",
      "%SSSH10",
      "%KVAVHHSKSSVHKAS10",
      "%HAVAS10",
      "%VHSAVSHAKSKA10"
    ],
    "5_incorrect_answers": [
      "%VHSKAH7AAHAHASA70",
      "7SSSHWY",
      "%KVAVHHSKSSVHzAS10",
      "%HAVAiq0",
      "%VHSAVSHAKS{A10"
    ]
  },
  {
    "regex": "^.*(pages/(.+).html)$",
    "refactor_regex": "^.*pages/.{1,}.html$",
    "5_correct_answers": [
      "nM`z'5pages/S8oNvUToihtml",
      "W,,/!MY6Alk]pages/8j0-xHs&khtml",
      "Y28rIWpages/. rT=g&l0r)L+html",
      "ERm@wV.JOpages/I7Y9zF!DX* ahtml",
      "\\Zpages/u$i6aD)nV@HK\",piWUhtml"
    ],
    "5_incorrect_answers": [
      "nM`z'4pagesZS8oNv=Toihtml",
      "W,,/!M~6Alk]page`/8j0-xHs&0html",
      "Y28rIW0aIes/a rT=g&l0r)L+html",
      "ERm@wV.JOpages/I7Y9zF!DX* ahtmc",
      "4Zpages/u$i6aD)nV@HK\",piWUh/ml"
    ]
  },
  {
    "regex": "\\{\\{mv-s\\}\\}",
    "refactor_regex": "\\{\\{(mv-s)\\}\\}",
    "5_correct_answers": [
      "{{mv-s}}",
      "{{mv-s}}",
      "{{mv-s}}",
      "{{mv-s}}",
      "{{mv-s}}"
    ],
    "5_incorrect_answers": [
      "{{mv-s}W",
      "Z{mv-s}}",
      "{{avts}}",
      "{{mw-s)}",
      "{{mB-s}}"
    ]
  },
  {
    "regex": "[\\n\\s\\t]+$",
    "refactor_regex": "[\\n \\t\\r\\f\\v]+$",
    "5_correct_answers": [
      " ",
      " ",
      " ",
      " ",
      " "
    ],
    "5_incorrect_answers": [
      "y",
      "_",
      "2",
      "w",
      "Z"
    ]
  },
  {
    "regex": "(['\"])?([a-zA-Z0-9_]+)(['\"])?:",
    "refactor_regex": "(('|\"))?[a-zA-Z0-9_]{1,}(('|\"))?:",
    "5_correct_answers": [
      "\"vbujEo:",
      "GxMTLsY3xm20eaA5Zi1\":",
      "KEk9:",
      "vfgIj87xzxnzyUR0RrNcrIFpV':",
      "'LEWlz_:"
    ],
    "5_incorrect_answers": [
      "\"vb#jEo:",
      "GxMTLsY3xm2fea|5Zi1\"`",
      "KE99[",
      "vfgIj87x\\xnzyURZRrNcrIFp[':",
      "!LErlz_&"
    ]
  },
  {
    "regex": "namelist\\b",
    "refactor_regex": "(namelist)\\b",
    "5_correct_answers": [
      "namelist",
      "namelist",
      "namelist",
      "namelist",
      "namelist"
    ],
    "5_incorrect_answers": [
      "namclist",
      "nameF)s*",
      "na*,list",
      "namePist",
      "naXelis;"
    ]
  },
  {
    "regex": "line-rate=\"(\\d.?\\d*)\"",
    "refactor_regex": "line-rate=\"\\d(.|)\\d{0,}\"",
    "5_correct_answers": [
      "line-rate=\"9b77545638\"",
      "line-rate=\"4*442\"",
      "line-rate=\"5278\"",
      "line-rate=\"1f73\"",
      "line-rate=\"6b383339698\""
    ],
    "5_incorrect_answers": [
      "$ine-r4te=\"9b7754563i\"",
      "line-rEte=y4*a42\"",
      "line-raEed\"5278\"",
      "lgne-rate=\"1f73%",
      "line-rate=\"6b383339X98\""
    ]
  },
  {
    "regex": "[<>\\r\\n]",
    "refactor_regex": "<|>|\\r|\\n",
    "5_correct_answers": [
      ">",
      "<",
      "<",
      ">",
      "<"
    ],
    "5_incorrect_answers": [
      ";",
      "?",
      "D",
      "c",
      "|"
    ]
  },
  {
    "regex": "[ \\n\\t\\r\\f{()'\"\\;/[\\]#]",
    "refactor_regex": "( |\\n|\\t|\\r|\\f|\\{|\\(|\\)|'|\"|\\;|/|\\[|\\]|#)",
    "5_correct_answers": [
      ";",
      "/",
      "#",
      "]",
      "]"
    ],
    "5_incorrect_answers": [
      "b",
      "6",
      "l",
      "+",
      "3"
    ]
  },
  {
    "regex": "&title=([^&]+)",
    "refactor_regex": "&title=[^&]{1,}",
    "5_correct_answers": [
      "&title=a\"",
      "&title=pZCO;4[\"j)Bo4tzEDa",
      "&title=)<-8;9",
      "&title=D#v[w*q][FbGaWXRCcFu",
      "&title=G.wP\\kPUoVoG8\"w"
    ],
    "5_incorrect_answers": [
      "& iqle=a\"",
      "2title=pZCO;4[\"j)Bo4tzEDa",
      "&Oitle=)<-8;9",
      "&titl{=D#v[w*q][FbGaWXm7cFu",
      "&t{Fle=G.wP\\kPUoVoG8\"w"
    ]
  },
  {
    "regex": "([astvzqmhlc])([^astvzqmhlc]*)",
    "refactor_regex": "[achl-mqs-tvz][^astvzqmhlc]{0,}",
    "5_correct_answers": [
      "v#rf",
      "sd]W(@E?PyKDD'?/U u0G?2K",
      "m)xeY_Teke%:]O7_D.f%",
      "m 4e*9Vj`#w<P%Y",
      "cNS6x_$I_P FxDwg0[4I9ZZ]/"
    ],
    "5_incorrect_answers": [
      "}#5f",
      "@d]W(@E?PyKDD'?/U u0G?2K",
      "y)xeY_Teke%:]O7cD.f%",
      "} 4e*9Vj`#w<P%Y",
      "MNS6x_$I_P FxDwg0[4ItZZH/"
    ]
  },
  {
    "regex": "^(?:(>))",
    "refactor_regex": "^>",
    "5_correct_answers": [
      ">",
      ">",
      ">",
      ">",
      ">"
    ],
    "5_incorrect_answers": [
      "i",
      "e",
      "5",
      "U",
      "{"
    ]
  },
  {
    "regex": "(^|/)([^:/]+)",
    "refactor_regex": "(^|/)[^:/]+",
    "5_correct_answers": [
      "/YFx2]9Ue^Qm(",
      "/=v)S<E_",
      "/ouw(*",
      "L(",
      "/s ]<rip?Jo.w_WQ6(3'OJ"
    ],
    "5_incorrect_answers": [
      "//Fx2]9UexQm!",
      "/:v)S<E_",
      "/:Rw(*",
      ":(",
      "// ]<rip?Jo.w_mQ6(3'OJ"
    ]
  },
  {
    "regex": "^sails-",
    "refactor_regex": "^(sails-)",
    "5_correct_answers": [
      "sails-",
      "sails-",
      "sails-",
      "sails-",
      "sails-"
    ],
    "5_incorrect_answers": [
      "sNklsE",
      "s)i>s{",
      "cdils-",
      "saiob-",
      "saiBM-"
    ]
  },
  {
    "regex": "core.*",
    "refactor_regex": "(core).*",
    "5_correct_answers": [
      "corew?K1dO1/4J\\)m24AsHG[rS*",
      "core_i33_Tf+=@'Pm>@Kw)M",
      "core\"+N4xL 2TJmF4U-hL\\ !OVw",
      "coreb&C>",
      "core1.*R02C>$@hgB"
    ],
    "5_incorrect_answers": [
      "$orew?K1dO1/4J\\)m24AsHG[rS*",
      "csre_i]3_Tf+=@'Pm>@Kw)M",
      "corU\"+N4xL 2TJmF4U-$L\\ !OVw",
      "horeb&2>",
      "Aorek.*R02C>{@hgB"
    ]
  },
  {
    "regex": "collectd",
    "refactor_regex": "(collectd)",
    "5_correct_answers": [
      "collectd",
      "collectd",
      "collectd",
      "collectd",
      "collectd"
    ],
    "5_incorrect_answers": [
      "collMctd",
      "coll\"&hd",
      "c+ljOctd",
      "co-le0tg",
      "Wollectd"
    ]
  },
  {
    "regex": "<thead>",
    "refactor_regex": "(<thead>)",
    "5_correct_answers": [
      "<thead>",
      "<thead>",
      "<thead>",
      "<thead>",
      "<thead>"
    ],
    "5_incorrect_answers": [
      "<THead>",
      "Kthead>",
      "Rthea8>",
      "<*head>",
      "<Thead>"
    ]
  },
  {
    "regex": "already used",
    "refactor_regex": "(already used)",
    "5_correct_answers": [
      "already used",
      "already used",
      "already used",
      "already used",
      "already used"
    ],
    "5_incorrect_answers": [
      "alreEdy used",
      "alrKady used",
      "alr<adP us*d",
      "&lready used",
      "al)eady used"
    ]
  },
  {
    "regex": "%start",
    "refactor_regex": "(%start)",
    "5_correct_answers": [
      "%start",
      "%start",
      "%start",
      "%start",
      "%start"
    ],
    "5_incorrect_answers": [
      "%s.'rt",
      "%ytart",
      "&start",
      "Msj!rt",
      "UsEart"
    ]
  },
  {
    "regex": "invalid.*root",
    "refactor_regex": "(invalid).*(root)",
    "5_correct_answers": [
      "invalid0RT\"(<3RT6jroot",
      "invalidBIxpE'v;root",
      "invalid]dad&x>LG9@:vmn\\c$Vjroot",
      "invalidY)*qV=d>SrRn:Env`root",
      "invalidQvP\"uyX0 V6`?z&root"
    ],
    "5_incorrect_answers": [
      "inv?lid>RT\"(<3RT6jroot",
      "inBaoidBIxpE'v;root",
      "inval\"d]dad&x>LG9@:vmn@c$Vjroot",
      "invalidY)*=V=d>SrRn:Env`roCt",
      "invalidQvP\"uyX0QV6`?z&rooS"
    ]
  },
  {
    "regex": "\\d{1,4}/\\d{1,4}/\\d{1,4}",
    "refactor_regex": "([0123456789]|[0123456789][0123456789]|[0123456789][0123456789][0123456789]|[0123456789][0123456789][0123456789][0123456789])/([0123456789]|[0123456789][0123456789]|[0123456789][0123456789][0123456789]|[0123456789][0123456789][0123456789][0123456789])/([0123456789]|[0123456789][0123456789]|[0123456789][0123456789][0123456789]|[0123456789][0123456789][0123456789][0123456789])",
    "5_correct_answers": [
      "4672/8263/8",
      "962/1752/27",
      "00/1226/003",
      "84/636/56",
      "6/7269/02"
    ],
    "5_incorrect_answers": [
      "Mm72/8263/8",
      "/6B/1752/27",
      "00/xm26/003",
      "84/636/e3",
      "6/726c/02"
    ]
  },
  {
    "regex": "\"([^\"]+)\"|\\'([^\\']+)\\'|(\\S+)",
    "refactor_regex": "\"([^\"][^\"]{0,})\"|\\'([^\\'][^\\']{0,})\\'|([^ \\t\\n\\r\\f\\v][^ \\t\\n\\r\\f\\v]{0,})",
    "5_correct_answers": [
      "'0E'",
      "\"asQ_?xu3?cdt]+\"",
      "'1'",
      "\"@wBP5#:Pb(U@$R\"",
      "'+1_6`*1Mb6/^xi'"
    ],
    "5_incorrect_answers": [
      " NE'",
      " asQ_?xu3?cdt]+\"",
      " 1+",
      " @wBP5#:bb(U@$R\"",
      " +1_6`*1Mb6/^x9'"
    ]
  },
  {
    "regex": "^v(\\d+\\.\\d+).*",
    "refactor_regex": "^v([0-9]{1,}\\.[0-9]{1,}).*",
    "5_correct_answers": [
      "v3353464364048086.06488300RG4A",
      "v5017755411768328471.6018237626m",
      "v18387.38075406",
      "v8319579858017677470085.960g2 v",
      "v245744556692211483.403654@"
    ],
    "5_incorrect_answers": [
      "v33q3464364048086.0648830tRG4A",
      "v50/7955411768328471.6018237626m",
      "v183i7.38075406",
      "v8319579b58017677470085.960g2 v",
      "v245744556692=114S3.403654@"
    ]
  },
  {
    "regex": "(\\.md|\\.mdown|\\.markdown)",
    "refactor_regex": "(\\.)(md)|(\\.)(mdown)|(\\.)(markdown)",
    "5_correct_answers": [
      ".mdown",
      ".md",
      ".md",
      ".mdown",
      ".mdown"
    ],
    "5_incorrect_answers": [
      ".q,own",
      "ImW",
      ".mX",
      ")=dowO",
      "tmdown"
    ]
  },
  {
    "regex": "^(.+)\\((.+)\\)$",
    "refactor_regex": "^.{1,}\\(.{1,}\\)$",
    "5_correct_answers": [
      ".&!x9`b.Jf'5bg8b6f(9&lyJ\")",
      "8r\"bi('z_z@?`.?Q/wXJUH<a)",
      "l7?0;V`c[RPJW7UBp(2R?<x)",
      "4zxD@&%'-53't -(,1M:e#t]CtyAD\"Pb)",
      "n,[b-]7r\"F(=rky9i\\nv;eCbm=dT1H)"
    ],
    "5_incorrect_answers": [
      ".&!x9`b.J@'5bg8b6f89&lyJA)",
      "8r\"bN:'z_z@?`.?Q/wXJUH<a5",
      "l7?0;V`c[RPJW7U-pc2R?<6)",
      "4zxD@&%'-53't -(,1M:e#t]CtyAD\"Pb|",
      "n,[b-]7r\"F(=r&y9i\\nv;eCbm=dT1HE"
    ]
  },
  {
    "regex": "Invalid template",
    "refactor_regex": "(Invalid template)",
    "5_correct_answers": [
      "Invalid template",
      "Invalid template",
      "Invalid template",
      "Invalid template",
      "Invalid template"
    ],
    "5_incorrect_answers": [
      "InZalid tempxate",
      "Invalid temp0|te",
      "InOZlid template",
      "Inwalid teRQlate",
      "InkaAid template"
    ]
  },
  {
    "regex": "(http://)(\\w*)",
    "refactor_regex": "http://\\w*",
    "5_correct_answers": [
      "http://o",
      "http://",
      "http://TY",
      "http://",
      "http://h"
    ],
    "5_incorrect_answers": [
      "h#tp://o",
      "htt:://",
      ":ttp:r/TY",
      "Dttp://",
      ".tt\\://h"
    ]
  },
  {
    "regex": "undefined `glyph` of value `foo`",
    "refactor_regex": "(undefined `glyph` of value `foo`)",
    "5_correct_answers": [
      "undefined `glyph` of value `foo`",
      "undefined `glyph` of value `foo`",
      "undefined `glyph` of value `foo`",
      "undefined `glyph` of value `foo`",
      "undefined `glyph` of value `foo`"
    ],
    "5_incorrect_answers": [
      "undefined `glyph` of vadue `foo`",
      "unde^ined `glyph` of value `foo@",
      "un)efines `.lyph` of value `foo`",
      "undefined Jg5yph` of value `@oo`",
      "undefized `g=yph` of value `foo`"
    ]
  },
  {
    "regex": "^[^(]+\\(([^)]+)\\)$",
    "refactor_regex": "^[^(][^(]*\\([^)][^)]*\\)$",
    "5_correct_answers": [
      ">:h&h]m.J@(0KFH9JZi1sgv&R^H= Y!)",
      "If7;-g(S /jE!-U$&0cSa)",
      "X@CXL_N4H&D!PUNkPc([e_es7q)",
      "S[/x[kue>9HcF67y3(THV]s)",
      "](?H8!N)"
    ],
    "5_incorrect_answers": [
      "E:h&h]m3J@(0KFH9JZi1sgv&R^H= Y!_",
      "If7;-g_S}/jE!SU$&0cSa)",
      "X@CXL_N4H&C!PUNkPc([e_es7qx",
      "S[/xekue>9HcF6^y3()HV]s)",
      "]|?H8!l)"
    ]
  },
  {
    "regex": "NT 5.1",
    "refactor_regex": "(NT 5).1",
    "5_correct_answers": [
      "NT 5z1",
      "NT 5u1",
      "NT 5)1",
      "NT 5!1",
      "NT 521"
    ],
    "5_incorrect_answers": [
      "kT1591",
      "3v 5u1",
      " 2 <)1",
      "Ng 5!|",
      "NT 52["
    ]
  },
  {
    "regex": "DGENRE",
    "refactor_regex": "(DGENRE)",
    "5_correct_answers": [
      "DGENRE",
      "DGENRE",
      "DGENRE",
      "DGENRE",
      "DGENRE"
    ],
    "5_incorrect_answers": [
      "DtEf[E",
      "*GENRE",
      "!EENR{",
      "DGtNAE",
      "DGENo\\"
    ]
  },
  {
    "regex": "^[\\s]*$",
    "refactor_regex": "(^|^(\\s)+)$",
    "5_correct_answers": [
      " ",
      "   ",
      "    ",
      " ",
      " "
    ],
    "5_incorrect_answers": [
      "&",
      " `P",
      "  S ",
      "N",
      "F"
    ]
  },
  {
    "regex": "\\bThe\\splace\\sin\\swhich\\s",
    "refactor_regex": "\\bThe( |\\t|\\n|\\r|\\f|\\v)place( |\\t|\\n|\\r|\\f|\\v)in( |\\t|\\n|\\r|\\f|\\v)which( |\\t|\\n|\\r|\\f|\\v)",
    "5_correct_answers": [
      "The place in which ",
      "The place in which ",
      "The place in which ",
      "The place in which ",
      "The place in which "
    ],
    "5_incorrect_answers": [
      "The plL?i in which ",
      "T+e place?in whi(h ",
      "Th) pla+R in which ",
      "T-e place {nCwhich ",
      "The plaDe in whicV "
    ]
  },
  {
    "regex": "^\\* \\* \\* ([0-9]|1[0-2]) \\*$",
    "refactor_regex": "^\\* \\* \\* ((0|1|2|3|4|5|6|7|8|9)|1(0|1|2)) \\*$",
    "5_correct_answers": [
      "* * * 5 *",
      "* * * 0 *",
      "* * * 10 *",
      "* * * 4 *",
      "* * * 12 *"
    ],
    "5_incorrect_answers": [
      "* * * : *",
      "* * * k *",
      "O * * 1YY*",
      "* * * 4pS",
      "* * * 12}*"
    ]
  },
  {
    "regex": "a=inactive",
    "refactor_regex": "(a=inactive)",
    "5_correct_answers": [
      "a=inactive",
      "a=inactive",
      "a=inactive",
      "a=inactive",
      "a=inactive"
    ],
    "5_incorrect_answers": [
      "a=inactQYe",
      "a=inacs.v6",
      "a=ina?tiv]",
      ",=Hnacaive",
      "3=inactiHe"
    ]
  },
  {
    "regex": "([//|/\\*|#].*)",
    "refactor_regex": "(/|[|]|\\*|#).*",
    "5_correct_answers": [
      "|mhqU",
      "/fc:",
      "*VV_1",
      "*X",
      "|PZ"
    ],
    "5_incorrect_answers": [
      "fmhqU",
      "K0c)",
      "UV`_>",
      "?X",
      "]RZ"
    ]
  },
  {
    "regex": "^ruby-overhang",
    "refactor_regex": "^(ruby-overhang)",
    "5_correct_answers": [
      "ruby-overhang",
      "ruby-overhang",
      "ruby-overhang",
      "ruby-overhang",
      "ruby-overhang"
    ],
    "5_incorrect_answers": [
      "ruEy-operhang",
      "rubyWoRerhanz",
      "ruby-o_erhavg",
      "ruhy,overhadg",
      "ruby>overha,g"
    ]
  },
  {
    "regex": "(?:(Or|And)([A-Z]))",
    "refactor_regex": "(OrA|OrB|OrC|OrD|OrE|OrF|OrG|OrH|OrI|OrJ|OrK|OrL|OrM|OrN|OrO|OrP|OrQ|OrR|OrS|OrT|OrU|OrV|OrW|OrX|OrY|OrZ|AndA|AndB|AndC|AndD|AndE|AndF|AndG|AndH|AndI|AndJ|AndK|AndL|AndM|AndN|AndO|AndP|AndQ|AndR|AndS|AndT|AndU|AndV|AndW|AndX|AndY|AndZ)",
    "5_correct_answers": [
      "OrT",
      "AndU",
      "AndH",
      "OrY",
      "OrR"
    ],
    "5_incorrect_answers": [
      "ObT",
      "A dU",
      "An{H",
      "Or6",
      "*rR"
    ]
  },
  {
    "regex": "--[^\\n]*",
    "refactor_regex": "--[^\\n]{0,}",
    "5_correct_answers": [
      "--`-<",
      "--k;N#m:^.m",
      "--QeHwer!.^]",
      "--rg!e8_\\!hrLWGhOLrKfJh",
      "--FCVU`6Kmw>3w>ec6?FZB\"N"
    ],
    "5_incorrect_answers": [
      "1-`-<",
      "-5khNHm:^.m",
      " AQeHwer!.^#",
      "-3rg!e8_\\!hrLWGhOLrKfJh",
      "-(FCVU`6Kmw>3w>ec6?FZB\"N"
    ]
  },
  {
    "regex": "(\\[\\s*)@(\\w)",
    "refactor_regex": "\\[\\s*@\\w",
    "5_correct_answers": [
      "[@0",
      "[@m",
      "[@J",
      "[@4",
      "[@p"
    ],
    "5_incorrect_answers": [
      "[h.",
      "[{7",
      "[Cm",
      "P@4",
      ")dg"
    ]
  },
  {
    "regex": "^I finish the Task$",
    "refactor_regex": "^(I finish the Task)$",
    "5_correct_answers": [
      "I finish the Task",
      "I finish the Task",
      "I finish the Task",
      "I finish the Task",
      "I finish the Task"
    ],
    "5_incorrect_answers": [
      "I fRnish -|e Task",
      "I fi)^sh the .ask",
      "I)finish the Task",
      "I finish th| Task",
      "I fUni/h the Tgsk"
    ]
  },
  {
    "regex": "__STREETVALUE__",
    "refactor_regex": "(__STREETVALUE__)",
    "5_correct_answers": [
      "__STREETVALUE__",
      "__STREETVALUE__",
      "__STREETVALUE__",
      "__STREETVALUE__",
      "__STREETVALUE__"
    ],
    "5_incorrect_answers": [
      "__STREE9VAL$E__",
      "__STQEETVALUE__",
      "T_S/pEETVALUE__",
      "__STREETVALUE!_",
      "__SUREEAVALUE__"
    ]
  },
  {
    "regex": "^\"(.*)\"\\s*$",
    "refactor_regex": "^\".*\"( |\\t|\\n|\\r|\\f|\\v)*$",
    "5_correct_answers": [
      "\" !Y;&3\"",
      "\"Wd`>R03W\"",
      "\"Lydu7Vjq`HIsYLQmFcFy<u\"",
      "\"\"",
      "\"0IiZOgt,wi-2M\""
    ],
    "5_incorrect_answers": [
      "5 !Y;&3R",
      "84d`>R03W\"",
      "Lqydu7Vjq`HIsYLQmFhFy<u\"",
      "`\"",
      "40IiZOgt,wB-2M\""
    ]
  },
  {
    "regex": "[,;\\n]",
    "refactor_regex": "(,|;|\\n)",
    "5_correct_answers": [
      ",",
      ",",
      ",",
      ",",
      ";"
    ],
    "5_incorrect_answers": [
      "w",
      "i",
      "V",
      "D",
      "&"
    ]
  },
  {
    "regex": "(\\}\\s*)$",
    "refactor_regex": "(\\}( |\\t|\\n|\\r|\\f|\\v)*)$",
    "5_correct_answers": [
      "}",
      "}",
      "}",
      "}",
      "} "
    ],
    "5_incorrect_answers": [
      "L",
      ")",
      "$",
      "0",
      "}n"
    ]
  },
  {
    "regex": "\\s*(<!--\\s*/.+)",
    "refactor_regex": "( |\\t|\\n|\\r|\\f|\\v)*<!--( |\\t|\\n|\\r|\\f|\\v)*/.{1,}",
    "5_correct_answers": [
      "<!--/8WE>8NZ&&qB]f1rE?@\"",
      "<!--/6VJf37lAV8/%o;C+",
      "<!--/GM(&MY<7gq!6CC6E<k",
      "<!-- /3Dv=w5R,zPIq1&2,",
      "<!-- /FW`Xzv>S6auYf<FYSo"
    ],
    "5_incorrect_answers": [
      "<!-?/8WE>8NZ&&qB]f1rE?@\"",
      "g!-Q/6VFf37lAV8/%o;C+",
      "<?9-/GY(&MY<7gq!6CC6E<k",
      "<!-- 43Dv=wRR,zPIq1&2,",
      "<!-- XFW`Xzv>S6auYfhjYSo"
    ]
  },
  {
    "regex": "Invalid auth",
    "refactor_regex": "(Invalid auth)",
    "5_correct_answers": [
      "Invalid auth",
      "Invalid auth",
      "Invalid auth",
      "Invalid auth",
      "Invalid auth"
    ],
    "5_incorrect_answers": [
      "Invalid7aith",
      "InSalid.auth",
      ":nvalid aXt)",
      "In[ali2 aLth",
      "IXvalid auth"
    ]
  },
  {
    "regex": "[^/\\\\\\\\]+$",
    "refactor_regex": "[^/\\\\]{1,}$",
    "5_correct_answers": [
      "-&us WOxa",
      "MVd&lZT^C>n8Ss6l\"aR!(bIl",
      "K`",
      "d;&<`Aib6z>_j^H\"<",
      "Sw2Zhoz)OKpvK?BWP4ySKJe"
    ],
    "5_incorrect_answers": [
      "-&u,\\cOxa",
      "MVd&lZT^C>n8/s6l\"5E!(bIl",
      "/`",
      "d;&<sA\\b6z>_j^H\"<",
      "Sw2Zhoz){KpvK?BWP4y/KJe"
    ]
  },
  {
    "regex": "^(\\s*)(@endif)\\b(.*$)",
    "refactor_regex": "^([ \\t\\n\\r\\f\\v]{0,})(@endif)\\b(.*$)",
    "5_correct_answers": [
      "@endif+\\N` ,!A3_",
      "@endif<qz-YTV_pK=",
      "@endif\\CXP09hy=(YK",
      "@endif:&g]e@#uQp%8W",
      " @endif]b`K.4n)bxv_!7/ NuG"
    ],
    "5_incorrect_answers": [
      "@endff+\\N` ,!A3_",
      "@endij<qw-YTV_pK=",
      "cendiG\\CXP09h'=(YK",
      "@;n4if:&,]e@#uQp%8W",
      " @endO\"]b`K.4n)bxv_!79 NuG"
    ]
  },
  {
    "regex": "^/([a-z]:)",
    "refactor_regex": "^/[abcdefghijklmnopqrstuvwxyz]:",
    "5_correct_answers": [
      "/v:",
      "/g:",
      "/x:",
      "/r:",
      "/f:"
    ],
    "5_incorrect_answers": [
      "/Z6",
      "8g:",
      "/]:",
      "\\}:",
      "Df5"
    ]
  },
  {
    "regex": "\\[(\\w+)\\([a-z]*\\)\\]",
    "refactor_regex": "\\[(\\w{1,})\\([a-z]*\\)\\]",
    "5_correct_answers": [
      "[Cl0(sidkzeuhtjfxt)]",
      "[yT(ujlguxlgb)]",
      "[Z(dwameilevuouclmxfxziwq)]",
      "[u(eika)]",
      "[X(diiclkxfqictwjujbaovpkgx)]"
    ],
    "5_incorrect_answers": [
      "[Cl0(sidkzeuhtjfxt8]",
      "[yTBuj.guxlgb)]",
      "[Z(dwameilevu#ucl\"xfxziwq)-",
      "[u(eik])]",
      "[X(diiclkxfqictwjujbaovpkgx\"]"
    ]
  },
  {
    "regex": "daily/(.+)",
    "refactor_regex": "(daily/.+)",
    "5_correct_answers": [
      "daily/Tx^:X8`brD[t=USvwJ,A\"w",
      "daily/0YrJI);6RdWp\"Wu:V8`&L@\"&q",
      "daily/^q;'G/",
      "daily//Mz+#k n<Oe;14y",
      "daily/HAO!l ^w"
    ],
    "5_incorrect_answers": [
      "_|ily/Tx^JX8`brD[t=USvwJ,A\"w",
      "daiLy/0NrJI);6RdWp\"Wu:V8`&L@\"&q",
      "dVil]/^q;'G/",
      "daiFy//Mz+#k n<OeZ14y",
      "dV2ly/HAO!l ^w"
    ]
  },
  {
    "regex": "\\(|\\)|:",
    "refactor_regex": "[():]",
    "5_correct_answers": [
      ")",
      "(",
      ")",
      "(",
      ")"
    ],
    "5_incorrect_answers": [
      "L",
      "&",
      "$",
      "k",
      "c"
    ]
  },
  {
    "regex": "^rating",
    "refactor_regex": "^(rating)",
    "5_correct_answers": [
      "rating",
      "rating",
      "rating",
      "rating",
      "rating"
    ],
    "5_incorrect_answers": [
      "r@oinX",
      "rat3nA",
      "Fating",
      "rXBinK",
      "ratieg"
    ]
  },
  {
    "regex": "\\(ec.+?\\)",
    "refactor_regex": "\\((ec).{1,}?\\)",
    "5_correct_answers": [
      "(ecg8Z_B5QVtp@NVQ()",
      "(ecY)",
      "(ecBf1fEH_IB\\v?1Pi$ 1><k)",
      "(ecQF!QQ0\\F1-DfRuC()",
      "(ecQ?h@O`?2O%8F(!^Os NwZX>$)"
    ],
    "5_incorrect_answers": [
      "(Vcg8Z@B5QVtb@NVQ()",
      "(ecER",
      "yecBf1fEH_,B\\v?1Pi$ 1>|k)",
      "zecQ?!QQ0\\F1-DfRuC()",
      "(ekQ?h@O`?2O%8F(!nOs NwZX>$)"
    ]
  },
  {
    "regex": "^Options:$",
    "refactor_regex": "^(Options:)$",
    "5_correct_answers": [
      "Options:",
      "Options:",
      "Options:",
      "Options:",
      "Options:"
    ],
    "5_incorrect_answers": [
      "OpSions:",
      "6pt~ons:",
      "Obt6o]s:",
      "Op~iond:",
      "!pt3ons:"
    ]
  },
  {
    "regex": "\\{component}",
    "refactor_regex": "\\{(component)}",
    "5_correct_answers": [
      "{component}",
      "{component}",
      "{component}",
      "{component}",
      "{component}"
    ],
    "5_incorrect_answers": [
      "{componJnt}",
      "{cotponeBt}",
      "{Homponeno}",
      "{comp|@ent}",
      "{componunt}"
    ]
  },
  {
    "regex": "[^-_.* 0-9A-Za-z]",
    "refactor_regex": "[^-_.* \\dA-Za-z]",
    "5_correct_answers": [
      "`",
      "+",
      "\"",
      "<",
      "="
    ],
    "5_incorrect_answers": [
      "U",
      "V",
      "Y",
      "n",
      "P"
    ]
  },
  {
    "regex": "^\\./log$",
    "refactor_regex": "^[.]/log$",
    "5_correct_answers": [
      "./log",
      "./log",
      "./log",
      "./log",
      "./log"
    ],
    "5_incorrect_answers": [
      "S=log",
      "./aog",
      "e/log",
      ".Wlbg",
      "./lo~"
    ]
  },
  {
    "regex": "^Android",
    "refactor_regex": "^(Android)",
    "5_correct_answers": [
      "Android",
      "Android",
      "Android",
      "Android",
      "Android"
    ],
    "5_incorrect_answers": [
      "Y\\droid",
      "A Qroid",
      "And6oid",
      "Sndr,ie",
      "ATCro4d"
    ]
  },
  {
    "regex": "this[.]dataFormatter[\\n\\s]+[.]",
    "refactor_regex": "this\\.dataFormatter[\\n \\t\\n\\r\\f\\v]{1,}\\.",
    "5_correct_answers": [
      "this.dataFormatter  .",
      "this.dataFormatter .",
      "this.dataFormatter .",
      "this.dataFormatter .",
      "this.dataFormatter ."
    ],
    "5_incorrect_answers": [
      "this.CataF|rmatner  .",
      "this.dytaFormatter ^",
      "t>is.dataFormattero;",
      "this.dat)Formatxer .",
      "this.da#a%ormat<er ."
    ]
  },
  {
    "regex": "iPad[\\s\\S]*OS[\\s\\S]*like Mac OS X",
    "refactor_regex": "iPad[ \\t\\n\\r\\f\\v\\S]{0,}OS[ \\t\\n\\r\\f\\v\\S]{0,}like Mac OS X",
    "5_correct_answers": [
      "iPadOSlike Mac OS X",
      "iPadOSlike Mac OS X",
      "iPadOS like Mac OS X",
      "iPadOSlike Mac OS X",
      "iPadOSlike Mac OS X"
    ],
    "5_incorrect_answers": [
      "iPadOSldke Mac OS X",
      "iPadOSlikeUMac OS X",
      "iPadOS like Mac O6 X",
      "iPad3SlikG Max OS X",
      "iP[tOSlike Mac OS ^"
    ]
  },
  {
    "regex": "\\.js$|[^\\.\\w]\\w*$",
    "refactor_regex": "(\\.)(js)$|[^\\.\\w](\\w+){0,1}$",
    "5_correct_answers": [
      ".js",
      ".js",
      ".js",
      ".js",
      ".js"
    ],
    "5_incorrect_answers": [
      ".os",
      "9js",
      "hjs",
      "ujs",
      ".#8"
    ]
  },
  {
    "regex": "[/]+$",
    "refactor_regex": "[/][/]*$",
    "5_correct_answers": [
      "////////////////////",
      "/////////////////////////",
      "///////////////////",
      "//////////////////////",
      "////////////"
    ],
    "5_incorrect_answers": [
      "////i/////////D/////",
      "/////Y///////////////////",
      "/////V//////%//////",
      "/////////L////////////",
      "/-////_/////"
    ]
  },
  {
    "regex": "({street})",
    "refactor_regex": "{street}",
    "5_correct_answers": [
      "{street}",
      "{street}",
      "{street}",
      "{street}",
      "{street}"
    ],
    "5_incorrect_answers": [
      "{!/reet}",
      "{stAeet}",
      "{rtreet}",
      "{streG+}",
      "{str6et}"
    ]
  },
  {
    "regex": "(.*_test\\.js$|polyfills)",
    "refactor_regex": ".*(_test)[.](js)$|(polyfills)",
    "5_correct_answers": [
      "=2=^$R)VVd_test.js",
      "vF<W-uP_test.js",
      "polyfills",
      "7,5Rz<y9w^a4)hi(_test.js",
      "polyfills"
    ],
    "5_incorrect_answers": [
      "=2=Y$R)VVd_txst.bs",
      "vF<WpuP_tfst.ji",
      "polnHills",
      "7,5?z<y9w^a4)hi(_tEst.js",
      "polylills"
    ]
  },
  {
    "regex": "\\bCTR\\b",
    "refactor_regex": "\\b(CTR)\\b",
    "5_correct_answers": [
      "CTR",
      "CTR",
      "CTR",
      "CTR",
      "CTR"
    ],
    "5_incorrect_answers": [
      "GT$",
      "CT%",
      "CUR",
      "$~R",
      "|Ty"
    ]
  },
  {
    "regex": "(^7[0-9]+)$",
    "refactor_regex": "^7[0-9]{1,}$",
    "5_correct_answers": [
      "7893621517",
      "72778",
      "71",
      "794",
      "740144"
    ],
    "5_incorrect_answers": [
      "78936k1517",
      "7O778",
      " 1",
      "v9?",
      "7401-T"
    ]
  },
  {
    "regex": "(fbox)|(color)",
    "refactor_regex": "((fbox)|(color))",
    "5_correct_answers": [
      "color",
      "color",
      "fbox",
      "fbox",
      "fbox"
    ],
    "5_incorrect_answers": [
      "*ogor",
      "coMor",
      "\"pox",
      "fbo.",
      "f'lx"
    ]
  },
  {
    "regex": "^specs/",
    "refactor_regex": "^(specs/)",
    "5_correct_answers": [
      "specs/",
      "specs/",
      "specs/",
      "specs/",
      "specs/"
    ],
    "5_incorrect_answers": [
      "s6ecs/",
      "spBc_/",
      "pp_csi",
      "speAs/",
      "1:ecs/"
    ]
  },
  {
    "regex": "<!--([\\w\\W]*?)-->",
    "refactor_regex": "<!--(([a-zA-Z0-9_]|\\W)+)??-->",
    "5_correct_answers": [
      "<!---->",
      "<!--UEW#5m-->",
      "<!--V-->",
      "<!---->",
      "<!--V-->"
    ],
    "5_incorrect_answers": [
      "<!--U->",
      "<!-\\UEW#*m-->",
      "t!--d-w>",
      "<!{--->",
      "<EL-V-->"
    ]
  },
  {
    "regex": "^[^\\d_][_0-9a-zA-Z]*\\Z",
    "refactor_regex": "^[^0-9_][_0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ]{0,}\\Z",
    "5_correct_answers": [
      "rinS4we4iLvIawkt",
      "GyVr",
      "wXKzyTa0",
      " XLFDAZGT65",
      "KocexF6Dib5dyjT3cp2lHQ"
    ],
    "5_incorrect_answers": [
      "ri!S4we4iLv3.wkt",
      "8LVr",
      "wXKzyT^0",
      "`XL=DAZGTn5",
      "KocexF6D\"b5dyjT3cp2lHQ"
    ]
  },
  {
    "regex": "data-cid=\"\\w+\"",
    "refactor_regex": "data-cid=\"\\w(\\w+)?\"",
    "5_correct_answers": [
      "data-cid=\"N3\"",
      "data-cid=\"4\"",
      "data-cid=\"J\"",
      "data-cid=\"T\"",
      "data-cid=\"c\""
    ],
    "5_incorrect_answers": [
      "?aUa-cid=\"q3\"",
      "dmta-cid=\"WK",
      ">Dta/cid=\"J\"",
      "data-c5d=\"Tc",
      "daPa-cidL\"n\""
    ]
  },
  {
    "regex": "^cheese",
    "refactor_regex": "^(cheese)",
    "5_correct_answers": [
      "cheese",
      "cheese",
      "cheese",
      "cheese",
      "cheese"
    ],
    "5_incorrect_answers": [
      "ch\"e'e",
      "chees.",
      "HheeEe",
      "c!ee;e",
      "chvese"
    ]
  },
  {
    "regex": "^[nN]",
    "refactor_regex": "^[Nn]",
    "5_correct_answers": [
      "n",
      "N",
      "N",
      "N",
      "N"
    ],
    "5_incorrect_answers": [
      "4",
      ">",
      "a",
      "G",
      "T"
    ]
  },
  {
    "regex": "^esri",
    "refactor_regex": "^(esri)",
    "5_correct_answers": [
      "esri",
      "esri",
      "esri",
      "esri",
      "esri"
    ],
    "5_incorrect_answers": [
      "esrB",
      ")s\\i",
      "esr7",
      "esr4",
      "csri"
    ]
  },
  {
    "regex": "\\bThe\\stime\\s",
    "refactor_regex": "\\b(The |The\\t|The\\n|The\\r|The\\f|The\\v)(time |time\\t|time\\n|time\\r|time\\f|time\\v)",
    "5_correct_answers": [
      "The time ",
      "The time ",
      "The time ",
      "The time ",
      "The time "
    ],
    "5_incorrect_answers": [
      "TYe timf ",
      "The time.",
      "The t9)e;",
      "TVe6t(me ",
      "T8e time "
    ]
  },
  {
    "regex": "\\d+_\\d+.csv$",
    "refactor_regex": "\\d+_\\d+.(csv)$",
    "5_correct_answers": [
      "7173190806703366_861080434957pcsv",
      "312871976115_041925283csv",
      "683868_98850683645612041584001tcsv",
      "7975957464_29530ucsv",
      "21_7315?csv"
    ],
    "5_incorrect_answers": [
      "717H190809703366_A61080434957pcsv",
      "31287C976115_041925283csv",
      "683868_98850683*45612041584001tcs)",
      "7975957464_2.530ucsv",
      "21_ 317?csv"
    ]
  },
  {
    "regex": "\\{gfm-js-extract-pre-([0-9]+)\\}",
    "refactor_regex": "\\{gfm-js-extract-pre-[0-9]+\\}",
    "5_correct_answers": [
      "{gfm-js-extract-pre-4249}",
      "{gfm-js-extract-pre-1393407}",
      "{gfm-js-extract-pre-49872}",
      "{gfm-js-extract-pre-74}",
      "{gfm-js-extract-pre-644}"
    ],
    "5_incorrect_answers": [
      "{$f&8js-extract-pre-4249}",
      "{gfm-js-e:tract-pre-v393407}",
      "{gfm-js-extract-prev49872}",
      "{gfI-js-/xtrWct-pre-74}",
      "{gfm-Ps-extract-pve-644}"
    ]
  },
  {
    "regex": "^(0|1)*$",
    "refactor_regex": "^[01]{0,}$",
    "5_correct_answers": [
      "1",
      "01011100",
      "01010100011001001000",
      "00001010010101011100000",
      "00101110111101001"
    ],
    "5_incorrect_answers": [
      "I",
      "0m011100",
      "0#0101^0011001001000",
      "000b101001010101110<000",
      "0010111011%101001"
    ]
  },
  {
    "regex": "process\\.env\\.(\\w+)",
    "refactor_regex": "process\\.env\\.(\\w\\w*)",
    "5_correct_answers": [
      "process.env.in",
      "process.env.U",
      "process.env.7D",
      "process.env.v7",
      "process.env.DEU"
    ],
    "5_incorrect_answers": [
      "proceOWWenv.in",
      "prmcevs.env.U",
      "[rocess.env.7D",
      "pro/ess;env.v7",
      "procEss.env.)EU"
    ]
  },
  {
    "regex": "^Credentials incomplete",
    "refactor_regex": "^(Credentials incomplete)",
    "5_correct_answers": [
      "Credentials incomplete",
      "Credentials incomplete",
      "Credentials incomplete",
      "Credentials incomplete",
      "Credentials incomplete"
    ],
    "5_incorrect_answers": [
      "CSedentialskincoAplete",
      "CQeAentials incomplete",
      "Credentmals incomplete",
      "Credentials Nn[omplute",
      "CredentialN incomplete"
    ]
  },
  {
    "regex": "[\\w).+\\-_$\\]]",
    "refactor_regex": "[a-zA-Z0-9).+\\-_$\\]]",
    "5_correct_answers": [
      "t",
      "K",
      "b",
      "G",
      "u"
    ],
    "5_incorrect_answers": [
      ";",
      "?",
      "&",
      "\\",
      "%"
    ]
  },
  {
    "regex": "(bo(_|\\.)peep|peep(_|\\.)bo)",
    "refactor_regex": "bo(_|[.])peep|peep(_|[.])bo",
    "5_correct_answers": [
      "peep.bo",
      "peep.bo",
      "bo.peep",
      "peep_bo",
      "peep.bo"
    ],
    "5_incorrect_answers": [
      "H(ep.bo",
      "p\\ep.bo",
      "bo.xeep",
      "peeI_zY",
      "peepEqo"
    ]
  },
  {
    "regex": "(_nn\\d)",
    "refactor_regex": "(_nn)\\d",
    "5_correct_answers": [
      "_nn1",
      "_nn3",
      "_nn2",
      "_nn0",
      "_nn9"
    ],
    "5_incorrect_answers": [
      "Gun ",
      "Un!G",
      "Ann2",
      "*kn0",
      "g#n9"
    ]
  },
  {
    "regex": "userAvatar",
    "refactor_regex": "(userAvatar)",
    "5_correct_answers": [
      "userAvatar",
      "userAvatar",
      "userAvatar",
      "userAvatar",
      "userAvatar"
    ],
    "5_incorrect_answers": [
      "KserAvat`r",
      "usepAvat_r",
      "userAv+tar",
      "useUAva>ar",
      "use;Avatar"
    ]
  },
  {
    "regex": "esri\\.InfoTemplate",
    "refactor_regex": "(esri\\.)(InfoTemplate)",
    "5_correct_answers": [
      "esri.InfoTemplate",
      "esri.InfoTemplate",
      "esri.InfoTemplate",
      "esri.InfoTemplate",
      "esri.InfoTemplate"
    ],
    "5_incorrect_answers": [
      "esrC.Info*emplate",
      "esri.2nfoTemplate",
      "Usri.xnfoTemplate",
      "esri.enfoTemp8atx",
      "isri.InfoTLmplate"
    ]
  },
  {
    "regex": "dropdownContainer",
    "refactor_regex": "(dropdownContainer)",
    "5_correct_answers": [
      "dropdownContainer",
      "dropdownContainer",
      "dropdownContainer",
      "dropdownContainer",
      "dropdownContainer"
    ],
    "5_incorrect_answers": [
      "dropdMwnCo6tainer",
      "dropdownCgntainer",
      "dropddwnContainer",
      "drocdowwCo)tainer",
      "drDpdownCogt=iner"
    ]
  },
  {
    "regex": "\"<",
    "refactor_regex": "(\"<)",
    "5_correct_answers": [
      "\"<",
      "\"<",
      "\"<",
      "\"<",
      "\"<"
    ],
    "5_incorrect_answers": [
      ";<",
      "T<",
      "|B",
      "[<",
      "\"?"
    ]
  },
  {
    "regex": "CoreText performance note",
    "refactor_regex": "(CoreText performance note)",
    "5_correct_answers": [
      "CoreText performance note",
      "CoreText performance note",
      "CoreText performance note",
      "CoreText performance note",
      "CoreText performance note"
    ],
    "5_incorrect_answers": [
      "boreText ,erformance note",
      "CoreTe+t5performance note",
      "CoreTZxt performance note",
      "CoreText performance noTe",
      "CoreText peDf`rmance note"
    ]
  },
  {
    "regex": "^/address/?$",
    "refactor_regex": "^/address(/)?$",
    "5_correct_answers": [
      "/address",
      "/address/",
      "/address/",
      "/address/",
      "/address/"
    ],
    "5_incorrect_answers": [
      "/C>dSess",
      "/addueRs/",
      "/aAdrlss/",
      "`aXdress/",
      "/add9ess/"
    ]
  },
  {
    "regex": "^variable,(?:number|string)$",
    "refactor_regex": "^(variable,)(number|string)$",
    "5_correct_answers": [
      "variable,number",
      "variable,number",
      "variable,string",
      "variable,string",
      "variable,string"
    ],
    "5_incorrect_answers": [
      "vari GlU,number",
      "5_riaele,number",
      "variabl!,strin>",
      "varia#le,strimg",
      "vari.bl3,stAing"
    ]
  },
  {
    "regex": "Xcode (\\d+)\\.(\\d+)",
    "refactor_regex": "Xcode ([0-9]{1,})\\.([0-9]{1,})",
    "5_correct_answers": [
      "Xcode 8037.8510625903",
      "Xcode 43260.0401818700642350587",
      "Xcode 78653875.8789966493",
      "Xcode 8718.593195",
      "Xcode 2475454496.8474756"
    ],
    "5_incorrect_answers": [
      "X*ode 8037.85106259P3",
      "Xcowe 43260.0401818700642350587",
      "Xcode 7f653875.8789966493",
      "X9ode 8m18.593j95",
      "Xcos7 24754544@6.8474756"
    ]
  },
  {
    "regex": "@@([a-zA-Z_]\\w*)\\b",
    "refactor_regex": "(@@(a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|_)(a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|0|1|2|3|4|5|6|7|8|9|_)*)\\b",
    "5_correct_answers": [
      "@@sx1",
      "@@v",
      "@@r",
      "@@W",
      "@@Ek"
    ],
    "5_incorrect_answers": [
      "Z@sxv",
      "f@v",
      "@@*",
      "@6S",
      "@@;k"
    ]
  },
  {
    "regex": "(\\d){3}-(\\d){3}",
    "refactor_regex": "\\d\\d\\d-\\d\\d\\d",
    "5_correct_answers": [
      "716-549",
      "772-812",
      "726-267",
      "955-052",
      "335-389"
    ],
    "5_incorrect_answers": [
      "?1j-5v9",
      "77cM812",
      "226-2/7",
      "95c-f5N",
      "33N-3-9"
    ]
  },
  {
    "regex": "^No modules match",
    "refactor_regex": "^(No modules match)",
    "5_correct_answers": [
      "No modules match",
      "No modules match",
      "No modules match",
      "No modules match",
      "No modules match"
    ],
    "5_incorrect_answers": [
      "No yo[ulhs match",
      "No Aod&les matAh",
      "N4 mbdulSs match",
      "No}modu9Xs match",
      "Wo modules match"
    ]
  },
  {
    "regex": "^me([lrwy])([aiueo])(.*)$",
    "refactor_regex": "^me((l|r|w|y)(a|i|u|e|o).*)$",
    "5_correct_answers": [
      "meriG)$@_&k)s%pP@N$mkvI",
      "mewo%MF^'E$HsjgG!aDJEsR8LN",
      "meri\"!/1c?/=sTV",
      "merojNI&h+!xT8kJ",
      "meyil=?7` =(+["
    ],
    "5_incorrect_answers": [
      "meViG)$@_&k)s%pP@N$mkvI",
      "medo%Ma^{E$HsjgG!aDJEsR8LN",
      "keri\"!/1c?/=9TV",
      "zer4jNI&h+!xG8kJ",
      "=eail=?7` =(+["
    ]
  },
  {
    "regex": "[/\\\\](index|main)$",
    "refactor_regex": "(/index|/main|\\\\index|\\\\main)$",
    "5_correct_answers": [
      "/index",
      "/index",
      "\\index",
      "\\index",
      "\\main"
    ],
    "5_incorrect_answers": [
      "G{ndex",
      "/ind=x",
      "\\*nvex",
      "\\ikde)",
      "\\ma)0"
    ]
  },
  {
    "regex": "insertitemcost.*-6[^0-9]",
    "refactor_regex": "(insertitemcost).*(-6)\\D",
    "5_correct_answers": [
      "insertitemcosto\"4tt-6k",
      "insertitemcostJ-6b",
      "insertitemcostLp;`ZA\"7-6?",
      "insertitemcostf()WiECL\\ti<-6$",
      "insertitemcostY;Ul8^Z)ab-1H-I-0-6K"
    ],
    "5_incorrect_answers": [
      "inserKitemcosto\"4tt-6k",
      "insFrtitemcostJ-6b",
      "in-ertitemcostLpY`ZA\"7-f?",
      "insYrtitemcostf()WVECL\\ti<-6$",
      "insertitemco8tY;Ul8^Z)ab-1H-+-0-6K"
    ]
  },
  {
    "regex": "tomato",
    "refactor_regex": "(tomato)",
    "5_correct_answers": [
      "tomato",
      "tomato",
      "tomato",
      "tomato",
      "tomato"
    ],
    "5_incorrect_answers": [
      "t)maco",
      "tomaqo",
      "tomNKy",
      "tomat9",
      "r#mato"
    ]
  },
  {
    "regex": "nx$",
    "refactor_regex": "(nx)$",
    "5_correct_answers": [
      "nx",
      "nx",
      "nx",
      "nx",
      "nx"
    ],
    "5_incorrect_answers": [
      "Ex",
      "n2",
      "6.",
      "8V",
      "\"L"
    ]
  },
  {
    "regex": "^table([^.]*)?\\.",
    "refactor_regex": "^(table)(([^.]{0,}))?\\.",
    "5_correct_answers": [
      "table.",
      "table.",
      "table.",
      "table.",
      "tabletmbDy_8js]\\F1D%Fl>Ym."
    ],
    "5_incorrect_answers": [
      "t@lle.",
      "t$bl;.",
      "p]bLe.",
      "ta8le.",
      "OAbletmbDy_8js]\\F1D,Fl>Ym."
    ]
  },
  {
    "regex": "\\.show",
    "refactor_regex": "[.](show)",
    "5_correct_answers": [
      ".show",
      ".show",
      ".show",
      ".show",
      ".show"
    ],
    "5_incorrect_answers": [
      ".ehos",
      ".0how",
      ".scow",
      "!shoJ",
      "jsho2"
    ]
  },
  {
    "regex": "\\s+this.treedata = {",
    "refactor_regex": "\\s{1,}(this).treedata = {",
    "5_correct_answers": [
      "  this[treedata = {",
      " thisltreedata = {",
      " thisitreedata = {",
      " this0treedata = {",
      "  thisatreedata = {"
    ],
    "5_incorrect_answers": [
      "  Ohis[treedata = {",
      " !hisitreedata & {",
      " Ahisitreedata = {",
      "hthis0treedat* = {",
      "_ thisatreedata = {"
    ]
  },
  {
    "regex": "^(?:parameter\\b)",
    "refactor_regex": "^(parameter)\\b",
    "5_correct_answers": [
      "parameter",
      "parameter",
      "parameter",
      "parameter",
      "parameter"
    ],
    "5_incorrect_answers": [
      "ppramet/r",
      "pa?ameNer",
      "caram}tTr",
      "par1meter",
      "paraaeTer"
    ]
  },
  {
    "regex": "^\\./bower_components/.+$",
    "refactor_regex": "^[.]/bower_components/.+$",
    "5_correct_answers": [
      "./bower_components/b$%@NA(",
      "./bower_components/he9",
      "./bower_components/fDT.(V+D5t3!8)",
      "./bower_components/+'[O %,t,J>1u",
      "./bower_components/`qN!!4g*rN\"!pBL"
    ],
    "5_incorrect_answers": [
      "./bower_c0mponents/b$%@NA(",
      "./bower_comp}nentQ/he!",
      ".!bower_components/fDT;(V+D5t3!8*",
      "./bower_component-/+'[O %,t,J>1u",
      "./bower_componehts/CqN!!4g*rNu!pBL"
    ]
  },
  {
    "regex": "^http://webmention\\.org",
    "refactor_regex": "^http://webmention(\\.)org",
    "5_correct_answers": [
      "http://webmention.org",
      "http://webmention.org",
      "http://webmention.org",
      "http://webmention.org",
      "http://webmention.org"
    ],
    "5_incorrect_answers": [
      "ht~p://we9mention.o]g",
      "http://we=mentioO?org",
      "http://webm*ntion.org",
      "httpc//weWmention.org",
      "http://webmenti3n.org"
    ]
  },
  {
    "regex": "Math\\.round\\s*\\(([^\\)]+)\\)",
    "refactor_regex": "(Math)[.](round)\\s{0,}\\(([^\\)]{1,})\\)",
    "5_correct_answers": [
      "Math.round(%:0=)",
      "Math.round  (,a)",
      "Math.round(U1o)",
      "Math.round (Pf*9Kk%Tly!9_B+k[)",
      "Math.round(k0%$bZe#!s)"
    ],
    "5_incorrect_answers": [
      "Math.roun\\(%:0=)",
      "Math.round> (,a)",
      "Math.round(U1}^",
      "Mathiround (Pf*9Kk%Tly!9_B+k[)",
      "Math.roundLk0%$bZe#!s)"
    ]
  },
  {
    "regex": "var\\s?(\\w+)\\s?=\\s?;",
    "refactor_regex": "var\\s{0,1}\\w+\\s{0,1}=\\s{0,1};",
    "5_correct_answers": [
      "var1=;",
      "var17RMW5= ;",
      "var rb =;",
      "varvc=;",
      "var1Fr=;"
    ],
    "5_incorrect_answers": [
      "vOr1=?",
      "va317RMW5= ;",
      "Jar?rb >;",
      "varvcM;",
      "va*1F:=x"
    ]
  },
  {
    "regex": "^#x",
    "refactor_regex": "^(#x)",
    "5_correct_answers": [
      "#x",
      "#x",
      "#x",
      "#x",
      "#x"
    ],
    "5_incorrect_answers": [
      "#U",
      "#c",
      "5x",
      "#n",
      "ax"
    ]
  },
  {
    "regex": "Cannot find module 'gulp-oops'",
    "refactor_regex": "(Cannot find module 'gulp-oops')",
    "5_correct_answers": [
      "Cannot find module 'gulp-oops'",
      "Cannot find module 'gulp-oops'",
      "Cannot find module 'gulp-oops'",
      "Cannot find module 'gulp-oops'",
      "Cannot find module 'gulp-oops'"
    ],
    "5_incorrect_answers": [
      "Cannot find monule '&ulp-oops'",
      "Cannot find modu<e 'g|lp-aops'",
      "Cannot find module_'gulv-oops'",
      "Cannot find modulew'gu%p-opps'",
      "Can1ot find module 'gulp-oops'"
    ]
  },
  {
    "regex": "is not a buffer",
    "refactor_regex": "(is not a buffer)",
    "5_correct_answers": [
      "is not a buffer",
      "is not a buffer",
      "is not a buffer",
      "is not a buffer",
      "is not a buffer"
    ],
    "5_incorrect_answers": [
      "is not : buffer",
      "is noy a buffer",
      "im not a buffeV",
      "is no9 a buffer",
      "is +ot a buffe#"
    ]
  },
  {
    "regex": "_stmt$",
    "refactor_regex": "(_stmt)$",
    "5_correct_answers": [
      "_stmt",
      "_stmt",
      "_stmt",
      "_stmt",
      "_stmt"
    ],
    "5_incorrect_answers": [
      "_@tm=",
      "rs$m:",
      "_#tmt",
      "BStmt",
      "Hsgm6"
    ]
  },
  {
    "regex": "^(\\d+)(m|mb|g|gb|t|tb)?$",
    "refactor_regex": "^[0-9]{1,}(m|mb|g|gb|t|tb|)$",
    "5_correct_answers": [
      "5426511103655",
      "68624596",
      "415403946534480693606371",
      "4692241094067195087mb",
      "17059703133425g"
    ],
    "5_incorrect_answers": [
      "54265U1103655",
      "(862%596",
      "N1540394C534!80693606371",
      "4692241094V67195087mb",
      "1.0d9703133425g"
    ]
  },
  {
    "regex": "\\.(eot|otf|ttf|woff|woff2)(\\?.*)?$",
    "refactor_regex": "(\\.)(eot|otf|ttf|woff|woff2)(\\?.*)?$",
    "5_correct_answers": [
      ".eot?Yy]]'.",
      ".ttf",
      ".ttf",
      ".woff",
      ".woff2"
    ],
    "5_incorrect_answers": [
      ".eotmYy]]'/",
      ".t1f",
      ".taf",
      ".-off",
      ".w+ff2"
    ]
  },
  {
    "regex": "^(?:(\\s*)=(\\s*))",
    "refactor_regex": "^((\\s+)?)=((\\s+)?)",
    "5_correct_answers": [
      "=",
      "=",
      "=",
      "=",
      "="
    ],
    "5_incorrect_answers": [
      "Z",
      "\"",
      "h",
      "U",
      "q"
    ]
  },
  {
    "regex": "/\\*DEVEL[\\d\\D]*?DEVEL\\*/",
    "refactor_regex": "/[*]DEVEL[0-9\\D]*?DEVEL[*]/",
    "5_correct_answers": [
      "/*DEVEL9278DEVEL*/",
      "/*DEVEL484554DEVEL*/",
      "/*DEVEL208870561950031294DEVEL*/",
      "/*DEVEL14133637479461157DEVEL*/",
      "/*DEVEL4DEVEL*/"
    ],
    "5_incorrect_answers": [
      "/*DEVEL9278D\\VEd*/",
      "/HD0VEL484554DEVEL*/",
      "/*DEVEL208870561950031294DEV1v*v",
      "/*DEVEL14133637479461157DEVEL*;",
      "/*DEVEL4DEVJ|*P"
    ]
  },
  {
    "regex": "^!face ?(.*)$",
    "refactor_regex": "^!face ?.*$",
    "5_correct_answers": [
      "!facem",
      "!face00;mR6=zC",
      "!face=Wgn-fpn%z",
      "!face:`]",
      "!face@,k)A5w"
    ],
    "5_incorrect_answers": [
      "!Racem",
      "!fade00;mR6*zC",
      "!facr=Wgn-fln%D",
      "!f_4e:`]",
      "!f\\ce@1k)A5w"
    ]
  },
  {
    "regex": "pug_sentinel:unknown",
    "refactor_regex": "(pug_sentinel:unknown)",
    "5_correct_answers": [
      "pug_sentinel:unknown",
      "pug_sentinel:unknown",
      "pug_sentinel:unknown",
      "pug_sentinel:unknown",
      "pug_sentinel:unknown"
    ],
    "5_incorrect_answers": [
      "pugBsentinel:Inknown",
      "pug_sentineU:unknown",
      "pug_s$ntHnel:unknown",
      "pug_sentingl:u'known",
      "pug_sentinel:cnknown"
    ]
  },
  {
    "regex": "\\bsexy",
    "refactor_regex": "\\b(sexy)",
    "5_correct_answers": [
      "sexy",
      "sexy",
      "sexy",
      "sexy",
      "sexy"
    ],
    "5_incorrect_answers": [
      "Kexd",
      "sexD",
      "Te}y",
      "s<8f",
      "s<xG"
    ]
  },
  {
    "regex": "Parameter end must be a number",
    "refactor_regex": "(Parameter end must be a number)",
    "5_correct_answers": [
      "Parameter end must be a number",
      "Parameter end must be a number",
      "Parameter end must be a number",
      "Parameter end must be a number",
      "Parameter end must be a number"
    ],
    "5_incorrect_answers": [
      "Parameter end mustXbe a number",
      "Prrameter end must be a nu'bPr",
      "Parameterkend must be a number",
      "xarameter %nd must be a n,mber",
      "Parameter [nd mxst be a numb|r"
    ]
  },
  {
    "regex": "%timestamp_execution",
    "refactor_regex": "(%timestamp_execution)",
    "5_correct_answers": [
      "%timestamp_execution",
      "%timestamp_execution",
      "%timestamp_execution",
      "%timestamp_execution",
      "%timestamp_execution"
    ],
    "5_incorrect_answers": [
      "%timestamp_ex,cution",
      "%t]mestamp_RxecuNion",
      "%timestampY)xecution",
      "%timzltamp_executiyn",
      "~timestamp_execution"
    ]
  },
  {
    "regex": "(\\?|&)[^=]+=",
    "refactor_regex": "[&\\?][^=]{1,}=",
    "5_correct_answers": [
      "&i'Ch kx=",
      "&O80i=",
      "&q=",
      "&26]T#tnT8)x\"MBNn2UfIx=",
      "&A="
    ],
    "5_incorrect_answers": [
      "&i'Ch k#{",
      "3O80iP",
      "Dq=",
      "c^6]T)tnT8)x\"MBNn2UfIx=",
      "BA="
    ]
  },
  {
    "regex": "\"+(.*?)\"+",
    "refactor_regex": "\"+.*?\"+",
    "5_correct_answers": [
      "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"",
      "\"\"\"\"\"\"\"\"\"\"\"\"kg6$$Tb -#u<\"\"\"",
      "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"UNA5HT\"\"\"",
      "\"\"\"\"\"\"\"ftz&2w8jisPHr!9LQz\"\"\"\"\"\"\"\"\"",
      "\"\"\"\"\"\"\"\"\"\"\"\"\"QnEhf\"\"\"\"\"\"\"\""
    ],
    "5_incorrect_answers": [
      "/\"\"\"\"\"\"\"\"\"\"\"6\"\"\"\"\"\"\"\"\"\"\"\"",
      "=1\"\"\"\"\"\"\"\"\"\"kg6$$Tb -#u<\"\"\"",
      "-\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"UNA5HT\"\"\"",
      "r|\"\"\"\"\"ftz&2w8jisPHr!9LQz\"\"\"\"\"\"\"\"\"",
      "0\"\"\"\"\"\"\"z\"\"\"\"QnEhf\"\"\"\"\"\"\"\""
    ]
  },
  {
    "regex": "<P>(.+?)</P>",
    "refactor_regex": "<P>.{1,}?</P>",
    "5_correct_answers": [
      "<P>epo3t7%=_nxl@? G\\'S]8k</P>",
      "<P>SQB</P>",
      "<P>EWY*Qow-W</P>",
      "<P>?+3/*rC>t%\"gGFxk<]</P>",
      "<P>10</P>"
    ],
    "5_incorrect_answers": [
      "<P>epo3t7%=Mnxl@? '\\'S]8k<-P>",
      "<:>SQBk/PQ",
      "<P>EWY*Qow-W<[P$",
      "<P>?+v/*rC>tX\"gGFxk<]'/P>",
      "WP>10</i>"
    ]
  },
  {
    "regex": "^Function ([^(]+)\\(",
    "refactor_regex": "^Function ([^(][^(]*)\\(",
    "5_correct_answers": [
      "Function c>(",
      "Function mYWdl6j_\"lG'<qM-c3(",
      "Function .2_ck=q(",
      "Function kA;sF]B m4$DJtS:)(",
      "Function qu`8Hyj.G7[VpnEfgnxS0("
    ],
    "5_incorrect_answers": [
      "Funcdioh c>(",
      "Function8mY|dl6j_\"lG'<qM-c3(",
      "Funct!onC.2_ck=q(",
      "-unction kA;sF]$ m4$DJtS:)(",
      "FunctionEqu`8Hyj.G7[VpnOfgnxS0("
    ]
  },
  {
    "regex": "^md2",
    "refactor_regex": "^(md2)",
    "5_correct_answers": [
      "md2",
      "md2",
      "md2",
      "md2",
      "md2"
    ],
    "5_incorrect_answers": [
      "ed2",
      "m~2",
      "msr",
      "mkg",
      "$!2"
    ]
  },
  {
    "regex": "^hi.$",
    "refactor_regex": "^(hi).$",
    "5_correct_answers": [
      "hi:",
      "hiP",
      "hi'",
      "hi;",
      "hig"
    ],
    "5_incorrect_answers": [
      "[s:",
      "_iP",
      "k8'",
      "Di;",
      "h~g"
    ]
  },
  {
    "regex": "Finished Rendering (.*).$",
    "refactor_regex": "(Finished Rendering ).*.$",
    "5_correct_answers": [
      "Finished Rendering 2>P",
      "Finished Rendering +l=r0",
      "Finished Rendering V3",
      "Finished Rendering Ed@4)",
      "Finished Rendering OKJUR&wIXI"
    ],
    "5_incorrect_answers": [
      "$Anished R\"ndering 2>P",
      "Finished RenIergng +l=r0",
      "FiIished Rendzring VA",
      "Fieis]ey Rendering Ed@4)",
      "Finishel Rend=ring OKJURjwIXI"
    ]
  },
  {
    "regex": "<p>\\s*(.*?)\\s*</p>",
    "refactor_regex": "(<p>)\\s*.*?\\s*(</p>)",
    "5_correct_answers": [
      "<p>A`R+@\"C%rA(A8h4:MNdW</p>",
      "<p>a#.YUa&></p>",
      "<p>  `-f*H+</p>",
      "<p>,bfJ-.,</p>",
      "<p>:8vk<M'\"H;r?#wqo=^2[5e  </p>"
    ],
    "5_incorrect_answers": [
      "<p>7`R+@\"C%rA(A8h4:MNdW</pH",
      "<p>v#.EUa&></p{",
      "<p>  `-fRH+</pP",
      "<K>,/fJ-.,</p>",
      "<p>:8vk<M'\"H;r?#wqo=^2[5e  </p/"
    ]
  },
  {
    "regex": "\"([^\"\\\\]|\\\\.)*\"",
    "refactor_regex": "\"([^\"\\\\]|\\\\.){0,}\"",
    "5_correct_answers": [
      "\"\\O\\jJ\\HW8f\\\\\\?\\J S6$^,\"",
      "\"\\\"j\\R\\4L\\3Q\\I67WVh\"",
      "\"C0\"",
      "\"qd\\l$\\iS\\yc\\X\\f)\\Z\\Mj\\e\\:\"",
      "\"JDb\\'Gmn8\\'\\AM*P\\?\""
    ],
    "5_incorrect_answers": [
      "\"\\O\\jJ\\HW8f\\\\\\?\\J S6$^,)",
      "\"\\\"j\\R\\4L\\3Q\\I67tVhJ",
      "ny0\"",
      "Aqd\\lS\\iS\\ycQX\\f)\\Z\\Mj\\e\\:\"",
      "t4Dj\\'Gmn8\\'\\AM*P\\?\""
    ]
  },
  {
    "regex": "LastInstallerSuccessLaunchCmdLine",
    "refactor_regex": "(LastInstallerSuccessLaunchCmdLine)",
    "5_correct_answers": [
      "LastInstallerSuccessLaunchCmdLine",
      "LastInstallerSuccessLaunchCmdLine",
      "LastInstallerSuccessLaunchCmdLine",
      "LastInstallerSuccessLaunchCmdLine",
      "LastInstallerSuccessLaunchCmdLine"
    ],
    "5_incorrect_answers": [
      "LastInstallerSucces6LaunchCPdLine",
      "LastInstalleUSuc*essLaunchCmdLine",
      "LCstInstallerSuccessLaunchC/dLine",
      "LastInstallerSuccessLaunchCmdL0ne",
      "Last.nstallerSuccessLaunchCmdLine"
    ]
  },
  {
    "regex": "(;)(\\s*)(@regEx)",
    "refactor_regex": ";\\s*@regEx",
    "5_correct_answers": [
      ";@regEx",
      ";@regEx",
      ";@regEx",
      ";@regEx",
      ";@regEx"
    ],
    "5_incorrect_answers": [
      ";@r/gEx",
      ";@reg#x",
      ";@qe}Ex",
      ";@r:gYx",
      "/@(egEx"
    ]
  },
  {
    "regex": "y:([0-9]+)",
    "refactor_regex": "(y:)([0-9]{1,})",
    "5_correct_answers": [
      "y:258374913373",
      "y:242901673992797513649453",
      "y:26272945614238835560446",
      "y:7825210299240",
      "y:0243825229293871"
    ],
    "5_incorrect_answers": [
      "yB258374913373",
      "y:v42901$71992797513649453",
      "yn26272945614238835560d;6",
      "y#7825210299240",
      "y20243825229293871"
    ]
  },
  {
    "regex": "[^\\w\\-.]",
    "refactor_regex": "[^a-zA-Z\\d_\\-.]",
    "5_correct_answers": [
      "[",
      "*",
      "?",
      ":",
      "@"
    ],
    "5_incorrect_answers": [
      "z",
      "L",
      "M",
      "n",
      "U"
    ]
  },
  {
    "regex": "\\.d\\.ts$",
    "refactor_regex": "[.]d[.]ts$",
    "5_correct_answers": [
      ".d.ts",
      ".d.ts",
      ".d.ts",
      ".d.ts",
      ".d.ts"
    ],
    "5_incorrect_answers": [
      ".).Js",
      "WdIts",
      ".d{^s",
      ".d.t/",
      "4d.ts"
    ]
  },
  {
    "regex": "^(?:\\\\sinh)",
    "refactor_regex": "^\\\\(sinh)",
    "5_correct_answers": [
      "\\sinh",
      "\\sinh",
      "\\sinh",
      "\\sinh",
      "\\sinh"
    ],
    "5_incorrect_answers": [
      "\\sNnh",
      "\\si:]",
      "\\|i>h",
      "\\yin-",
      "nEinh"
    ]
  },
  {
    "regex": "^:(\\w+) *",
    "refactor_regex": "^:([a-zA-Z0-9_]{1,}) *",
    "5_correct_answers": [
      ":7            ",
      ":Oq          ",
      ":p                   ",
      ":qvI           ",
      ":fy      "
    ],
    "5_incorrect_answers": [
      "~l            ",
      "hOq      ! g ",
      ":} 1                 ",
      "+qvI    5      ",
      "Zfb    Q "
    ]
  },
  {
    "regex": "\\b[0-9a-f]{1,4}\\.json\\.gz\\b",
    "refactor_regex": "\\b(0|1|2|3|4|5|6|7|8|9|a|b|c|d|e|f){1,4}\\.json\\.gz\\b",
    "5_correct_answers": [
      "d.json.gz",
      "ba0f.json.gz",
      "89.json.gz",
      "681.json.gz",
      "9f.json.gz"
    ],
    "5_incorrect_answers": [
      "d.jcoJPgz",
      "boNf.jsonSgz",
      "89Cjson.gz",
      "38M.jsoc.gz",
      "9f.jXon.gk"
    ]
  },
  {
    "regex": "^/users/[\\w-]+$",
    "refactor_regex": "^/users/((a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|0|1|2|3|4|5|6|7|8|9|_)|-)+$",
    "5_correct_answers": [
      "/users/eMSO",
      "/users/bi",
      "/users/z",
      "/users/c",
      "/users/k"
    ],
    "5_incorrect_answers": [
      "/users/>MSO",
      "Quse$sdbi",
      "/usDm\"/z",
      "fuser##c",
      "/VserK/k"
    ]
  },
  {
    "regex": "(.+)/.+$",
    "refactor_regex": ".+/.+$",
    "5_correct_answers": [
      "2R(F&Q/y%5_e(B7SU7Ba",
      "Bg)8FK6PiW@F/H?[vWwR=??P`",
      "!Lsf\"WVBhA)FY/0x`nG!dW8+",
      ",F67$]N/3v%Z2*5P=",
      "5nfE +r't`r*'</fz&\\Tqy;0Fc0x\\"
    ],
    "5_incorrect_answers": [
      "2R(F&Q&y%5_e(-7SU7Ba",
      "Bg)8FK6Pi9@F{H?[vWwR&??P`",
      "!Lsf\"WVBh{)FYz+x`nG!dW8+",
      ",F67$]N33v%Z2*5P=",
      "5nfE +r't`r*'<?fz|\\Tqy;9Fc0x\\"
    ]
  },
  {
    "regex": "picker",
    "refactor_regex": "(picker)",
    "5_correct_answers": [
      "picker",
      "picker",
      "picker",
      "picker",
      "picker"
    ],
    "5_incorrect_answers": [
      "xycher",
      "pick1i",
      ";icker",
      "picke!",
      "piWker"
    ]
  },
  {
    "regex": "{% \\s* url \\s+",
    "refactor_regex": "{% (\\s{1,})? url \\s{1,}",
    "5_correct_answers": [
      "{%  url  ",
      "{%  url  ",
      "{%   url  ",
      "{%  url  ",
      "{%   url  "
    ],
    "5_incorrect_answers": [
      "v%  Zrl  ",
      "{% Xurl  ",
      "{%  9ur3X ",
      "{)  uBl  ",
      "{%   urlv "
    ]
  },
  {
    "regex": "[\\s\\t\\r\\n\\f]+",
    "refactor_regex": "[ \\t\\n\\r\\f\\v\\t\\r\\n\\f]{1,}",
    "5_correct_answers": [
      "  ",
      " ",
      " ",
      " ",
      " "
    ],
    "5_incorrect_answers": [
      "U ",
      "6",
      "u",
      "O",
      "0"
    ]
  },
  {
    "regex": "__ATTRIBUTES__",
    "refactor_regex": "(__ATTRIBUTES__)",
    "5_correct_answers": [
      "__ATTRIBUTES__",
      "__ATTRIBUTES__",
      "__ATTRIBUTES__",
      "__ATTRIBUTES__",
      "__ATTRIBUTES__"
    ],
    "5_incorrect_answers": [
      "__ATTRIBUT/S__",
      "__ATTRIBUTESP_",
      "S_ATT1IBUTES__",
      "_#AyTRIBUTES__",
      "__A8TRIBU9sS__"
    ]
  },
  {
    "regex": "^FINISH READING (\\w+)$",
    "refactor_regex": "^FINISH READING \\w{1,}$",
    "5_correct_answers": [
      "FINISH READING 6q",
      "FINISH READING p",
      "FINISH READING sZ",
      "FINISH READING l",
      "FINISH READING u"
    ],
    "5_incorrect_answers": [
      "FINISH READIeG 6^",
      "FINISH READ2NG p",
      "FINIRH REAtING sZ",
      "FINISH REAbING l",
      "FINISH zEADINj A"
    ]
  },
  {
    "regex": "DB_DATABASE=foobar",
    "refactor_regex": "(DB_DATABASE=foobar)",
    "5_correct_answers": [
      "DB_DATABASE=foobar",
      "DB_DATABASE=foobar",
      "DB_DATABASE=foobar",
      "DB_DATABASE=foobar",
      "DB_DATABASE=foobar"
    ],
    "5_incorrect_answers": [
      "DB_DATABA=E=foobar",
      "DB_DATABASE=foobIr",
      "DB_DQ`ABASE=foobar",
      "DB_DATABASE=f}obar",
      "DB_DATABASG=foobar"
    ]
  },
  {
    "regex": "alcool",
    "refactor_regex": "(alcool)",
    "5_correct_answers": [
      "alcool",
      "alcool",
      "alcool",
      "alcool",
      "alcool"
    ],
    "5_incorrect_answers": [
      "alco>l",
      "/lco!l",
      "aJcool",
      "alcoo2",
      "Blcool"
    ]
  },
  {
    "regex": "\"xo && nyc ava\"",
    "refactor_regex": "(\"xo && nyc ava\")",
    "5_correct_answers": [
      "\"xo && nyc ava\"",
      "\"xo && nyc ava\"",
      "\"xo && nyc ava\"",
      "\"xo && nyc ava\"",
      "\"xo && nyc ava\""
    ],
    "5_incorrect_answers": [
      "\"xo && nyc avp\"",
      "\"xo &< [yc ava\"",
      "cxo && nyc aWa\"",
      "\"xo %& nyc ava\"",
      "\"xo && fyc avaF"
    ]
  },
  {
    "regex": "%3AB",
    "refactor_regex": "(%3AB)",
    "5_correct_answers": [
      "%3AB",
      "%3AB",
      "%3AB",
      "%3AB",
      "%3AB"
    ],
    "5_incorrect_answers": [
      "%3_'",
      "9#A_",
      "%3<B",
      "%`AB",
      "roAB"
    ]
  },
  {
    "regex": "duplicate key value",
    "refactor_regex": "(duplicate key value)",
    "5_correct_answers": [
      "duplicate key value",
      "duplicate key value",
      "duplicate key value",
      "duplicate key value",
      "duplicate key value"
    ],
    "5_incorrect_answers": [
      "duplic2te key valGh",
      "duplic6te key[value",
      "duplicate key vElub",
      "dupliN[;e key value",
      "1uplicate key Ca\"ue"
    ]
  },
  {
    "regex": "YahooCacheSystem",
    "refactor_regex": "(YahooCacheSystem)",
    "5_correct_answers": [
      "YahooCacheSystem",
      "YahooCacheSystem",
      "YahooCacheSystem",
      "YahooCacheSystem",
      "YahooCacheSystem"
    ],
    "5_incorrect_answers": [
      "Ya(ooCacheSystem",
      "Y&hDoCacheSyste{",
      "YahovCacIeSyste!",
      "YahooCacheSyRtem",
      "YahHo7acheSystem"
    ]
  },
  {
    "regex": "^[\\s|\\t]+",
    "refactor_regex": "^[\\s\\t\\|]+",
    "5_correct_answers": [
      "|",
      " ",
      "|",
      " ",
      "||"
    ],
    "5_incorrect_answers": [
      "<",
      "J",
      "*",
      "c",
      ">|"
    ]
  },
  {
    "regex": "database migrations",
    "refactor_regex": "(database migrations)",
    "5_correct_answers": [
      "database migrations",
      "database migrations",
      "database migrations",
      "database migrations",
      "database migrations"
    ],
    "5_incorrect_answers": [
      "database migrati'ns",
      "databas# ~igratio!s",
      "datDbase migrateons",
      "database migraNions",
      "database mig`ations"
    ]
  },
  {
    "regex": "&-",
    "refactor_regex": "(&-)",
    "5_correct_answers": [
      "&-",
      "&-",
      "&-",
      "&-",
      "&-"
    ],
    "5_incorrect_answers": [
      "&/",
      "&=",
      "Q-",
      "wC",
      "&s"
    ]
  },
  {
    "regex": "^test/name\\.\\w+$",
    "refactor_regex": "^test/name\\.[a-zA-Z0-9_]+$",
    "5_correct_answers": [
      "test/name.JrGUa",
      "test/name.R3",
      "test/name.0F",
      "test/name.mw",
      "test/name.z"
    ],
    "5_incorrect_answers": [
      "test/jame.Jg^Ua",
      "tEst/name.EK",
      "tJst/name.0:",
      "test/namenmw",
      "tentAname.z"
    ]
  },
  {
    "regex": "/electron$",
    "refactor_regex": "(/electron)$",
    "5_correct_answers": [
      "/electron",
      "/electron",
      "/electron",
      "/electron",
      "/electron"
    ],
    "5_incorrect_answers": [
      "/elfc_ron",
      "/ele:tr+n",
      "/el!ctron",
      "/elscXr6n",
      "Xelectron"
    ]
  },
  {
    "regex": ".+\\.(jpg|jpeg|gif|png)",
    "refactor_regex": ".{1,}([.])(jpg|jpeg|gif|png)",
    "5_correct_answers": [
      "e?z[McY3#?DbYg.png",
      "]9>hi6g.png",
      ">j'l%86 $N-=;.jpeg",
      "5r02<tM2Z7=!nQFP!LmqWKR0=.jpeg",
      "LDfQ.png"
    ],
    "5_incorrect_answers": [
      "e?z[McY3#?tbYg.p\\g",
      "]9>hi6g4pnI",
      ">jyl%86 $N-=].jpvg",
      "5r02<tM2Z7=!nQFP!LmqWKR0=.jpWg",
      "L%fQ1png"
    ]
  },
  {
    "regex": "^(-?\\d+\\.?\\d*)\\s*cm$",
    "refactor_regex": "^(-?\\d+[.]?\\d*)\\s*cm$",
    "5_correct_answers": [
      "-4.13084902942537 cm",
      "673724.162cm",
      "-415300384260740165267852807cm",
      "2664020737800249268014cm",
      "858801679476771105.67cm"
    ],
    "5_incorrect_answers": [
      "-4.qK084900942537 cm",
      "673724.>6ycm",
      "-4)5300384260740165267852807cm",
      "2664020737y00249268014cm",
      "85880i679476771105.67im"
    ]
  },
  {
    "regex": "^[_-]",
    "refactor_regex": "^(_|-)",
    "5_correct_answers": [
      "_",
      "_",
      "-",
      "-",
      "-"
    ],
    "5_incorrect_answers": [
      "\\",
      "l",
      "I",
      "H",
      "7"
    ]
  },
  {
    "regex": "\\{\\{SUBDIR\\}\\}",
    "refactor_regex": "\\{\\{(SUBDIR)\\}\\}",
    "5_correct_answers": [
      "{{SUBDIR}}",
      "{{SUBDIR}}",
      "{{SUBDIR}}",
      "{{SUBDIR}}",
      "{{SUBDIR}}"
    ],
    "5_incorrect_answers": [
      "{rSPBDIR}}",
      "{{SU;DIG}}",
      "{{SUBDI;}}",
      "{{SUBDpR}}",
      "{;SUBDIR}}"
    ]
  },
  {
    "regex": "label does not exist",
    "refactor_regex": "(label does not exist)",
    "5_correct_answers": [
      "label does not exist",
      "label does not exist",
      "label does not exist",
      "label does not exist",
      "label does not exist"
    ],
    "5_incorrect_answers": [
      "lSbel doe, not >xist",
      "label doesbnot exist",
      "label does not ex7st",
      "label dVes not Oxist",
      "label does nottexist"
    ]
  },
  {
    "regex": "<([A-z0-9-_]+)( [^>]+)?>",
    "refactor_regex": "<((A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|\\[|\\\\|\\]|\\^|_|`|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|\\d|-|_)+)( [^>]+)?>",
    "5_correct_answers": [
      "<joCGx5h`o\\MZPq_9URz3J #hQKl\\T1Q:>",
      "<g7Odo5H4QqGkanUIRs>",
      "<sgAG_WmQu Nf C/3'6=s>",
      "<3Kt3Lbh^X0kYK>",
      "<\\BjXmj_23outeB>"
    ],
    "5_incorrect_answers": [
      "<joCGx5h`o\\MZPq_9URz3J #hQKl\\T1Q:(",
      "Lg7Odo9H4QqGkan(IRs>",
      "<s?AG_WmQu Nf C/Oh6=s>",
      "<3zt8Lb}^X0kYK>",
      "*\\BjXmj_23outeB>"
    ]
  },
  {
    "regex": "^(?:https?|ftp|file)\\s*:\\s*//",
    "refactor_regex": "^(?:https?|ftp|file)([ \\t\\n\\r\\f\\v]+)?:([ \\t\\n\\r\\f\\v]+)?(//)",
    "5_correct_answers": [
      "https://",
      "file://",
      "ftp ://",
      "https ://",
      "ftp  ://"
    ],
    "5_incorrect_answers": [
      "Ptbps://",
      "dile9O/",
      "ftp : |",
      "httHV :/w",
      "ftpR ://"
    ]
  },
  {
    "regex": "(.*?):(\\s*)",
    "refactor_regex": ".*?:\\s*",
    "5_correct_answers": [
      "Nh;:",
      "Q24$Dl2K[[ Us\":",
      ";6!]Q!]y\">+c>M PK76h]:",
      "15 ;\",>h:",
      "h00[gk:I,&<U@vOg&OI*TF-&: "
    ],
    "5_incorrect_answers": [
      "Nh5G",
      "Q24$Dl2K#[HUs\"m",
      ";6!]Q!]y\"&+c>M PK76h]g",
      "15 ;\",>h\\",
      "h00[gk7I,&<U@vOg&OI^TF-&b "
    ]
  },
  {
    "regex": "^(\\'|\\\")(post|get)(\\'|\\\")$",
    "refactor_regex": "^(\\'post\\'|\\'post\\\"|\\'get\\'|\\'get\\\"|\\\"post\\'|\\\"post\\\"|\\\"get\\'|\\\"get\\\")$",
    "5_correct_answers": [
      "'post\"",
      "\"get'",
      "'post\"",
      "\"post\"",
      "'post\""
    ],
    "5_incorrect_answers": [
      "%post_",
      "\"zst'",
      "'2ost\"",
      "\"Sost\"",
      "'1ost\""
    ]
  },
  {
    "regex": "^test\\w*$",
    "refactor_regex": "^test(|(\\w+))$",
    "5_correct_answers": [
      "testb",
      "test",
      "testHkh4X",
      "testXY",
      "test"
    ],
    "5_incorrect_answers": [
      "te~tb",
      "}eSt",
      "tesaHmh4X",
      "textXY",
      "]est"
    ]
  },
  {
    "regex": "[^@]comment",
    "refactor_regex": "[^@](comment)",
    "5_correct_answers": [
      "fcomment",
      "Wcomment",
      ".comment",
      "rcomment",
      "Mcomment"
    ],
    "5_incorrect_answers": [
      "fcomme^t",
      "WcjLm=nt",
      ".comeent",
      "rnoOment",
      "McommenX"
    ]
  },
  {
    "regex": "export type[^=]*",
    "refactor_regex": "export type[^=]{0,}",
    "5_correct_answers": [
      "export type -\\Z*H",
      "export typeMgEiNq+6V2lVdOsXo?5",
      "export typee#wobGni]wc&iaW58 Gmj",
      "export type+fggQ#\\JsG,JoOSq@",
      "export type$)e.uKDkLda6"
    ],
    "5_incorrect_answers": [
      "export typ: -\\6*H",
      "export typ\"MgEiNq+6V2lVdOsXo?5",
      "export ty>ee#wobGni]wc&iaW58 Gmj",
      "expor- ty`e+fggQ#\\JsG,JoOSq@",
      "export #ype$)e.uKDkLda6"
    ]
  },
  {
    "regex": "/|\\+|=",
    "refactor_regex": "[/=\\+]",
    "5_correct_answers": [
      "+",
      "/",
      "+",
      "=",
      "/"
    ],
    "5_incorrect_answers": [
      "0",
      "_",
      ".",
      "u",
      "T"
    ]
  },
  {
    "regex": "^(?:such\\b)",
    "refactor_regex": "^such\\b",
    "5_correct_answers": [
      "such",
      "such",
      "such",
      "such",
      "such"
    ],
    "5_incorrect_answers": [
      ";uKS",
      "tuch",
      "Huc$",
      "Such",
      "s:ch"
    ]
  },
  {
    "regex": "-[a-z]{3}$",
    "refactor_regex": "-[a-z][a-z][a-z]$",
    "5_correct_answers": [
      "-nhv",
      "-lil",
      "-hxw",
      "-yxk",
      "-toc"
    ],
    "5_incorrect_answers": [
      "-nh]",
      "-l~;",
      "-hx[",
      "-]_7",
      "nloc"
    ]
  },
  {
    "regex": "\\b-?\\d+(?:\\.\\d+)?\\b",
    "refactor_regex": "\\b-{0,1}[0-9][0-9]{0,}(\\.[0-9][0-9]{0,}){0,1}\\b",
    "5_correct_answers": [
      "6838192",
      "782798",
      "699671147060933094",
      "49004",
      "736"
    ],
    "5_incorrect_answers": [
      "6nj819D",
      "n8279P",
      "p996m1147060933094",
      "49F0-",
      "lC6"
    ]
  },
  {
    "regex": "FOLD",
    "refactor_regex": "(FOLD)",
    "5_correct_answers": [
      "FOLD",
      "FOLD",
      "FOLD",
      "FOLD",
      "FOLD"
    ],
    "5_incorrect_answers": [
      "FOLZ",
      ":OkD",
      "YOLD",
      "FOa*",
      "Fk8C"
    ]
  },
  {
    "regex": "over Session window capacity",
    "refactor_regex": "(over Session window capacity)",
    "5_correct_answers": [
      "over Session window capacity",
      "over Session window capacity",
      "over Session window capacity",
      "over Session window capacity",
      "over Session window capacity"
    ],
    "5_incorrect_answers": [
      "over-Session window capacity",
      "over ;ession win6owKcapacity",
      "over SesXion  indow c1pacity",
      "over Session window ca?acity",
      "o9er SessGoH window capacity"
    ]
  },
  {
    "regex": "\\$symbol",
    "refactor_regex": "\\$(symbol)",
    "5_correct_answers": [
      "$symbol",
      "$symbol",
      "$symbol",
      "$symbol",
      "$symbol"
    ],
    "5_incorrect_answers": [
      "8|ymbol",
      "$symboL",
      "$I mbol",
      "Zsymbol",
      "$sn`bol"
    ]
  },
  {
    "regex": "\\._?[jt]s$",
    "refactor_regex": "[.]_{0,1}(j|t)s$",
    "5_correct_answers": [
      ".js",
      "._js",
      ".ts",
      ".js",
      ".js"
    ],
    "5_incorrect_answers": [
      ".j<",
      "._jW",
      ".t;",
      "\\jR",
      ".8s"
    ]
  },
  {
    "regex": "\\.js$|\\.doc$",
    "refactor_regex": "(\\.)js$|(\\.)doc$",
    "5_correct_answers": [
      ".js",
      ".js",
      ".doc",
      ".doc",
      ".doc"
    ],
    "5_incorrect_answers": [
      "=js",
      "~j(",
      ".?oD",
      ".do]",
      "ldo?"
    ]
  },
  {
    "regex": "%([a-fA-F0-9][a-fA-F0-9])",
    "refactor_regex": "%((a|b|c|d|e|f|A|B|C|D|E|F|0|1|2|3|4|5|6|7|8|9){2})",
    "5_correct_answers": [
      "%eA",
      "%04",
      "%72",
      "%1e",
      "%8E"
    ],
    "5_incorrect_answers": [
      "`-A",
      "K#4",
      "ed2",
      "mxe",
      "%LE"
    ]
  },
  {
    "regex": "\\.([\\w\\-]*)\\s*\\((.*)\\)\\s*\\{",
    "refactor_regex": "\\.([\\w\\-]*)(\\s+)?\\((.*)\\)(\\s+)?\\{",
    "5_correct_answers": [
      ".(){",
      ".( eYe2nJW^+Iq-\"6){",
      ". (){",
      ".G0E(H%K?g:pG-alUGpxjU'p){",
      ".3(i($YsKQLK) {"
    ],
    "5_incorrect_answers": [
      "v().",
      ".i eYe2nJW^+Iq&\"6){",
      ". (U\\",
      ",G0E(H%K?g:pG-alUGp'1U'p){",
      ".yK{($YsKQLK) {"
    ]
  },
  {
    "regex": "^[^\\{\\}]+(?:\\{[^\\{\\}]+\\})*$",
    "refactor_regex": "^[^\\{\\}][^\\{\\}]*((\\{[^\\{\\}][^\\{\\}]*\\})+)?$",
    "5_correct_answers": [
      "UUEc{25y3-pY\"T_vniH}",
      "AIa-+cVz.OL{t 1WefEik1Z!}{'MknjJ}",
      "e@';hfF",
      "?Q[>sJWiHPQ25TO5FzXB",
      "sK[4ZnZyW{j^}"
    ],
    "5_incorrect_answers": [
      "UbEcC25y3-pY\"T_vnim}",
      "AIa-+cVz.OL^t 1WefEik1Z!}{UMknjJ}",
      "e@'7ef{",
      "?Q{>sJWiHP`25sO5FzXB",
      "sK[4ZnZyW_j^}"
    ]
  },
  {
    "regex": "\"[^\"]*next\\.gif\"",
    "refactor_regex": "\"[^\"]*next(\\.)gif\"",
    "5_correct_answers": [
      "\"ynext.gif\"",
      "\"@m)pDp_mk,3_EO2Qlnext.gif\"",
      "\"TG0O&Ft=HY>)2.XyY[^Tnext.gif\"",
      "\"9XlW`2next.gif\"",
      "\"M!^$@pv!g@0@GBz3%n.#next.gif\""
    ],
    "5_incorrect_answers": [
      "9yneT+.gif\"",
      "\"@m)pDp_mk,3_EO2qlnext.gifs",
      "\"TG0O&Ft=HY>)2.XyY[^Tnext.giff",
      "49Xle`2next.gif\"",
      "\"M!^$@pv!g@0@GBz3tn.#n3xt.gif\""
    ]
  },
  {
    "regex": "/v([\\d.]+)/",
    "refactor_regex": "(/v)((0|1|2|3|4|5|6|7|8|9|[.]){1,})/",
    "5_correct_answers": [
      "/v.24289978225468012252/",
      "/v936.0433521575343903/",
      "/v798060790089668312.32/",
      "/v29628.51605397106./",
      "/v2475.5730712742665/"
    ],
    "5_incorrect_answers": [
      "/v.242899782=546801v252/",
      "/v936.0433521575343x03/",
      "/v7A806079^0Z9668312.32/",
      "/v29628.516053m7106./",
      "9@2475.5730712742665/"
    ]
  },
  {
    "regex": "^[-+]?nan$",
    "refactor_regex": "^(|[-+])nan$",
    "5_correct_answers": [
      "nan",
      "+nan",
      "-nan",
      "nan",
      "+nan"
    ],
    "5_incorrect_answers": [
      "nsn",
      "'nEn",
      "NnAn",
      "n8D",
      "+n[f"
    ]
  },
  {
    "regex": "\\||&|\\^",
    "refactor_regex": "[|&\\^]",
    "5_correct_answers": [
      "|",
      "^",
      "^",
      "&",
      "&"
    ],
    "5_incorrect_answers": [
      "$",
      "<",
      "f",
      "F",
      "!"
    ]
  },
  {
    "regex": "2014",
    "refactor_regex": "(2014)",
    "5_correct_answers": [
      "2014",
      "2014",
      "2014",
      "2014",
      "2014"
    ],
    "5_incorrect_answers": [
      "20U4",
      ":0B4",
      "2i14",
      "#014",
      "20mo"
    ]
  },
  {
    "regex": "\\\\\\.",
    "refactor_regex": "\\\\((\\.))",
    "5_correct_answers": [
      "\\.",
      "\\.",
      "\\.",
      "\\.",
      "\\."
    ],
    "5_incorrect_answers": [
      "\\a",
      "M.",
      "&.",
      "M.",
      "\\{"
    ]
  },
  {
    "regex": "^[-]?[0-9]*[\\.]?[0-9]+$",
    "refactor_regex": "^((-)|)(0|1|2|3|4|5|6|7|8|9){0,}(([.])|)(0|1|2|3|4|5|6|7|8|9)(0|1|2|3|4|5|6|7|8|9){0,}$",
    "5_correct_answers": [
      "-5352708.243",
      "4667581521478116352249613",
      "-888769110693933891693352",
      "-094250803188944288124444478094",
      "27331445723337338081254"
    ],
    "5_incorrect_answers": [
      "-73527f8.243",
      "4r67581521478116352249613",
      "-888769e10693933891693352",
      "-0942508031889+4288124444478094",
      "273314457233363380f1254"
    ]
  },
  {
    "regex": "\\[[-9]+\\]",
    "refactor_regex": "\\[[\\-9][\\-9]*\\]",
    "5_correct_answers": [
      "[----9--9-99-]",
      "[----99-99---9------999-9-]",
      "[-99---9]",
      "[-99-9-9-999]",
      "[9-]"
    ],
    "5_incorrect_answers": [
      "[--&59-M9-99-]",
      "[----9989T-k-9------999-9-]",
      "[-99---Z]",
      "F-99-9-9-999]",
      "[\"-2"
    ]
  },
  {
    "regex": "^(a|b|c)*$",
    "refactor_regex": "^[abc]{0,}$",
    "5_correct_answers": [
      "aabaacb",
      "bccc",
      "baabacbcbacbbccbb",
      "bbacaaacc",
      "bbaaccbbbaaa"
    ],
    "5_incorrect_answers": [
      "aabaaAb",
      "*Z<c",
      "baabacbcbacI{ccbb",
      "bba]ZSacc",
      "Ibaac4bbbaaa"
    ]
  },
  {
    "regex": "^([^-]+)-(.*)",
    "refactor_regex": "^([^-]{1,})-(.*)",
    "5_correct_answers": [
      "+%L<& s?t(lHBiE-#",
      "/kprrB*]:ct-=",
      "uRg62[h-=7.1L16pLc#M@Sc\\3DO",
      "BV-#Nh(W_^_gfO",
      "8)t7R8R\\Xh(N%55ADN7-a3 6)FFkra"
    ],
    "5_incorrect_answers": [
      "+%L<& s?t5lHBiE3#",
      "/kprrB*]6clq=",
      "uSg62thz=7.1L16pLc#M@Sc\\3DO",
      "BVY#Nh W_^_gfO",
      "NOMATCH123"
    ]
  },
  {
    "regex": "^git version (\\d+\\.\\d+\\.\\d+).*$",
    "refactor_regex": "^(git version )([0-9][0-9]*\\.[0-9][0-9]*\\.[0-9][0-9]*).*$",
    "5_correct_answers": [
      "git version 66745.7597.86117348w",
      "git version 547.078.5002dszLIcMQ1s",
      "git version 72.20.0T",
      "git version 23.5675528.3583105&",
      "git version 20414000.4508.7"
    ],
    "5_incorrect_answers": [
      "git version 6674h.7597(86117348w",
      "git v-rsion 547.078.50022szLIcM41s",
      "git versJonf72.20!0T",
      "git tersi=n 23.5675528.3583105&",
      "git versioB 20414000.450s.@"
    ]
  },
  {
    "regex": "(?:^|\\s)GPL\\s",
    "refactor_regex": "(?:^|[ \\t\\n\\r\\f\\v])(GPL)[ \\t\\n\\r\\f\\v]",
    "5_correct_answers": [
      "GPL ",
      "GPL ",
      "GPL ",
      "GPL ",
      "GPL "
    ],
    "5_incorrect_answers": [
      "^Pb ",
      "cVL ",
      "GP\\u",
      "dPh ",
      "GPLY"
    ]
  },
  {
    "regex": "\\s*xmlns([=:])",
    "refactor_regex": "( |\\t|\\n|\\r|\\f|\\v)*xmlns(=|:)",
    "5_correct_answers": [
      "xmlns:",
      "xmlns=",
      "xmlns=",
      "xmlns:",
      "xmlns="
    ],
    "5_incorrect_answers": [
      "xm#ns:",
      "xmln?=",
      "xmP9sC",
      "xmlW9:",
      "xnlns="
    ]
  },
  {
    "regex": "([0-9]+)%",
    "refactor_regex": "(\\d+)%",
    "5_correct_answers": [
      "86182708715146734%",
      "354466088028%",
      "5353152358698678433230405%",
      "662022052471614261014%",
      "339083211763%"
    ],
    "5_incorrect_answers": [
      "86182708715156!34%",
      "A54466088028%",
      "535315235869867843323k405%",
      "662022052471614m61014%",
      "3390x3211A`3%"
    ]
  },
  {
    "regex": "Argument must be an object",
    "refactor_regex": "(Argument must be an object)",
    "5_correct_answers": [
      "Argument must be an object",
      "Argument must be an object",
      "Argument must be an object",
      "Argument must be an object",
      "Argument must be an object"
    ],
    "5_incorrect_answers": [
      "Argument=must be%an object",
      "Argumeny must be an object",
      "Argument eu^t be an object",
      "Argument must be a= object",
      "Argument must be an obje-t"
    ]
  },
  {
    "regex": "^\\++",
    "refactor_regex": "^\\+{1,}",
    "5_correct_answers": [
      "++++++++++++++",
      "++++++++++++++++++++",
      "++++++++++",
      "++++++++++",
      "+++++++++++++++++++++"
    ],
    "5_incorrect_answers": [
      "~4++++++++++++",
      "5+++++++++++++++++F+",
      "A+++++++++",
      " +L+++++`+",
      "c+++++++++++P+++e++++"
    ]
  },
  {
    "regex": "_adajs.view\\)\\(\\{[\\d\\D]*?\\)",
    "refactor_regex": "_adajs.view\\)\\(\\{[0-9\\D]*?\\)",
    "5_correct_answers": [
      "_adajs^view)({12473669709)",
      "_adajs?view)({0844933)",
      "_adajs\"view)({6721)",
      "_adajsuview)({597455282909)",
      "_adajs_view)({7190038701025302596)"
    ],
    "5_incorrect_answers": [
      "_admjs^view)(=1247366970N)",
      "_adaqs?view)({0844933)",
      "_adajs\"#iew)(y6721)",
      "_adajYuview)({597$5528290-)",
      "_adajs_view)(571900387<102530259x)"
    ]
  },
  {
    "regex": "^Wednesday",
    "refactor_regex": "^(Wednesday)",
    "5_correct_answers": [
      "Wednesday",
      "Wednesday",
      "Wednesday",
      "Wednesday",
      "Wednesday"
    ],
    "5_incorrect_answers": [
      "ge2n'sday",
      "Wtdnesday",
      "WedneqdUy",
      "WediQsday",
      "Wednnsdap"
    ]
  },
  {
    "regex": "^.*export.*\\{.*\\}.*from.*;",
    "refactor_regex": "^.*(export).*\\{.*\\}.*(from).*;",
    "5_correct_answers": [
      "U*WG< Vb]Ji\\_export8i$W[{}IMfrom;",
      "exportifM+-7e_#{n}ExYUiG3from4o;",
      "exportD9m*\"A${>?L }hCfromXd;",
      " ]P<On/export{Z};from4qhnC*RF&jKv;",
      "export{Y%SK]FOJO^q/}from\"qg;"
    ],
    "5_incorrect_answers": [
      "U,WG< Vb]Ji\\_export8i$W!{}IMfrBm;",
      "exportifMJ-7e_#[n}ExYUiG3from4&;",
      "expoatD9m*\"A${>?L }hCfromXd;",
      " ]P<On/:xpor+sZ};from4qhnC*RF&jKv;",
      "mxport{Y%SK]FOJO^qL}from\"q*;"
    ]
  },
  {
    "regex": "spec'$",
    "refactor_regex": "(spec')$",
    "5_correct_answers": [
      "spec'",
      "spec'",
      "spec'",
      "spec'",
      "spec'"
    ],
    "5_incorrect_answers": [
      "pUe$'",
      "scEc'",
      "spLc,",
      "(pkc'",
      "spcc'"
    ]
  },
  {
    "regex": "\\d+%",
    "refactor_regex": "[0-9][0-9]*%",
    "5_correct_answers": [
      "049796051253357%",
      "62712623%",
      "01008333435%",
      "834842609639530153840689%",
      "46708%"
    ],
    "5_incorrect_answers": [
      "049796051253)57%",
      "62-o2623%",
      "010w8333435%",
      "83}842609A39530153840689%",
      "e67081"
    ]
  },
  {
    "regex": "[a-zA-Z]{3}",
    "refactor_regex": "[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ]{3}",
    "5_correct_answers": [
      "Sda",
      "hzB",
      "hrR",
      "KcD",
      "XTD"
    ],
    "5_incorrect_answers": [
      "S>#",
      ";zB",
      "h1R",
      "Kc)",
      "tA~"
    ]
  },
  {
    "regex": "(\\b| )",
    "refactor_regex": "[b ]",
    "5_correct_answers": [
      " ",
      " ",
      " ",
      " ",
      " "
    ],
    "5_incorrect_answers": [
      ";",
      "!",
      "{",
      "*",
      "="
    ]
  },
  {
    "regex": "libpepflashplayer\\.so",
    "refactor_regex": "(libpepflashplayer)((\\.))(so)",
    "5_correct_answers": [
      "libpepflashplayer.so",
      "libpepflashplayer.so",
      "libpepflashplayer.so",
      "libpepflashplayer.so",
      "libpepflashplayer.so"
    ],
    "5_incorrect_answers": [
      "lMbpepfdashp#ayer.so",
      "libpepf0ashplaylr.so",
      "libpepflas0plaPer.so",
      "libpepflishplayer.so",
      "~ibpepflas~player.sg"
    ]
  },
  {
    "regex": "_utf.css",
    "refactor_regex": "(_utf).(css)",
    "5_correct_answers": [
      "_utf?css",
      "_utf3css",
      "_utf3css",
      "_utfWcss",
      "_utf7css"
    ],
    "5_incorrect_answers": [
      "_ut4?css",
      "_ftf3'ss",
      "_utP3csP",
      "_utfWc)s",
      "_utf7cs7"
    ]
  },
  {
    "regex": "^mar",
    "refactor_regex": "^(mar)",
    "5_correct_answers": [
      "mar",
      "mar",
      "mar",
      "mar",
      "mar"
    ],
    "5_incorrect_answers": [
      "&or",
      "?;r",
      "mVS",
      "mLr",
      "mRr"
    ]
  },
  {
    "regex": "^gopher://",
    "refactor_regex": "^(gopher://)",
    "5_correct_answers": [
      "gopher://",
      "gopher://",
      "gopher://",
      "gopher://",
      "gopher://"
    ],
    "5_incorrect_answers": [
      "gophc_:O/",
      "gopher:%/",
      "gopper?//",
      "g+phUr://",
      "gophSr://"
    ]
  },
  {
    "regex": "Missing test",
    "refactor_regex": "(Missing test)",
    "5_correct_answers": [
      "Missing test",
      "Missing test",
      "Missing test",
      "Missing test",
      "Missing test"
    ],
    "5_incorrect_answers": [
      "Miss*ng t sA",
      "MissFng_tes$",
      "Miss}ng test",
      "Mktsing tes8",
      "Mi#sing tes "
    ]
  },
  {
    "regex": "[,; .]",
    "refactor_regex": ",|;| |\\.",
    "5_correct_answers": [
      ";",
      ",",
      ".",
      ",",
      "."
    ],
    "5_incorrect_answers": [
      "w",
      "7",
      "Q",
      "Q",
      "1"
    ]
  },
  {
    "regex": "[!?:;\\.]([\\*`]+)?$",
    "refactor_regex": "[!:;\\.\\?]((\\*|`)+)?$",
    "5_correct_answers": [
      ".",
      "!",
      "?",
      "!``*`*`*````*`````*",
      "!*****``***``**``*``"
    ],
    "5_incorrect_answers": [
      "@",
      "v",
      "w",
      "!``*`#`*````*````7*",
      "!****k``***`2**``:``"
    ]
  },
  {
    "regex": "^ES\\d",
    "refactor_regex": "^(ES)(0|1|2|3|4|5|6|7|8|9)",
    "5_correct_answers": [
      "ES4",
      "ES8",
      "ES0",
      "ES1",
      "ES4"
    ],
    "5_incorrect_answers": [
      "lS>",
      "E15",
      "=S0",
      "EV1",
      "ESV"
    ]
  },
  {
    "regex": "\\s*BIOS Information",
    "refactor_regex": "(\\s+)?BIOS Information",
    "5_correct_answers": [
      "BIOS Information",
      "BIOS Information",
      "BIOS Information",
      " BIOS Information",
      " BIOS Information"
    ],
    "5_incorrect_answers": [
      "BIOS Inf,rmat.on",
      "B*O^ fnformation",
      "BIOS InformQtion",
      " BIOS I5f?rmation",
      " BIOS In|orma[io\\"
    ]
  },
  {
    "regex": "((?:^|\\n)[\\t ]*(?:[~-]|[&!]?=)).+",
    "refactor_regex": "((^|\\n)((\\t| ){1,})?((~|-)|(&|!){0,1}=)).+",
    "5_correct_answers": [
      "-n/Pf@=5Q]Ii+_z",
      " !=5DR8",
      "~S__YSCO^(I?H@O",
      "~bdunhm/CjX\"4&si&f",
      "-BG_^#8_K'q<ABGbCcGMU"
    ],
    "5_incorrect_answers": [
      "5n/Pf@=5Q]Ii+_z",
      "Puz5DR8",
      "?S__YSCO^kI?HRO",
      "6bdunhm/CjX\"4&Di&f",
      "@BG_^#T_K'q<ABGbCcGMU"
    ]
  },
  {
    "regex": "^.*(ements?)$",
    "refactor_regex": "^.*ements?$",
    "5_correct_answers": [
      "4CT8OpNZements",
      "7_@BG 7[qoZement",
      "CQDJ7Wrcm[Fe_*Y`b4ement",
      "DFD,@_[$s&h$l/5hwv.2ements",
      "'*Sl&I*/n)ements"
    ],
    "5_incorrect_answers": [
      "4CT8OpNZeJents",
      "7_@nG 7[qope ent",
      "CQDJ7Wrcm[FY_*Y`b4emeIt",
      "mFD,@_[$s&h$l/5hwv.Teme}ts",
      "'*Sl&I*/X)eman8s"
    ]
  },
  {
    "regex": "^alpha\\.?[0-9]*$",
    "refactor_regex": "^alpha[.]?[0-9]*$",
    "5_correct_answers": [
      "alpha61575",
      "alpha905438104746385207",
      "alpha80293539",
      "alpha.01523349132094111987502",
      "alpha.03957439736"
    ],
    "5_incorrect_answers": [
      "jlpha61575",
      "alphao05438104746385207",
      "alpha802935M9",
      "alp3a801523349132094111987502",
      "a6ppa.039574397z6"
    ]
  },
  {
    "regex": "(.*?)=\"?(.*?)\"?$",
    "refactor_regex": ".*?=(\")?.*?(\")?$",
    "5_correct_answers": [
      "<hD>z=\"ZMb4u<\"",
      ">PO9XIg1]lB^wfar20m=\"\\3,Qq1xiKd.",
      "^2_OHeFsB=tjj46J\"",
      "7l8O>=8fN6`/=\")+k)qvXl",
      "`/e0K%gevZ@tYxLmM?9<CCQ=#x"
    ],
    "5_incorrect_answers": [
      "9hD>zJ\"ZMb4u<\"",
      ">PO9XIg1]lB^wfar20mY\"\\3,Qq1xiKd.",
      "^2_OHtFsB'tjj46J\"",
      "7l8O>M8fN6`/G\")+k)qvLl",
      "`/e0K%gevZ@VYxLmM?9<3CQ0#x"
    ]
  },
  {
    "regex": "\\?[^#]*",
    "refactor_regex": "[?][^#]{0,}",
    "5_correct_answers": [
      "?@4;\"wCXD5Qu[9Rv1-:\\Bf2q^",
      "?]sJc:Q;.d*",
      "?e",
      "?.N>Z,jCa(ZU>sg\"mwNd05SX",
      "?b;j>Um,%y;"
    ],
    "5_incorrect_answers": [
      "X@4,\"wCXD5Qu[9RB1-:\\Bf2q^",
      "n]sJc:Q; dq",
      "Fd",
      "x.N>Z,jCa(ZU>sg\"mwNd05SX",
      "mb;j>Umm%X;"
    ]
  },
  {
    "regex": "jpegtran -grayscale:",
    "refactor_regex": "(jpegtran -grayscale:)",
    "5_correct_answers": [
      "jpegtran -grayscale:",
      "jpegtran -grayscale:",
      "jpegtran -grayscale:",
      "jpegtran -grayscale:",
      "jpegtran -grayscale:"
    ],
    "5_incorrect_answers": [
      "jpegtQan -grQ7scale:",
      "jpegWran -grayscale:",
      "jpegtra| -grayscale:",
      "jpegtran -gryyscaQe:",
      "jpegtran -brayscalB:"
    ]
  },
  {
    "regex": "package\\.json</a>",
    "refactor_regex": "package[.]json</a>",
    "5_correct_answers": [
      "package.json</a>",
      "package.json</a>",
      "package.json</a>",
      "package.json</a>",
      "package.json</a>"
    ],
    "5_incorrect_answers": [
      "package.jsonq/a>",
      "packagefJson</a>",
      "package.j{on</a>",
      "package.E*ona/a>",
      "packzge.jsjn</a>"
    ]
  },
  {
    "regex": "\\bDAS\\b",
    "refactor_regex": "\\b(DAS)\\b",
    "5_correct_answers": [
      "DAS",
      "DAS",
      "DAS",
      "DAS",
      "DAS"
    ],
    "5_incorrect_answers": [
      "D;S",
      "_AS",
      "DkS",
      "iAu",
      "DA2"
    ]
  },
  {
    "regex": "(.*)\\..*",
    "refactor_regex": ".*(\\.).*",
    "5_correct_answers": [
      "B0TM7*,.9G'\"\"MWa(B:3zx\\X6M\\\",",
      "MIFH *HEHry..KJho!jW 21p!LuxL\";]",
      "bI;Mi0B$.)\\rQVG^Bs",
      "el\"A^+r=L#]3c(cf\"Cq\"e.?",
      "5@wc(R<'].C\"Z"
    ],
    "5_incorrect_answers": [
      "B0TM7*,s9G'\"\"MWa[B:3zx\\X6M\\\",",
      "NOMATCH123",
      "QI;Mi0B$<)\\rQVGFBs",
      "el\"A}+r=L#]3c(cf\"Cq\"es4",
      "5@wc(KL']\\C\"Z"
    ]
  },
  {
    "regex": "^(c\\+\\+|cxx|CC)$",
    "refactor_regex": "^(c(\\+)(\\+)|cxx|CC)$",
    "5_correct_answers": [
      "c++",
      "CC",
      "cxx",
      "cxx",
      "c++"
    ],
    "5_incorrect_answers": [
      "c+*",
      "C2",
      "c$M",
      "c>x",
      "[++"
    ]
  },
  {
    "regex": "\\s*::\\s*",
    "refactor_regex": "[ \\t\\n\\r\\f\\v]*(::)[ \\t\\n\\r\\f\\v]*",
    "5_correct_answers": [
      ":: ",
      "::",
      " ::",
      ":: ",
      " ::"
    ],
    "5_incorrect_answers": [
      "6: ",
      "':",
      "?:_",
      ":9j",
      "n:E"
    ]
  },
  {
    "regex": "^F\\d+",
    "refactor_regex": "^F\\d{1,}",
    "5_correct_answers": [
      "F5524",
      "F0880581166",
      "F06",
      "F80307299118088",
      "F51682570273470518708"
    ],
    "5_incorrect_answers": [
      "FCr27",
      "F@8805d1166",
      "8}^",
      "FB0307H99118088",
      "'5168+57W273470518708"
    ]
  },
  {
    "regex": "\"(.*?)\"",
    "refactor_regex": "\".*?\"",
    "5_correct_answers": [
      "\"TC\"",
      "\")utERp1(Bh-gXZBv8>ipWS$^\"",
      "\"ZF6Cr'0t\"",
      "\"32d>9D(-.NRBg9Bx6\"",
      "\"\\\""
    ],
    "5_incorrect_answers": [
      "\"TC0",
      "\")utERp1(Bh-gXZBv8>ipWS$^a",
      "gZF6Cr'0o\"",
      "@32d>9D(-.NHBg9Bx6\"",
      ";Xi"
    ]
  },
  {
    "regex": "too wide(.*)item(.*)",
    "refactor_regex": "(too wide)(.*)(item)(.*)",
    "5_correct_answers": [
      "too wideJ?<G+,I0QESitem059`Rd^Bp[6",
      "too wideBd]B,(?`item^'Q:]V*]tcO7F",
      "too wide.qKLVB:L^Aitem#so93>h:p)",
      "too wideD,pCGNeIJitemgP3Mo",
      "too wideOV,_Lrk5bxlKjik'Titem]w*!"
    ],
    "5_incorrect_answers": [
      "toZ wideJ?<G+,I0QESitem059`Rd^Bp[6",
      "too wideBd]B,(?`ite,^'Q:]V*]tcO7F",
      "too wide.q<LVB:L^Attem#so93>h:p)",
      "too jideD,pCGNeIJitemgP3Mo",
      "too wpdeOo,_Lrk5bxlKjik'Titem]{*!"
    ]
  },
  {
    "regex": "^(.)\\((.*?)\\)$",
    "refactor_regex": "^.\\(.*?\\)$",
    "5_correct_answers": [
      "B(HQ_?#zv)",
      ")(j-Y+7a6Ill-$J)",
      "n(Kr^Sy)",
      "v(cIg'9JJgoAAkLd;oJt32[^F)",
      "q(he& :N@t!!;xw+W;y/\\M)"
    ],
    "5_incorrect_answers": [
      "B(HQ_?#zvN",
      ")(j-Y+7a6Ill-$Jo",
      "!0Kr^Syq",
      "v(cIg'9JJg~AAkLd;oJt32[^FY",
      "qIhe& :NNt!!;xw+W;y/\\7)"
    ]
  },
  {
    "regex": "^[\\w]+\\.",
    "refactor_regex": "^[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_][abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_]{0,}\\.",
    "5_correct_answers": [
      "sJ.",
      "N.",
      "WqA.",
      "U.",
      "H2."
    ],
    "5_incorrect_answers": [
      "s/g",
      "Gg",
      "+]A.",
      "Ue",
      "I2&"
    ]
  },
  {
    "regex": "you specified knownhelpersOnly",
    "refactor_regex": "(you specified knownhelpersOnly)",
    "5_correct_answers": [
      "you specified knownhelpersOnly",
      "you specified knownhelpersOnly",
      "you specified knownhelpersOnly",
      "you specified knownhelpersOnly",
      "you specified knownhelpersOnly"
    ],
    "5_incorrect_answers": [
      "you sUecified knownhelpersOnly",
      "you specffied knownhelWersOnly",
      "_ou specified;knownhelpersOnly",
      "you spec#fied known)elporsOnly",
      "youcspecified kno}nhe8persOnly"
    ]
  },
  {
    "regex": "->set at$",
    "refactor_regex": "(->set at)$",
    "5_correct_answers": [
      "->set at",
      "->set at",
      "->set at",
      "->set at",
      "->set at"
    ],
    "5_incorrect_answers": [
      "->Ket at",
      "->sHt a[",
      "->s5. wt",
      "->Qet at",
      "-xMet at"
    ]
  },
  {
    "regex": "WindowsError",
    "refactor_regex": "(WindowsError)",
    "5_correct_answers": [
      "WindowsError",
      "WindowsError",
      "WindowsError",
      "WindowsError",
      "WindowsError"
    ],
    "5_incorrect_answers": [
      "Windows4rror",
      "WindowKEr|or",
      "WindowsEThor",
      ":indowsEr[or",
      "WinbowsErr0q"
    ]
  },
  {
    "regex": "[^\\(\\)\"\\s]+",
    "refactor_regex": "[^\\(\\)\" \\t\\n\\r\\f\\v][^\\(\\)\" \\t\\n\\r\\f\\v]*",
    "5_correct_answers": [
      "MsKE",
      "L`F%g3jP^r",
      "eo",
      "MLc<KtN5xrx[&z;Kv6c#g!>3",
      "xc4S/#O+J?:B&DHK"
    ],
    "5_incorrect_answers": [
      ")sgE",
      "\"`c%g3jP^r",
      "\"o",
      ")Lc<K%N5xrx[[z;Kv6c#g!>3",
      "(c4S/#O+g?:B&DHK"
    ]
  },
  {
    "regex": "</?(?:span|u|i|u|del)\\b[^>]*>",
    "refactor_regex": "</{0,1}(span|u|i|u|del)\\b[^>]*>",
    "5_correct_answers": [
      "<span=(;`G?5*R)1>",
      "<u(_L>",
      "</u*Z/R ^QfOB5r65]8C>",
      "<span:l>",
      "<span[+kto'a9PwCKwOa(aF=Z0\">"
    ],
    "5_incorrect_answers": [
      "|spanC(D`G?5*R)1>",
      "$u(_LD",
      "6/u*Z/R ^QfOB5r65]8C>",
      "<0p7n:l>",
      "<Gpan[+kto'a9PwCKwOa1aF=Z0\">"
    ]
  },
  {
    "regex": "warning: warning message",
    "refactor_regex": "(warning: warning message)",
    "5_correct_answers": [
      "warning: warning message",
      "warning: warning message",
      "warning: warning message",
      "warning: warning message",
      "warning: warning message"
    ],
    "5_incorrect_answers": [
      "warnin}: warning message",
      "warning: warning mPssagy",
      "warning: wa0ning message",
      "warning: warning:m1ssage",
      "wa{ning: warning message"
    ]
  },
  {
    "regex": "^## Master$",
    "refactor_regex": "^(## Master)$",
    "5_correct_answers": [
      "## Master",
      "## Master",
      "## Master",
      "## Master",
      "## Master"
    ],
    "5_incorrect_answers": [
      "n#1Matter",
      "##=Master",
      "##PMaster",
      "## Mastlr",
      "*# Master"
    ]
  },
  {
    "regex": "window\\.location\\.href=\"(.*)\"",
    "refactor_regex": "(window)[.](location)[.](href=\")(.*)\"",
    "5_correct_answers": [
      "window.location.href=\"LioW\"",
      "window.location.href=\"R,W#O=o4/VQ\"",
      "window.location.href=\"D.iXcA\"",
      "window.location.href=\"_5+J5tL3\"",
      "window.location.href=\"\""
    ],
    "5_incorrect_answers": [
      "window.MWcation.hr.f=\"LioW\"",
      "window.locatioJ.href=\"R,W#O=o4/VQ\"",
      "window.locaHion.href=\"D.iXcA\"",
      "wi,dow.,ocation.href=\"_5+J5tL3\"",
      "window.locatio@.h>ef=\"\""
    ]
  },
  {
    "regex": "\\.(png|jpg|bmp)$",
    "refactor_regex": "([.])(png|jpg|bmp)$",
    "5_correct_answers": [
      ".bmp",
      ".jpg",
      ".jpg",
      ".jpg",
      ".bmp"
    ],
    "5_incorrect_answers": [
      ".ZmM",
      "..p+",
      ".j(7",
      ".jlg",
      ".~me"
    ]
  },
  {
    "regex": "Missing required param: password",
    "refactor_regex": "(Missing required param: password)",
    "5_correct_answers": [
      "Missing required param: password",
      "Missing required param: password",
      "Missing required param: password",
      "Missing required param: password",
      "Missing required param: password"
    ],
    "5_incorrect_answers": [
      "MissinP required phram: password",
      "Missing requir(d paaam: password",
      "Misskng required param7 password",
      "Missing r5quired plram: password",
      "Eissing required param: passwoud"
    ]
  },
  {
    "regex": "--[^=]*=.*",
    "refactor_regex": "(--)[^=]*=.*",
    "5_correct_answers": [
      "--4Wjmo:vau\"0HgRNYeF/sV[.=ra",
      "--==aT*+ND,cD/+^DV-@",
      "--=.xjG6",
      "--fvGuy[Ul.*t)$=oTGwCa!DO",
      "--=;je-(6:H\""
    ],
    "5_incorrect_answers": [
      "-V4Wjmo:vau\"0HgRNYeF/sV[B=ra",
      "c-==aT*+ND,cD/+^DV-@",
      "$-=.xjG6",
      "--fvGuy[U*.*tf$koTGwCa!DO",
      "-(=;je-(6tH\""
    ]
  },
  {
    "regex": "^myhost.com/save/myEntity/?$",
    "refactor_regex": "^myhost.com/save/myEntity(/|)$",
    "5_correct_answers": [
      "myhostMcom/save/myEntity",
      "myhost%com/save/myEntity",
      "myhostVcom/save/myEntity/",
      "myhostrcom/save/myEntity/",
      "myhostNcom/save/myEntity"
    ],
    "5_incorrect_answers": [
      "myhostMcom/saLe/myEnYity",
      "myhost%com/save/myEntcty",
      "myhostHcom/save/myE6titb/",
      "myhostrcof/save/myEntity/",
      "myhostN}om/save/myEntity"
    ]
  },
  {
    "regex": "<var (.*?)>",
    "refactor_regex": "(<var ).*?>",
    "5_correct_answers": [
      "<var 'o#R>3AkGu3>",
      "<var M$&zU>",
      "<var gEL9Co>",
      "<var 7!=]K_3M<\\8X!OB?F*>",
      "<var DD30I=<==%.*C/J8>"
    ],
    "5_incorrect_answers": [
      "<va, 'w#R>3AkGu3>",
      "<varbM$2zU>",
      "<varegEL9Co>",
      "<Uar 7!=]K_\"M<\\8X!OB?F1>",
      "<var DD30I=<=M%.*C/J8n"
    ]
  },
  {
    "regex": "^:tfile\\s+",
    "refactor_regex": "^:tfile[ \\t\\n\\r\\f\\v]{1,}",
    "5_correct_answers": [
      ":tfile ",
      ":tfile ",
      ":tfile ",
      ":tfile ",
      ":tfile "
    ],
    "5_incorrect_answers": [
      ":xfi4e ",
      ":tfZIe ",
      ":t?ile`",
      ":5file ",
      ":,f-l` "
    ]
  },
  {
    "regex": "OMI/([0-9]+\\.[0-9]+)",
    "refactor_regex": "OMI/(\\d\\d*\\.\\d\\d*)",
    "5_correct_answers": [
      "OMI/4.25763001639561597360150",
      "OMI/69427.3563",
      "OMI/70988030235.23278884",
      "OMI/9487236290.5175",
      "OMI/572513559.08486122150894965726"
    ],
    "5_incorrect_answers": [
      "OMI/4.a57630 1639561597360150",
      "OMI/69w27.3563",
      "OMI&709680>0235.23278884",
      "=MI/948723K290.51(5",
      "OMI/5q2513559.08&86122150894965726"
    ]
  },
  {
    "regex": "<?{ ?[^}]* ?}>?",
    "refactor_regex": "<{0,1}{ {0,1}[^}]* {0,1}}>{0,1}",
    "5_correct_answers": [
      "<{ 2l\"d&Ect}>",
      "<{ _` }",
      "{DW4Ko:R$2Mfm}>",
      "{ (VuKy>=}>",
      "<{iY[`O`F }>"
    ],
    "5_incorrect_answers": [
      "e{ 2l\"d&Ect}>",
      "w{ _`j}",
      "jDW/Ko:R$2Mfm}>",
      "{=(VuKy>=s>",
      "N{iY5`O`F }>"
    ]
  },
  {
    "regex": "casperjs",
    "refactor_regex": "(casperjs)",
    "5_correct_answers": [
      "casperjs",
      "casperjs",
      "casperjs",
      "casperjs",
      "casperjs"
    ],
    "5_incorrect_answers": [
      "casperj\\",
      "cJsperjs",
      "caupirjs",
      "casL8Zjs",
      "ca)pdrjs"
    ]
  },
  {
    "regex": "^\\d{3}$",
    "refactor_regex": "^[0-9][0-9][0-9]$",
    "5_correct_answers": [
      "479",
      "586",
      "630",
      "595",
      "902"
    ],
    "5_incorrect_answers": [
      "\"3+",
      "Y8>",
      "6c#",
      "q9s",
      "!02"
    ]
  },
  {
    "regex": "\\.mtd$",
    "refactor_regex": "([.])mtd$",
    "5_correct_answers": [
      ".mtd",
      ".mtd",
      ".mtd",
      ".mtd",
      ".mtd"
    ],
    "5_incorrect_answers": [
      ".dtV",
      "mBtd",
      "xmtg",
      ".<td",
      ".;td"
    ]
  },
  {
    "regex": "flash\\d+v",
    "refactor_regex": "flash[0-9][0-9]*v",
    "5_correct_answers": [
      "flash7452690510127v",
      "flash5809828206595v",
      "flash527v",
      "flash713350592902204v",
      "flash5806411528427298v"
    ],
    "5_incorrect_answers": [
      "xlash74H269051012Hv",
      "f~ash5809828206595v",
      "flash52'v",
      "Glash713350592902204v",
      "flash580&411528427298v"
    ]
  },
  {
    "regex": "natural ?gift",
    "refactor_regex": "natural ?(gift)",
    "5_correct_answers": [
      "naturalgift",
      "naturalgift",
      "naturalgift",
      "natural gift",
      "naturalgift"
    ],
    "5_incorrect_answers": [
      "naturalsibt",
      "nat\\raPgift",
      "nst.ralvift",
      "naturBl gifb",
      "natural|ift"
    ]
  },
  {
    "regex": "(?:a|b|c)",
    "refactor_regex": "[a-c]",
    "5_correct_answers": [
      "a",
      "c",
      "c",
      "c",
      "c"
    ],
    "5_incorrect_answers": [
      "{",
      "f",
      "|",
      "x",
      "8"
    ]
  },
  {
    "regex": "\\W\\d+",
    "refactor_regex": "\\W\\d{1,}",
    "5_correct_answers": [
      "@9856844617108902519",
      "`8",
      "[784003713924123770",
      "$698476350362130888358669",
      "!915320344544590172384302"
    ],
    "5_incorrect_answers": [
      "e9856844P17108902519",
      "u8",
      "[YY40&3713924123770",
      "F698v763503621308Y8358669",
      "XG15320344544590172384302"
    ]
  },
  {
    "regex": "SetCookie",
    "refactor_regex": "(SetCookie)",
    "5_correct_answers": [
      "SetCookie",
      "SetCookie",
      "SetCookie",
      "SetCookie",
      "SetCookie"
    ],
    "5_incorrect_answers": [
      "SetCIoOit",
      "SetC'okie",
      "SjtCookie",
      "ie$oookie",
      "Set&ooki<"
    ]
  },
  {
    "regex": "^#[0-9a-f]{1,4}$",
    "refactor_regex": "^#(0|1|2|3|4|5|6|7|8|9|a|b|c|d|e|f){1,4}$",
    "5_correct_answers": [
      "#609",
      "#4",
      "#7f38",
      "#5",
      "#64b"
    ],
    "5_incorrect_answers": [
      "{600",
      "74",
      "#7SF8",
      "QS",
      "i64b"
    ]
  },
  {
    "regex": "[,\\.\\?]$",
    "refactor_regex": "(,|\\.|\\?)$",
    "5_correct_answers": [
      "?",
      ".",
      ",",
      "?",
      "."
    ],
    "5_incorrect_answers": [
      ";",
      "2",
      "Q",
      "/",
      "l"
    ]
  },
  {
    "regex": "\\bAs\\sa\\sfoil\\sto\\s",
    "refactor_regex": "\\bAs( |\\t|\\n|\\r|\\f|\\v)a( |\\t|\\n|\\r|\\f|\\v)foil( |\\t|\\n|\\r|\\f|\\v)to( |\\t|\\n|\\r|\\f|\\v)",
    "5_correct_answers": [
      "As a foil to ",
      "As a foil to ",
      "As a foil to ",
      "As a foil to ",
      "As a foil to "
    ],
    "5_incorrect_answers": [
      "As a foiB to ",
      "As a}foil to ",
      "xs | foil to ",
      "As a foil]to ",
      "AI a foilRto "
    ]
  },
  {
    "regex": "^version\\s*([\\d\\.]+)\\s*$",
    "refactor_regex": "^(version)\\s*([\\d.]+)\\s*$",
    "5_correct_answers": [
      "version.0.10990293. ",
      "version.",
      "version85416498642495522913 ",
      "version.319468636058857530",
      "version9538938267"
    ],
    "5_incorrect_answers": [
      "vers5on.\\.10990293. ",
      "vers!on.",
      "version85!16498,42495U22913 ",
      "version.319463636058857#30",
      "version953r938267"
    ]
  },
  {
    "regex": "<(?:script|style|link)",
    "refactor_regex": "<(script|style|link)",
    "5_correct_answers": [
      "<link",
      "<link",
      "<style",
      "<link",
      "<style"
    ],
    "5_incorrect_answers": [
      "<linj",
      "<lx]W",
      "<styl)",
      "+x|nk",
      "<Ltyl^"
    ]
  },
  {
    "regex": "<error.*>",
    "refactor_regex": "(<error).*>",
    "5_correct_answers": [
      "<error'H81>",
      "<errorRdedh`G?ra<a+via/>",
      "<error\\M>",
      "<errorNY+Y(q>",
      "<errorF>q[$v?#m,suJR>"
    ],
    "5_incorrect_answers": [
      "<eMror'HXb>",
      "<er_orRded>`G?ra<a+via/>",
      "<errBr\\w>",
      "<eryorNY+Y(q>",
      "<e/rorF>q[$v?#m,soJR>"
    ]
  },
  {
    "regex": "--C>",
    "refactor_regex": "(--C>)",
    "5_correct_answers": [
      "--C>",
      "--C>",
      "--C>",
      "--C>",
      "--C>"
    ],
    "5_incorrect_answers": [
      "i{*>",
      "i-Cu",
      "--[R",
      "-#C>",
      "-eC>"
    ]
  },
  {
    "regex": "^(?:[^,:]+,)+::(.*)$",
    "refactor_regex": "^([^,:]+,)+(::.*)$",
    "5_correct_answers": [
      "(lZ]>hctZ,::_",
      "JWEs7[,Ve\\$k<$!,::",
      "V5k-OJ]IE,9;<0pq,::9j",
      " QN=6m m)E53^,::\"+Zu",
      "&6(TWi ,/K,::C7jo##"
    ],
    "5_incorrect_answers": [
      "(lZ]>hc<ZQ::_",
      "JWE-7[,Ve\\$k<$!)::",
      "85k-OJ]IE,9;<0pqq::9j",
      " Q3=6m m);53^&::\"+Zu",
      "&6(TWi[,/K,:/C7jo##"
    ]
  },
  {
    "regex": "MISSING TRANSLATION",
    "refactor_regex": "(MISSING TRANSLATION)",
    "5_correct_answers": [
      "MISSING TRANSLATION",
      "MISSING TRANSLATION",
      "MISSING TRANSLATION",
      "MISSING TRANSLATION",
      "MISSING TRANSLATION"
    ],
    "5_incorrect_answers": [
      "MISSJNG TRAqS<ATION",
      "WISSING TR_HSLATION",
      "MISSIVG TRANSLATION",
      "MISSING TRAGSLATION",
      "MISSINz PRANSLATION"
    ]
  },
  {
    "regex": "^551.*try\\s+([<][^>]*[>])",
    "refactor_regex": "^551.*try[ \\t\\n\\r\\f\\v]{1,}<[^>]*>",
    "5_correct_answers": [
      "551^i$try  <Xvm'7?v8[wUU>",
      "551lH,3%FcT!EvHD7z&try <<Ult\\O1u\">",
      "5512?ntry <u@>",
      "551)QrYjhu;8M No=#WEtry <p'K>",
      "551]qLo1ctry <:88 GVBg!T8>"
    ],
    "5_incorrect_answers": [
      "V51^i$trH  <Xvm'7?v8[wUU>",
      "!51lH,3%Fcm!EvHD7z&try <<Ult\\O1u\">",
      "55nZ?ntry <u@>",
      "5M1)QrYjhu;8M No=#WEtry <p'K>",
      "551ZqLo1ctry <:88 GVBS!T8N"
    ]
  },
  {
    "regex": "^nav_menu\\[",
    "refactor_regex": "^(nav_menu)\\[",
    "5_correct_answers": [
      "nav_menu[",
      "nav_menu[",
      "nav_menu[",
      "nav_menu[",
      "nav_menu["
    ],
    "5_incorrect_answers": [
      "nLv_meRu[",
      "nav?*enu[",
      "Wav_menu[",
      "nav_mGnu[",
      "*av_mWnu["
    ]
  },
  {
    "regex": "^if.*",
    "refactor_regex": "^(if).*",
    "5_correct_answers": [
      "ifS+cW9h5:",
      "ifXt,JF\"vrOXa-F",
      "if%tsS!D",
      "ifaFD<h Pk#rrgMQNA;Z&C,^T^",
      "if9,a"
    ],
    "5_incorrect_answers": [
      "imS+cW9f5:",
      "4aXt,JF\"vrOXa-y",
      "i3%t\\SDD",
      "i%aFD<h 4k#rrgMQNA;'&C,^T^",
      "i#9TZ"
    ]
  },
  {
    "regex": "pink",
    "refactor_regex": "(pink)",
    "5_correct_answers": [
      "pink",
      "pink",
      "pink",
      "pink",
      "pink"
    ],
    "5_incorrect_answers": [
      "pin)",
      " ink",
      "pznk",
      "u;nk",
      "pitm"
    ]
  },
  {
    "regex": "Must provide Task",
    "refactor_regex": "(Must provide Task)",
    "5_correct_answers": [
      "Must provide Task",
      "Must provide Task",
      "Must provide Task",
      "Must provide Task",
      "Must provide Task"
    ],
    "5_incorrect_answers": [
      "Muct provide Task",
      "Must provi%e iasG",
      "MuRt providemTask",
      "Must prowide Z`sk",
      "MustCproviBe Task"
    ]
  },
  {
    "regex": "NODE_ADDRESS\\s*:\\s*'[^']+'",
    "refactor_regex": "NODE_ADDRESS\\s*:\\s*'[^']{1,}'",
    "5_correct_answers": [
      "NODE_ADDRESS: 'H8ga81rDTnAhzbib4X'",
      "NODE_ADDRESS:'niB-@C4W;v/4wpK87i '",
      "NODE_ADDRESS:'xk>\"4NjeO7.pk6?'",
      "NODE_ADDRESS:'XVh$d,Er/m7m)KQ +;'",
      "NODE_ADDRESS:'*1[wp]*'"
    ],
    "5_incorrect_answers": [
      "NODE_A~DRESS:>'H8ga81rDTnAhzbib4X'",
      "NODE_ADDR>Sr:'niB-@C4W;v/4wpK87i '",
      "NO E_ADDRESS:'xN>\"4NjeO7.pk6?'",
      "NODE_ADDRESr:'XVh$dPEr/m7m)KQ +;'",
      "NODE_ADDRESo:'*1[wp]*'"
    ]
  },
  {
    "regex": "^(?:{(.*?)}){1,4}\\s*([\\s\\S]+)?$",
    "refactor_regex": "^(?:{(.*?)}){1,4}[ \\t\\n\\r\\f\\v]*(([ \\t\\n\\r\\f\\v]|\\S)+)?$",
    "5_correct_answers": [
      "{SLUA<mt^BvmK,cD9M}",
      "{$iY} ",
      "{oLP0\"VCSmEnP$h]`Bm!0=K'$}",
      "{(\\&<Dkv<6} ",
      "{0?@ @`G'q&oWO}"
    ],
    "5_incorrect_answers": [
      "FSLUA<9t^BvmK,7D9M}",
      "R$iY}M",
      "soLP0\"VCSmOnP$h]`Bm!0=K'$}",
      "{(?&<Dkv<6M ",
      "{0?@ @`G'q&o>Ox"
    ]
  },
  {
    "regex": "^readme.markdown",
    "refactor_regex": "^(readme).(markdown)",
    "5_correct_answers": [
      "readme+markdown",
      "readmeEmarkdown",
      "readmexmarkdown",
      "readmejmarkdown",
      "readme#markdown"
    ],
    "5_incorrect_answers": [
      "readme+markdNwn",
      "readIez2arkdown",
      "r}admexmarkdown",
      "rea>meImarkdown",
      "readme#7arkdTwn"
    ]
  },
  {
    "regex": "^EINVDATA",
    "refactor_regex": "^(EINVDATA)",
    "5_correct_answers": [
      "EINVDATA",
      "EINVDATA",
      "EINVDATA",
      "EINVDATA",
      "EINVDATA"
    ],
    "5_incorrect_answers": [
      "EIN5DgTA",
      "EINVDAYA",
      "E?NssATA",
      "MI VDA$A",
      "EINVDAT-"
    ]
  },
  {
    "regex": "^([-\\w]+): ([^\\r]+)$",
    "refactor_regex": "^((-|\\w){1,})(: )([^\\r]{1,})$",
    "5_correct_answers": [
      "m: ]QWM$TqzpYiK+",
      "K: mmaH ",
      "J:  Gc?8H&",
      "V: $?8xsKIxV\\FdN!D\\",
      "8: FVYOvuj,Kr?y5bGONYcF-bm"
    ],
    "5_incorrect_answers": [
      "ml ]QWM$Tq2pYiK+",
      "KS mmHH ",
      "J\\  Gc?8H&",
      "Vm ,?%xsKIxV\\FdN!D\\",
      "8:UF*YOvuj,Tr?y5bGONYcF-bm"
    ]
  },
  {
    "regex": "receiving(.*)file list",
    "refactor_regex": "(receiving)(.*)(file list)",
    "5_correct_answers": [
      "receivingsh+=]EP_file list",
      "receiving>zfile list",
      "receivingY&w*!Hvfile list",
      "receivingt:+m\"cP5>file list",
      "receivingo3Q;ab+G!jfile list"
    ],
    "5_incorrect_answers": [
      "receivingsh+=]EP_fil/ list",
      "receiving>zoile list",
      "receivingY&w*!Hvfile lis2",
      "rece^vingt:Mm\"cP5>file list",
      "reccivingi3Q;aX+G!jfile list"
    ]
  },
  {
    "regex": "^break-",
    "refactor_regex": "^(break-)",
    "5_correct_answers": [
      "break-",
      "break-",
      "break-",
      "break-",
      "break-"
    ],
    "5_incorrect_answers": [
      "Dr;ak-",
      "Jreak-",
      "b>e,w-",
      "bheak-",
      "brXaka"
    ]
  },
  {
    "regex": "(alias|status)es$",
    "refactor_regex": "(aliases|statuses)$",
    "5_correct_answers": [
      "aliases",
      "aliases",
      "aliases",
      "statuses",
      "aliases"
    ],
    "5_incorrect_answers": [
      "algaves",
      "alrases",
      "ySiasDs",
      "sta rsCs",
      "aliJsep"
    ]
  },
  {
    "regex": "^~?P\\d+$",
    "refactor_regex": "^~?P(0|1|2|3|4|5|6|7|8|9){1,}$",
    "5_correct_answers": [
      "~P473102240247125",
      "P042667743257",
      "P4",
      "P9955500283881446",
      "P157416100218"
    ],
    "5_incorrect_answers": [
      "~P473102240247k25",
      "PEX2667q43257",
      "/#",
      "P9955o00283881446",
      "P157c1610021%"
    ]
  },
  {
    "regex": "\\bffi\\b",
    "refactor_regex": "\\b(ffi)\\b",
    "5_correct_answers": [
      "ffi",
      "ffi",
      "ffi",
      "ffi",
      "ffi"
    ],
    "5_incorrect_answers": [
      "f#i",
      "ffE",
      "fZi",
      "fff",
      "If "
    ]
  },
  {
    "regex": "handshake unauthorized",
    "refactor_regex": "(handshake unauthorized)",
    "5_correct_answers": [
      "handshake unauthorized",
      "handshake unauthorized",
      "handshake unauthorized",
      "handshake unauthorized",
      "handshake unauthorized"
    ],
    "5_incorrect_answers": [
      "[andshake unauthorized",
      "Vandshake unauth rgzed",
      "handshaAe u=`uthorized",
      "hmndsKake|unauthorized",
      "hanjshake unauthorized"
    ]
  },
  {
    "regex": "\\.[\\w][\\w\\d]{1,4}$",
    "refactor_regex": "\\.(\\w)(\\w|\\d)((\\w|\\d)(\\w|\\d)(\\w|\\d)|(\\w|\\d)(\\w|\\d)|(\\w|\\d)(\\w|\\d)|\\w|\\d|(\\w|\\d)(\\w|\\d)|\\w|\\d|\\w|\\d|)$",
    "5_correct_answers": [
      ".rAp",
      ".LB",
      ".1ep",
      "._O",
      ".HnT"
    ],
    "5_incorrect_answers": [
      ".j.p",
      "kIB",
      ":1ep",
      "i_9",
      "AHnk"
    ]
  },
  {
    "regex": "^(\\d+)-1$",
    "refactor_regex": "^[0-9]+-1$",
    "5_correct_answers": [
      "336241636565-1",
      "29893-1",
      "7931853515592170-1",
      "722079968865696367-1",
      "11472-1"
    ],
    "5_incorrect_answers": [
      "33f2416i6565-1",
      "29893S,",
      "7931853@15592170-1",
      "72207996886569x36V-1",
      "1K_;2-1"
    ]
  },
  {
    "regex": "^\\[(\\d+):(\\d\\d).(\\d\\d)\\](.*)$",
    "refactor_regex": "^\\[(\\d\\d{0,}):(\\d\\d).(\\d\\d)\\](.*)$",
    "5_correct_answers": [
      "[704926045277620:79X85]aT6R",
      "[767632481840034683734371:12:05]l\\",
      "[517561:32D33]ksh2?9pU LR_fx",
      "[2:95O76]FZV6',yG\",+3]@(T>y@a@",
      "[986672145640:97/95]8r%pA.4(@xA"
    ],
    "5_incorrect_answers": [
      "[704926045277;20:79X85]aT6R",
      "R767632481840034683734671:1$:05]l\\",
      "[517561e32D33]ksh2?9pU LR~fx",
      "[p:95O76]FZV6',)G\",+3]@(T>y@a@",
      "[986672145640:b7/95]8r%pAD4(@xA"
    ]
  },
  {
    "regex": "</*[^>]+>",
    "refactor_regex": "</*[^>]{1,}>",
    "5_correct_answers": [
      "<///D1i4cTcT>",
      "<//XI\"nIv[s_[H>",
      "<///q8x`Hwe=N5P.^Jq5>",
      "<///NCjd!1O<E!>",
      "<////////////////////7H6,-t=7eAS>"
    ],
    "5_incorrect_answers": [
      "3///D1i4fTcT>",
      ",/KXI\"nIv[s_[H>",
      "}///q8x`Hwe=N5P.&Jq5>",
      "<///NCjd!1O<E!5",
      "<////////////////////7HK,-h=7eAS "
    ]
  },
  {
    "regex": "_[0-9]+",
    "refactor_regex": "_(0|1|2|3|4|5|6|7|8|9)+",
    "5_correct_answers": [
      "_18361913900071836816011",
      "_004552",
      "_51597849669627",
      "_893496430510595019057245",
      "_7939874516606994"
    ],
    "5_incorrect_answers": [
      "J183619139000&1836816011",
      "b00v552",
      "`5e597049669627",
      "_#93496430510595019057245",
      "_?939874R16606994"
    ]
  },
  {
    "regex": ".ely$",
    "refactor_regex": ".(ely)$",
    "5_correct_answers": [
      "8ely",
      "\"ely",
      ")ely",
      "\"ely",
      "Gely"
    ],
    "5_incorrect_answers": [
      "8sRV",
      "\"eRy",
      "FeMN",
      "\"\\ly",
      "'e.y"
    ]
  },
  {
    "regex": "<p>test first name</p>",
    "refactor_regex": "(<p>test first name</p>)",
    "5_correct_answers": [
      "<p>test first name</p>",
      "<p>test first name</p>",
      "<p>test first name</p>",
      "<p>test first name</p>",
      "<p>test first name</p>"
    ],
    "5_incorrect_answers": [
      "<pSte#t fi7st name</p>",
      "<p>t.st fgrst name</p>",
      "<p>test first na{e</p>",
      "<pWtest ;i5st name</p>",
      "9p>test Iirst name</p>"
    ]
  },
  {
    "regex": "\\*/",
    "refactor_regex": "((\\*))/",
    "5_correct_answers": [
      "*/",
      "*/",
      "*/",
      "*/",
      "*/"
    ],
    "5_incorrect_answers": [
      "*^",
      "*&",
      "x)",
      "*!",
      "_`"
    ]
  },
  {
    "regex": "select\\s*top\\s*([0-9])\\s",
    "refactor_regex": "select[ \\t\\n\\r\\f\\v]*top[ \\t\\n\\r\\f\\v]*(0|1|2|3|4|5|6|7|8|9)[ \\t\\n\\r\\f\\v]",
    "5_correct_answers": [
      "selecttop4 ",
      "selecttop9 ",
      "selecttop1 ",
      "selecttop0 ",
      "selecttop6 "
    ],
    "5_incorrect_answers": [
      "sclectt/p> ",
      ",electtop/!",
      "s8lectto61 ",
      "sel\"c-top0 ",
      "selectRop6~"
    ]
  },
  {
    "regex": "not available",
    "refactor_regex": "(not available)",
    "5_correct_answers": [
      "not available",
      "not available",
      "not available",
      "not available",
      "not available"
    ],
    "5_incorrect_answers": [
      "nSt availabl7",
      "nnt avKil6ble",
      "not avSiJable",
      "not avaixable",
      "n&t available"
    ]
  },
  {
    "regex": "github token([\\s\\S]*)",
    "refactor_regex": "github token((( |\\t|\\n|\\r|\\f|\\v)|\\S)*)",
    "5_correct_answers": [
      "github token",
      "github token",
      "github token",
      "github token",
      "github token"
    ],
    "5_incorrect_answers": [
      "githubwtwken",
      "1ifhub tDken",
      "g8t,ub token",
      "github to~An",
      "git;ub to>en"
    ]
  },
  {
    "regex": "^(?:=)$",
    "refactor_regex": "^=$",
    "5_correct_answers": [
      "=",
      "=",
      "=",
      "=",
      "="
    ],
    "5_incorrect_answers": [
      "R",
      "0",
      "{",
      "a",
      "P"
    ]
  },
  {
    "regex": "^\\*\\*([a-zA-Z/_.]+)\\*\\*$",
    "refactor_regex": "^[*][*][abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ/_.]{1,}[*][*]$",
    "5_correct_answers": [
      "**inMwMXNzDYOzMzdaIuGXmojCZ**",
      "**jsqdWNPzkv**",
      "**PNumWXlQmYip/Vuj**",
      "**LGf**",
      "**syVuU.xubNw**"
    ],
    "5_incorrect_answers": [
      "**inMwMXNzDYNzMzdaIuGXmojCZK*",
      "**j0qdWNPzkv**",
      "**PNumWXlQmYip/VujQl",
      "**LGf=*",
      "**syVOU.xubNw*Y"
    ]
  },
  {
    "regex": "([^\\s]+)(s)tr\\.?$",
    "refactor_regex": "([^ \\t\\n\\r\\f\\v]+)(s)tr([.]){0,1}$",
    "5_correct_answers": [
      "HK%(o1`JBB;eRmzoxB[j1\\str.",
      ".:yL\\(l.<m_h9$>IUI*3C=V=Kstr.",
      "z7RhqEvOt@str.",
      "Z1+Q91ZWuG$3NA\"_*WiXzstr.",
      "DSl/v'hu3str."
    ],
    "5_incorrect_answers": [
      "HK%(o1`JBB;eR-zoxB[j1\\st&.",
      "_:yL\\(l.<m_h9$>IUc*3C=V=Kspr.",
      "z7RH0EvOt@s>r.",
      "Z1+Q91ZWuG$3NG\"_*WiXzsUr.",
      "DSl/P'hu3ety."
    ]
  },
  {
    "regex": "^/components/(.+)$",
    "refactor_regex": "^/components/.+$",
    "5_correct_answers": [
      "/components/\\B4vuHO1_$Z!6'@SQU#[l",
      "/components/qd]9(7^t,7?aRoo=@:d",
      "/components/XkQ 1EJeS+h)4FHsh",
      "/components/gCZkzJ3IJa",
      "/components/?gES5Q47wXe$(zUFAh"
    ],
    "5_incorrect_answers": [
      "/compon(ntp/\\B4vuHO1_CZ!6'@SQU#[l",
      "/compone0ts/qd]9(7^tF7?aRoo=@:d",
      "hcomponents/XkQ 15JeS+h)4FH@h",
      "/compoLents/g8pkzJ3IJa",
      "Zcomponents/?gES5Q47wXe$6zUFAh"
    ]
  },
  {
    "regex": "^#!.*\\n?",
    "refactor_regex": "^#!.*\\n{0,1}",
    "5_correct_answers": [
      "#!4$!+#tacl",
      "#!/_Kc]V0i]&.G:8g71pDr]",
      "#!:yh-K/U(",
      "#!d<N<JJ\"&2h\\IvwoejF@QI&4R",
      "#!AV\\U1pk_pZ4Yk:rxMp4wZQvm"
    ],
    "5_incorrect_answers": [
      "#_4$!+#ta9l",
      "T!/_Kc]V0i]&.G:8g71p;r]",
      "#T:yh-K/U(",
      "57d<N<JJ\"&ph\\IvwoejF@QI&4R",
      "#TAV\\U1pk_pZ4Yk:rxMp4wwQvq"
    ]
  },
  {
    "regex": "bssid=([A-Fa-f0-9:]{3})",
    "refactor_regex": "bssid=[A-Fa-f0-9:]{3}",
    "5_correct_answers": [
      "bssid=9fb",
      "bssid=Aeb",
      "bssid=B7c",
      "bssid=fED",
      "bssid=92D"
    ],
    "5_incorrect_answers": [
      "bs,iH=9fb",
      "bZsid=A8b",
      "bs?qd=B7c",
      "bsci;=FED",
      "b.Rid=9zD"
    ]
  },
  {
    "regex": "^6[0-9]{3}$",
    "refactor_regex": "^6((0|1|2|3|4|5|6|7|8|9)(0|1|2|3|4|5|6|7|8|9)(0|1|2|3|4|5|6|7|8|9))$",
    "5_correct_answers": [
      "6128",
      "6400",
      "6206",
      "6066",
      "6051"
    ],
    "5_incorrect_answers": [
      "O|28",
      "6;0|",
      "62K6",
      "606`",
      "60I1"
    ]
  },
  {
    "regex": "(.)(\\.[^.]+)?$",
    "refactor_regex": "(.)([.][^.]+)?$",
    "5_correct_answers": [
      "n.cZLU9x^Ye20DlLoZhh]",
      "[.G'_n]Yv^e<ms9ccB-w^ yXS",
      "K.v)Y>6L",
      "n.3E#ZuCg/j=)\"RjZ0Yc\\P4v",
      "4"
    ],
    "5_incorrect_answers": [
      "n)cZLU9F^Ye20DlLoZhh`",
      "SQG'_n]Yv^e<ms9ccB-w^ yXS",
      "K.v).>VL",
      "n.3/#ZuCg/;=)\"RjZ0Yc.P4v",
      "NOMATCH123"
    ]
  },
  {
    "regex": "^/throb",
    "refactor_regex": "^(/throb)",
    "5_correct_answers": [
      "/throb",
      "/throb",
      "/throb",
      "/throb",
      "/throb"
    ],
    "5_incorrect_answers": [
      "/tgro7",
      "/Bhrob",
      "/thV`b",
      "/thr3b",
      "/th'ib"
    ]
  },
  {
    "regex": "\\A[a-z][a-z]\\d\\d\\Z",
    "refactor_regex": "\\A[abcdefghijklmnopqrstuvwxyz][abcdefghijklmnopqrstuvwxyz][0-9][0-9]\\Z",
    "5_correct_answers": [
      "pl69",
      "ux02",
      "yn09",
      "qt55",
      "cw68"
    ],
    "5_incorrect_answers": [
      "J889",
      "uxzh",
      "LU0/",
      "q/]5",
      "^w6M"
    ]
  },
  {
    "regex": "^ssh://git@github.com/",
    "refactor_regex": "^(ssh://git@github).(com/)",
    "5_correct_answers": [
      "ssh://git@github'com/",
      "ssh://git@github<com/",
      "ssh://git@github>com/",
      "ssh://git@githubvcom/",
      "ssh://git@githubccom/"
    ],
    "5_incorrect_answers": [
      "ssh:;/ght@githuv'com/",
      "Psh://g t@github<com]",
      "ssh:/Wgit@github>com/",
      "sshR//git@g$thubvcom/",
      "ssha//git@githubccLm/"
    ]
  },
  {
    "regex": "no translation",
    "refactor_regex": "(no translation)",
    "5_correct_answers": [
      "no translation",
      "no translation",
      "no translation",
      "no translation",
      "no translation"
    ],
    "5_incorrect_answers": [
      "no t=anslation",
      "no transKation",
      "no tr*nsSat[on",
      "Vo trm6slation",
      "no 2rvnslation"
    ]
  },
  {
    "regex": "FounderLab_replaceme",
    "refactor_regex": "(FounderLab_replaceme)",
    "5_correct_answers": [
      "FounderLab_replaceme",
      "FounderLab_replaceme",
      "FounderLab_replaceme",
      "FounderLab_replaceme",
      "FounderLab_replaceme"
    ],
    "5_incorrect_answers": [
      "Soun(erLab_replacem\"",
      "FounderLTs_replace'e",
      "FounderLab_Aeplaclme",
      "FounderLKb_replaieme",
      "FounderLa}_Keplaceme"
    ]
  },
  {
    "regex": "^\\W|\\W$",
    "refactor_regex": "(^\\W|\\W$)",
    "5_correct_answers": [
      "+",
      "*",
      "{",
      "/",
      ">"
    ],
    "5_incorrect_answers": [
      "2",
      "W",
      "G",
      "E",
      "c"
    ]
  },
  {
    "regex": ":modelAlias",
    "refactor_regex": "(:modelAlias)",
    "5_correct_answers": [
      ":modelAlias",
      ":modelAlias",
      ":modelAlias",
      ":modelAlias",
      ":modelAlias"
    ],
    "5_incorrect_answers": [
      ":podelAl9a`",
      ":modelAjias",
      ":mo\"elAlias",
      ":moVelAliaC",
      ":mbdelAlias"
    ]
  },
  {
    "regex": "(render\\s*\\([^\\)]*\\)\\s*\\{)",
    "refactor_regex": "(render(( |\\t|\\n|\\r|\\f|\\v)+)?\\([^\\)]*\\)(( |\\t|\\n|\\r|\\f|\\v)+)?\\{)",
    "5_correct_answers": [
      "render(TSS0t/bS;){",
      "render(\",(R%yjyx`:U2hc){",
      "render(Ps5){",
      "render (Qe!K4ZO*n?'HIo) {",
      "render(vyF!FYC\\.;o^@(r3F'A) {"
    ],
    "5_incorrect_answers": [
      "rrnder(TSS0t/bS;).",
      "recderZ\"-(R%yjyx`:U2hc){",
      "rend)r(Psd&{",
      "renderxzQe7K4ZO*n?'HIo) {",
      "wender(TyF!FYC\\.;o^@(r3F'A) {"
    ]
  },
  {
    "regex": "[^\"_\\*\\[\\(\\?\\+~\\^%@|-]+",
    "refactor_regex": "[^\"_\\*\\[\\(\\?\\+~\\^%@|-][^\"_\\*\\[\\(\\?\\+~\\^%@|-]{0,}",
    "5_correct_answers": [
      "3I)E",
      "fx3,V=CKMYEMmFr)<VtvP82",
      ";dy#6f.C4iCGXYDJF:Gf3G78",
      "uMA'0Ig",
      "]\\0!L"
    ],
    "5_incorrect_answers": [
      "|I)E",
      "?x3,V=CKMYEMmFr$<VtvP82",
      "*dy#6f.C4iCG3YD/F:Gf3G78",
      "+MqH0Ig",
      "_\\<!L"
    ]
  },
  {
    "regex": "^X+$",
    "refactor_regex": "^X{1,}$",
    "5_correct_answers": [
      "XXXXXXXXXXXXXXXX",
      "XXXXXXXXXXXXXXXXXXXXXXXXX",
      "XXXXX",
      "XXXX",
      "XXXXXX"
    ],
    "5_incorrect_answers": [
      "XXX_XXiXX|XXXXXX",
      "XX%XXXXXJRXXXXXXXXXXXXXXX",
      "XXjXJ",
      "XXXn",
      "XXa^dX"
    ]
  },
  {
    "regex": "import ('[^']*';)",
    "refactor_regex": "import ('[^']{0,}';)",
    "5_correct_answers": [
      "import ']#FxV';",
      "import '5es<';",
      "import 'B6,-L\\X@h';",
      "import 'iJPG* 5,nsn VFumvM5g4Q(';",
      "import '!9[)hEPai;hN5H1';"
    ],
    "5_incorrect_answers": [
      "im&ortd']#FxV';",
      "import3'5es<';",
      "import lB6,-L\\X@h';",
      "import^'iJPG* 5,nsn VFEmvM5g4Q(';",
      "impo't '!9[)hEPOi;hN5H1';"
    ]
  },
  {
    "regex": "(L|K|X|Ed)?Ubuntu",
    "refactor_regex": "(L|K|X|Ed|)(Ubuntu)",
    "5_correct_answers": [
      "LUbuntu",
      "Ubuntu",
      "Ubuntu",
      "KUbuntu",
      "Ubuntu"
    ],
    "5_incorrect_answers": [
      "LUbunCu",
      "a/untu",
      "UbuJtu",
      "KBbuFt&",
      "Ub|ntu"
    ]
  },
  {
    "regex": "group-title=\"(.+?)\"",
    "refactor_regex": "(group-title=\")(.{1,}?)\"",
    "5_correct_answers": [
      "group-title=\":H3^86\"",
      "group-title=\"6h\"",
      "group-title=\"OkfXKHN1o;,5&)\"",
      "group-title=\"/dpou:'w6-B%\"",
      "group-title=\"R\\K\""
    ],
    "5_incorrect_answers": [
      "group-title=&:H3^86s",
      "grotp-title=\"6h\"",
      "group-ti{le=\"OkfXKHN1o;,5&)\"",
      "grIup-title=\"/dpou:Ow6-B%K",
      "group-titlJ=\"R\\K\""
    ]
  },
  {
    "regex": "id\\s*=\\s*[\"']([^\"']*)[\"']",
    "refactor_regex": "id\\s*=\\s*(\"|')([^\"']*)(\"|')",
    "5_correct_answers": [
      "id=\"gKkTE@y`TZm'",
      "id= \"]Z=uEnA!?+a,Tig\\4:q\"",
      "id=\"'",
      "id=  'Ee-S/grz.@BDU?I\"",
      "id=\"kx3\""
    ],
    "5_incorrect_answers": [
      "<d=\"gKkTENy`TZm'",
      "idf \"]Z=uEnA!?+a,Tig\\4:q\"",
      "ivO\"'",
      "id= y'Ee-S/grz.@BdU?I\"",
      "id>\"kW3T"
    ]
  },
  {
    "regex": "warning\\.css$",
    "refactor_regex": "(warning)[.](css)$",
    "5_correct_answers": [
      "warning.css",
      "warning.css",
      "warning.css",
      "warning.css",
      "warning.css"
    ],
    "5_incorrect_answers": [
      "xarni\"g.css",
      "waYning.css",
      "garning.css",
      "Larning.css",
      "warningscsr"
    ]
  },
  {
    "regex": "^-A",
    "refactor_regex": "^(-A)",
    "5_correct_answers": [
      "-A",
      "-A",
      "-A",
      "-A",
      "-A"
    ],
    "5_incorrect_answers": [
      "-,",
      "pA",
      "-l",
      "-5",
      "iA"
    ]
  },
  {
    "regex": "\\bGO;?\\s*",
    "refactor_regex": "\\bGO;{0,1}(\\s{1,})?",
    "5_correct_answers": [
      "GO",
      "GO ",
      "GO;",
      "GO",
      "GO;"
    ],
    "5_incorrect_answers": [
      "nK",
      "Gu~",
      "GFS",
      "xO",
      "G5v"
    ]
  },
  {
    "regex": "^([a-f0-9]{1,4}:){3}[a-f0-9]{1,4}$",
    "refactor_regex": "^(([a-f\\d]|[a-f\\d][a-f\\d]|[a-f\\d][a-f\\d][a-f\\d]|[a-f\\d][a-f\\d][a-f\\d][a-f\\d]):){3}([a-f\\d]|[a-f\\d][a-f\\d]|[a-f\\d][a-f\\d][a-f\\d]|[a-f\\d][a-f\\d][a-f\\d][a-f\\d])$",
    "5_correct_answers": [
      "6:5:01:0",
      "97:27:57:141",
      "24:81:e:bb6",
      "8dd:b:6:742",
      "8a2d:5:0:0"
    ],
    "5_incorrect_answers": [
      "6:5/01:G",
      "97:C7:37:141",
      "24N81:e:bb6",
      "Kdd:b:6:742",
      "8a2d:5:UC0"
    ]
  },
  {
    "regex": "Expected fn to be a function.",
    "refactor_regex": "(Expected fn to be a function).",
    "5_correct_answers": [
      "Expected fn to be a function?",
      "Expected fn to be a function*",
      "Expected fn to be a functionI",
      "Expected fn to be a function#",
      "Expected fn to be a function<"
    ],
    "5_incorrect_answers": [
      "qfpected fn to be W function?",
      "Expected fnDto be aGfunction*",
      "Expectek fn to be a functionI",
      "Exp`cted fn todbe a|function#",
      "Expected!fn to be a function<"
    ]
  },
  {
    "regex": "No registered timestamp for event",
    "refactor_regex": "(No registered timestamp for event)",
    "5_correct_answers": [
      "No registered timestamp for event",
      "No registered timestamp for event",
      "No registered timestamp for event",
      "No registered timestamp for event",
      "No registered timestamp for event"
    ],
    "5_incorrect_answers": [
      "No registered timeAtamp for event",
      "No re\\istered tim}stamp for event",
      "No register29 timestamQ for event",
      "No registered tim9sta_p for event",
      "No registered timest.mp fjh event"
    ]
  },
  {
    "regex": "^(?:{OFF})",
    "refactor_regex": "^{OFF}",
    "5_correct_answers": [
      "{OFF}",
      "{OFF}",
      "{OFF}",
      "{OFF}",
      "{OFF}"
    ],
    "5_incorrect_answers": [
      "{O(F}",
      "{}FF}",
      "nlFF}",
      "cOFFx",
      "{0FFq"
    ]
  },
  {
    "regex": "^require=",
    "refactor_regex": "^(require=)",
    "5_correct_answers": [
      "require=",
      "require=",
      "require=",
      "require=",
      "require="
    ],
    "5_incorrect_answers": [
      "87qMire=",
      "e1quiBe=",
      "M*qu)re=",
      "rpqSire=",
      "\"equIre="
    ]
  },
  {
    "regex": "some prob",
    "refactor_regex": "(some prob)",
    "5_correct_answers": [
      "some prob",
      "some prob",
      "some prob",
      "some prob",
      "some prob"
    ],
    "5_incorrect_answers": [
      "somN prob",
      "-o\\e prZb",
      "sgme /r}b",
      "soUe peob",
      "@omN jrob"
    ]
  },
  {
    "regex": "\\s*(\\S*)\\(",
    "refactor_regex": "[ \\t\\n\\r\\f\\v]*\\S*\\(",
    "5_correct_answers": [
      "(",
      "(",
      "(",
      "(",
      "("
    ],
    "5_incorrect_answers": [
      "9",
      "0",
      "#",
      "{",
      ":"
    ]
  },
  {
    "regex": "\\W(\\$\\.)|(\\.\\$\\.)|(\\$\\()",
    "refactor_regex": "([^a-zA-Z0-9_](\\$\\.)|(\\.\\$\\.)|(\\$\\())",
    "5_correct_answers": [
      "$(",
      ".$.",
      "$(",
      "$(",
      ".$."
    ],
    "5_incorrect_answers": [
      ",(",
      ".$h",
      "$a",
      "d(",
      ".$t"
    ]
  },
  {
    "regex": "(^|.+/)([^/]+)/plugins.py",
    "refactor_regex": "(^|.{1,}/)[^/][^/]*/plugins.py",
    "5_correct_answers": [
      "Y:`yI5[<\\cAa@&[Se &N8/pluginsOpy",
      "I2o)px@46(?W+4TblU'mbt1/pluginsspy",
      "47b$rW[^/plugins_py",
      "Xq&h\\sl[/pluginsypy",
      "Hih@([/OH<y$nA;u zD)dX/plugins7py"
    ],
    "5_incorrect_answers": [
      "Y:`yI5^<\\cAa@&[Se &N8/plugijsOpy",
      "I2o)px@46(?W+4TblU'mb_1/Lluginsspy",
      "47b$rW[^/pl?gins_py",
      "Xq&h\\al[?pZuginsypy",
      "Hih@([/OH<y$nA+u zD)dX/plugi1s7py"
    ]
  },
  {
    "regex": "^[a-z\\d_]*\\(",
    "refactor_regex": "^(_|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|[0-9]){0,}\\(",
    "5_correct_answers": [
      "s6u8ucynlu9aouww(",
      "(",
      "uq4a(",
      "(",
      "2j5hu("
    ],
    "5_incorrect_answers": [
      "sbu8ucynlu9aouww*",
      "'",
      "Aq4a(",
      "K",
      "2j5hM("
    ]
  },
  {
    "regex": "([;,])",
    "refactor_regex": "[,;]",
    "5_correct_answers": [
      ",",
      ";",
      ",",
      ";",
      ";"
    ],
    "5_incorrect_answers": [
      "y",
      "f",
      "}",
      "j",
      "2"
    ]
  },
  {
    "regex": "[\\?&#].*$",
    "refactor_regex": "[?&#].*$",
    "5_correct_answers": [
      "#KH9(D!a[PkZ7y7B?d",
      "&MeT[",
      "#zIz\\fRRb[kwj",
      "#t2)/d[",
      "?f6UEA]\\TWH:,#sy,"
    ],
    "5_incorrect_answers": [
      " KH9(D!a[PkZ7y7B?d",
      "HMeTR",
      "IzIz\\fRNb[nwj",
      ",t2!/d[",
      "8f6UE=]\\TWH:,#sy,"
    ]
  },
  {
    "regex": "^\\./([^_][\\w-]+)/index\\.jsx?$",
    "refactor_regex": "^\\./([^_]([a-zA-Z0-9_]|-)+)(/index)\\.(js)(x|)$",
    "5_correct_answers": [
      "./kUo/index.jsx",
      "./sb9/index.jsx",
      "./dux/index.js",
      "./`Eh/index.jsx",
      "./5a/index.js"
    ],
    "5_incorrect_answers": [
      "./IUo/indexJjsx",
      "./sb9/indFx=jsx",
      "(/dux/index]j]",
      "./vEh/index.j'x",
      "./5a/index)js"
    ]
  },
  {
    "regex": "#{([\\s\\S]+?)}",
    "refactor_regex": "#{[ \\t\\n\\r\\f\\v\\S]+?}",
    "5_correct_answers": [
      "#{ }",
      "#{ }",
      "#{  }",
      "#{ }",
      "#{ }"
    ],
    "5_incorrect_answers": [
      "T9 }",
      "f9 }",
      "#{C q",
      "#K?}",
      "8{/}"
    ]
  },
  {
    "regex": "([A-Z])(\\d+)([A-Z])",
    "refactor_regex": "([A-Z][0-9]{1,}[A-Z])",
    "5_correct_answers": [
      "Z67736797144514679260375T",
      "T066247622812426C",
      "P9290426042579354L",
      "U002263811390505410962390T",
      "Z826360958948232299E"
    ],
    "5_incorrect_answers": [
      "Z67736797144514679;60375T",
      "T066z47622812426C",
      "P9290}26042579354L",
      "U00+26381139050aj10962390T",
      "k82636095894;232299E"
    ]
  },
  {
    "regex": ";?\\s?}$",
    "refactor_regex": ";?\\s{0,1}}$",
    "5_correct_answers": [
      ";}",
      " }",
      "}",
      ";}",
      ";}"
    ],
    "5_incorrect_answers": [
      ";A",
      "5}",
      "?",
      "dn",
      "}}"
    ]
  },
  {
    "regex": "^\\s*\\|\\s*$",
    "refactor_regex": "^( |\\t|\\n|\\r|\\f|\\v)*(\\|)( |\\t|\\n|\\r|\\f|\\v)*$",
    "5_correct_answers": [
      "|",
      "|",
      "|",
      "|",
      "|  "
    ],
    "5_incorrect_answers": [
      "k",
      "$",
      "5",
      "^",
      "|# "
    ]
  },
  {
    "regex": "<!--#\\s*else\\s*-->",
    "refactor_regex": "(<!--#)(\\s+)?(else)(\\s+)?(-->)",
    "5_correct_answers": [
      "<!--#else-->",
      "<!--#else -->",
      "<!--#else -->",
      "<!--# else-->",
      "<!--#else-->"
    ],
    "5_incorrect_answers": [
      "<!--#&lse-CA",
      "<!K-#else --G",
      "<!--#Else H->",
      "<!--#qClsX-->",
      "<!-|#elsa-->"
    ]
  },
  {
    "regex": "([a-zA-Z0-9]+):\\s",
    "refactor_regex": "(a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|0|1|2|3|4|5|6|7|8|9)(a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|0|1|2|3|4|5|6|7|8|9)*:\\s",
    "5_correct_answers": [
      "whJvo8saS3EXz: ",
      "NyB4rNZcjBWpNCCu: ",
      "EzldXZs9vtiMkyreb1SXXB23T: ",
      "gUmOYqG8CtY: ",
      "oLTliXZo7jLJqHNlAbwP7Fmt: "
    ],
    "5_incorrect_answers": [
      "whJvo8sa*@EXz:a",
      "NyB4r`ZcjBWpNCCu: ",
      "Ezl$XZs9vtiMkyreb1SX)B23T:4",
      "gU?OYqG8CtY: ",
      "oLTliXZo7jLJqHNlA,w)7Fmt: "
    ]
  },
  {
    "regex": "EPACKAGEJSON override-bundled",
    "refactor_regex": "(EPACKAGEJSON override-bundled)",
    "5_correct_answers": [
      "EPACKAGEJSON override-bundled",
      "EPACKAGEJSON override-bundled",
      "EPACKAGEJSON override-bundled",
      "EPACKAGEJSON override-bundled",
      "EPACKAGEJSON override-bundled"
    ],
    "5_incorrect_answers": [
      "EPACKAGEJaON overriHe-bundled",
      "EPACfAGEJSvN ovTrride-bundled",
      "EPACKAGEJS_N o=erpide-bundled",
      "EPACKAAEJSON override-bundled",
      "EPACKATEJSON override-bundled"
    ]
  },
  {
    "regex": "@\\?([a-zA-Z0-9_\\.]+)\\s+([^\\s]+)",
    "refactor_regex": "@[?]([a-zA-Z0-9_\\.]+)[ \\t\\n\\r\\f\\v]+([^ \\t\\n\\r\\f\\v]+)",
    "5_correct_answers": [
      "@?Uc6dCb3CLbonb25pGiAlwTlTB   %",
      "@?Ox0rOJfVZx z4K`L(4u.<#Y?",
      "@?Dw5 fGQ`Zsce%6X",
      "@?iodf $2&0)5CMfTv",
      "@?wIQZj i]hG`,gmR._Zr<YKCv?D]\\"
    ],
    "5_incorrect_answers": [
      "@?Uc6dC]3CLbonb25pGiAlwTlTB   %",
      "@?Ox0WOJfVZx$z5K`L(4u.<#Y?",
      "@+Dw5 fGQ`ZZce%6X",
      "@wiodf $2&t)5HMfTv",
      "0?gIQZj i]hG`,gmR._Zr<YKCS?D]\\"
    ]
  },
  {
    "regex": "(name|version|ext)",
    "refactor_regex": "name|version|ext",
    "5_correct_answers": [
      "name",
      "version",
      "name",
      "version",
      "version"
    ],
    "5_incorrect_answers": [
      "dame",
      "versioj",
      "namL",
      "Yersion",
      "ve/si2n"
    ]
  },
  {
    "regex": "/image/\\w{3}/locales/image.bmp",
    "refactor_regex": "(/image/)[a-zA-Z0-9_][a-zA-Z0-9_][a-zA-Z0-9_](/locales/image).(bmp)",
    "5_correct_answers": [
      "/image/SxX/locales/imagepbmp",
      "/image/tTf/locales/image]bmp",
      "/image/tDA/locales/imageObmp",
      "/image/8WC/locales/image9bmp",
      "/image/dMu/locales/image:bmp"
    ],
    "5_incorrect_answers": [
      "/image/SxX/locales^imagepbmp",
      "/8mage/tTf/locales/image]bmp",
      "/image/tDA/loc'les/imageObmp",
      "/imM,e/8WC/locales/image9bmp",
      "/Dmagp/dMu/locales/im$ge:bmp"
    ]
  },
  {
    "regex": "(\\d+).*NATOM$",
    "refactor_regex": "\\d+.*(NATOM)$",
    "5_correct_answers": [
      "69890432NATOM",
      "943680491(HJM\\u1&7^1e?bRNATOM",
      "6950466390445530123718z NATOM",
      "332853458317887249438KRNATOM",
      "5852720110/%eYr[S5B*NZpNATOM"
    ],
    "5_incorrect_answers": [
      "69890432=AT_M",
      "94%6N0491(HJM\\u1&7^1e?bRNATRM",
      "6%504v6390445530123718z NATOO",
      "332853458317887249438KR7ATOM",
      "5852720110/%eYr[S5B*NZpNAT4M"
    ]
  },
  {
    "regex": "&tilde;",
    "refactor_regex": "(&tilde;)",
    "5_correct_answers": [
      "&tilde;",
      "&tilde;",
      "&tilde;",
      "&tilde;",
      "&tilde;"
    ],
    "5_incorrect_answers": [
      "&t3lde;",
      "&ti:de;",
      ",tilde;",
      "ptilde;",
      "&>ilda;"
    ]
  },
  {
    "regex": "(=\"[^\"]+\")\"+",
    "refactor_regex": "(=\")[^\"][^\"]*\"\"+",
    "5_correct_answers": [
      "=\"W$I]d5(4(ayFe;.vSs\"\"",
      "=\" 9\"\"\"\"\"\"\"",
      "=\"r5H+g0oXs2;\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"",
      "=\" 9TUM>ch92mSXH$=u=c\"\"\"\"\"\"\"\"\"",
      "=\"Vda41Wcg\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
    ],
    "5_incorrect_answers": [
      "=\"W$I]d5(4(ayFe;.vSp\"%",
      "=\" 9\"l\"\"\"\"\"",
      "c\"r5H+g0oXs2;\"\"\"\"\"\"\"W\"\"\"\"\"\"\"\"",
      "'\" 9TUM>ch92mSXH$=u=c\"\"\"\"\"\"\"\"\"",
      "=pVda41Wcg\"\"\"\"\"\"\"\"\"\"\"M\"\"\"\"\"\"U"
    ]
  },
  {
    "regex": "unknown tag",
    "refactor_regex": "(unknown tag)",
    "5_correct_answers": [
      "unknown tag",
      "unknown tag",
      "unknown tag",
      "unknown tag",
      "unknown tag"
    ],
    "5_incorrect_answers": [
      "un[nown tag",
      "unk_Hwn thg",
      "#nknown (ag",
      "<nknown Fag",
      "unCnoan tag"
    ]
  },
  {
    "regex": "^READY$",
    "refactor_regex": "^(READY)$",
    "5_correct_answers": [
      "READY",
      "READY",
      "READY",
      "READY",
      "READY"
    ],
    "5_incorrect_answers": [
      "ReAIY",
      "R=A}+",
      "REA&D",
      "RERDY",
      "RE5HY"
    ]
  },
  {
    "regex": "^// See .* for documentation.$",
    "refactor_regex": "^(// See ).*( for documentation).$",
    "5_correct_answers": [
      "// See THugC for documentation@",
      "// See  for documentationr",
      "// See 2KOu\\LVd for documentation<",
      "// See 0Ti for documentationO",
      "// See 6%Rx[ for documentation$"
    ],
    "5_incorrect_answers": [
      "/T See T@ugC for documentation@",
      "/=W+ee  for documentationr",
      "// *ee 2KOu\\LVd for docu.entution<",
      ";/ See)0Ti fo? documentationO",
      "//:See 6%Rx[ for documentation$"
    ]
  },
  {
    "regex": "-test[.]html$",
    "refactor_regex": "(-test)[.](html)$",
    "5_correct_answers": [
      "-test.html",
      "-test.html",
      "-test.html",
      "-test.html",
      "-test.html"
    ],
    "5_incorrect_answers": [
      "-t)st.Wtml",
      "-te&t.html",
      "-tgstbdtml",
      "-test.htm|",
      "-test.htmD"
    ]
  },
  {
    "regex": "[-!\"#$%&'*+,/:;=?@|^~()<>{}[\\]]",
    "refactor_regex": "(-|!|\"|#|\\$|%|&|'|\\*|\\+|,|/|:|;|=|\\?|@|\\||\\^|~|\\(|\\)|<|>|\\{|\\}|\\[|\\])",
    "5_correct_answers": [
      ";",
      ">",
      ">",
      "{",
      "-"
    ],
    "5_incorrect_answers": [
      "w",
      "x",
      ".",
      "3",
      "`"
    ]
  },
  {
    "regex": "(?:android);?[\\s/]+([\\d.]+)?",
    "refactor_regex": "(?:android);?(\\s|/)+((\\d|\\.)+)?",
    "5_correct_answers": [
      "android ",
      "android;/.79",
      "android;/",
      "android;/ ",
      "android//385031"
    ],
    "5_incorrect_answers": [
      "Hn2roid ",
      "anhroid;/.G9",
      "UndroidF/",
      "aHdr_id;r ",
      "aDdroid//385031"
    ]
  },
  {
    "regex": "Oregano ([0-9.]*)",
    "refactor_regex": "Oregano ([\\d.]*)",
    "5_correct_answers": [
      "Oregano 4.8062",
      "Oregano 1",
      "Oregano ..551.3369.",
      "Oregano 71",
      "Oregano 86"
    ],
    "5_incorrect_answers": [
      "Oreganoz4.8562",
      "Oreg\"Io 1",
      "Oregano}.9551.3369.",
      "Or$gano :1",
      "Ore&anoq80"
    ]
  },
  {
    "regex": "\\bpos1$",
    "refactor_regex": "\\b(pos1)$",
    "5_correct_answers": [
      "pos1",
      "pos1",
      "pos1",
      "pos1",
      "pos1"
    ],
    "5_incorrect_answers": [
      "79s1",
      "soS1",
      "PIs1",
      "jos1",
      "`osa"
    ]
  },
  {
    "regex": "Magic",
    "refactor_regex": "(Magic)",
    "5_correct_answers": [
      "Magic",
      "Magic",
      "Magic",
      "Magic",
      "Magic"
    ],
    "5_incorrect_answers": [
      "Vauic",
      "M7ETc",
      "Magi5",
      "<agic",
      "MWgic"
    ]
  },
  {
    "regex": "destination|location",
    "refactor_regex": "(destination|location)",
    "5_correct_answers": [
      "destination",
      "location",
      "destination",
      "location",
      "destination"
    ],
    "5_incorrect_answers": [
      "destinwnJon",
      "l*catiCn",
      "destinati7n",
      "lo-ation",
      "destinatihn"
    ]
  },
  {
    "regex": "iCab/([0-9.]*)",
    "refactor_regex": "iCab/([0123456789.]{0,})",
    "5_correct_answers": [
      "iCab/56637231173519",
      "iCab/97899962914.68.311",
      "iCab/4504",
      "iCab/708903048.4.57129078327",
      "iCab/993"
    ],
    "5_incorrect_answers": [
      "i'r]/56637231173519",
      "iC5b/978999629*4.68. 11",
      "iCa%/4504",
      "iCaM/708903048.4.57129078;27",
      "i`ub/993"
    ]
  },
  {
    "regex": "@import \"(.*)\";",
    "refactor_regex": "(@import \").*(\";)",
    "5_correct_answers": [
      "@import \"`&/g<Sp:Cx,HsG]x@Q:VK\";",
      "@import \"0]\";",
      "@import \"?7C[;35?m6ezz\";",
      "@import \"T.#wSI(6_m\";",
      "@import \"F3_\";"
    ],
    "5_incorrect_answers": [
      "@impor1 \"`&/g<Sp:Cx,HsG]x@L:VK\";",
      "@import \"0]|;",
      "@import \"?7C[;35?m6ezzI;",
      "@import<\"T.#wSI(6_m\";",
      "@impomt \"FG_\";"
    ]
  },
  {
    "regex": "(&|\\?)#",
    "refactor_regex": "[&\\?]#",
    "5_correct_answers": [
      "?#",
      "?#",
      "&#",
      "?#",
      "?#"
    ],
    "5_incorrect_answers": [
      "?h",
      "N#",
      "B#",
      "m#",
      "`#"
    ]
  },
  {
    "regex": "^.*\\s",
    "refactor_regex": "^.*( |\\t|\\n|\\r|\\f|\\v)",
    "5_correct_answers": [
      "wF(G/I'+BVM&GG ",
      "uY,*:rb$K/4tNew')\")78pE ",
      "-Muf+\\=BT1+\":>F+m ",
      "LFT\"PVUFC\\mUNl^OE?@W.7U ",
      "vmh "
    ],
    "5_incorrect_answers": [
      "wFjG/I'ABVM&GG\"",
      "MY,*:Fb$K/4tNew')\")78pEY",
      "-MufU\\=fT1+\":>F+mx",
      "LFT\"PVU(C\\mU^l^OE?@W.7U^",
      "vfh}"
    ]
  },
  {
    "regex": "you don fucked up",
    "refactor_regex": "(you don fucked up)",
    "5_correct_answers": [
      "you don fucked up",
      "you don fucked up",
      "you don fucked up",
      "you don fucked up",
      "you don fucked up"
    ],
    "5_incorrect_answers": [
      "you don fucked #p",
      "yo\" don fucued up",
      "you d'n fucked up",
      "you don}fsuked up",
      "y{u don fuckQd up"
    ]
  },
  {
    "regex": "Author: ([^ ]+) <([^>]+)>",
    "refactor_regex": "(Author: )([^ ]{1,})( <)([^>]{1,})>",
    "5_correct_answers": [
      "Author: /*bP1. <A>",
      "Author: )o9n&F1)o!4mI <mz;lBlR$(>",
      "Author: 3n0FRXB$>M@]< </Rt;>",
      "Author: K=SJ: <)Hd++R>",
      "Author: C@YDMnVR <42B>"
    ],
    "5_incorrect_answers": [
      ">utxor: /*bP1. <A>",
      "Authyr: )l9n&F1)o!4mI <mz;lBlR$(>",
      "Author: 3n0 RXB$>M@]< </Rt;a",
      "Autfor: K=SO: <)Hd++R>",
      "Buthor: C@YDMnVD <42B>"
    ]
  },
  {
    "regex": "division by zero",
    "refactor_regex": "(division by zero)",
    "5_correct_answers": [
      "division by zero",
      "division by zero",
      "division by zero",
      "division by zero",
      "division by zero"
    ],
    "5_incorrect_answers": [
      "divOsion by zero",
      "WivisRonKby zero",
      "divisBon by zeqo",
      "d5vosion by zero",
      "divisiUn by zero"
    ]
  },
  {
    "regex": "^[([/+`-]",
    "refactor_regex": "^(\\(|\\[|/|\\+|`|\\-)",
    "5_correct_answers": [
      "-",
      "(",
      "[",
      "`",
      "`"
    ],
    "5_incorrect_answers": [
      "c",
      "*",
      "r",
      "<",
      ":"
    ]
  },
  {
    "regex": "foxthefox@wysiwis.net",
    "refactor_regex": "(foxthefox@wysiwis).(net)",
    "5_correct_answers": [
      "foxthefox@wysiwisSnet",
      "foxthefox@wysiwisHnet",
      "foxthefox@wysiwis,net",
      "foxthefox@wysiwis9net",
      "foxthefox@wysiwisqnet"
    ],
    "5_incorrect_answers": [
      "foxthefox@w:scwisSnet",
      "foxthqfox@wysiwisHBet",
      "foxthefox@wysiwi),net",
      "foxthefo4@wysiwis9net",
      "foxthefox@wysiwisqnct"
    ]
  },
  {
    "regex": "\\.babylon$",
    "refactor_regex": "\\.(babylon)$",
    "5_correct_answers": [
      ".babylon",
      ".babylon",
      ".babylon",
      ".babylon",
      ".babylon"
    ],
    "5_incorrect_answers": [
      ".babylkn",
      ".labyoon",
      ".babyuon",
      ".babylo)",
      ".b\\byYon"
    ]
  },
  {
    "regex": "\\(\\{\\{bbox\\}\\}\\)",
    "refactor_regex": "\\(\\{\\{(bbox)\\}\\}\\)",
    "5_correct_answers": [
      "({{bbox}})",
      "({{bbox}})",
      "({{bbox}})",
      "({{bbox}})",
      "({{bbox}})"
    ],
    "5_incorrect_answers": [
      "({{bbox'})",
      "(!{bbox}})",
      "({{bbot}})",
      "({{Hbox}})",
      "O{{bboP}})"
    ]
  },
  {
    "regex": "\\bAll\\sround\\s",
    "refactor_regex": "\\b(All)\\s(round)\\s",
    "5_correct_answers": [
      "All round ",
      "All round ",
      "All round ",
      "All round ",
      "All round "
    ],
    "5_incorrect_answers": [
      "AlR dound ",
      "vll rvund ",
      "All roun_ ",
      "All ro-nd_",
      "All r/unH*"
    ]
  },
  {
    "regex": "(?:meta|win|cmd|command)\\s*\\+\\s*",
    "refactor_regex": "(meta|win|cmd|command)\\s{0,}\\+\\s{0,}",
    "5_correct_answers": [
      "meta+",
      "command+",
      "cmd +",
      "cmd+",
      "win +"
    ],
    "5_incorrect_answers": [
      "Ze_a+",
      "comJxLd+",
      "ccd~+",
      "cmH+",
      "tin m"
    ]
  },
  {
    "regex": "zoo|gra",
    "refactor_regex": "(zoo|gra)",
    "5_correct_answers": [
      "gra",
      "gra",
      "gra",
      "gra",
      "zoo"
    ],
    "5_incorrect_answers": [
      "pra",
      "g_a",
      "gDa",
      "gr\"",
      "zho"
    ]
  },
  {
    "regex": "Timed out .* waiting for url",
    "refactor_regex": "(Timed out ).*( waiting for url)",
    "5_correct_answers": [
      "Timed out m3'J waiting for url",
      "Timed out j waiting for url",
      "Timed out &5d waiting for url",
      "Timed out  waiting for url",
      "Timed out  lK waiting for url"
    ],
    "5_incorrect_answers": [
      "Timed oKt m3'Jvwaiting for url",
      "Timed out j3w1iting for url",
      "Timed out &5d wai,inU for url",
      "Timed out  wai;ing fnr url",
      "Timed out  lK waiting fqr url"
    ]
  },
  {
    "regex": "q\\.",
    "refactor_regex": "q(\\.)",
    "5_correct_answers": [
      "q.",
      "q.",
      "q.",
      "q.",
      "q."
    ],
    "5_incorrect_answers": [
      "*.",
      "/.",
      "qH",
      "y.",
      "qQ"
    ]
  },
  {
    "regex": "\\+?1[0-9]{3}[0-9a-z]{3}",
    "refactor_regex": "(\\+){0,1}1(0|1|2|3|4|5|6|7|8|9){3}(0|1|2|3|4|5|6|7|8|9|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z){3}",
    "5_correct_answers": [
      "1980rka",
      "1568zf0",
      "1884l2w",
      "11523hd",
      "14181oo"
    ],
    "5_incorrect_answers": [
      "1980|ka",
      "15CZzf0",
      ";884,2v",
      "1K5D3hd",
      "F4181oD"
    ]
  },
  {
    "regex": "token\\.keyId must be a string",
    "refactor_regex": "token[.]keyId must be a string",
    "5_correct_answers": [
      "token.keyId must be a string",
      "token.keyId must be a string",
      "token.keyId must be a string",
      "token.keyId must be a string",
      "token.keyId must be a string"
    ],
    "5_incorrect_answers": [
      "token.keyIdpm4st be a string",
      "token.k{yId must be a string",
      "{oaen.keyId must be a strin#",
      ")oken.keyId must be a string",
      "token.k}yId must be a string"
    ]
  },
  {
    "regex": "^SKS",
    "refactor_regex": "^(SKS)",
    "5_correct_answers": [
      "SKS",
      "SKS",
      "SKS",
      "SKS",
      "SKS"
    ],
    "5_incorrect_answers": [
      "?KS",
      "NKS",
      "JKv",
      "*KU",
      "CKS"
    ]
  },
  {
    "regex": "src=\"(.*?)\"",
    "refactor_regex": "(src=\").*?\"",
    "5_correct_answers": [
      "src=\"uJQl-H!L(Naw[TuUzHvEHZ&\"",
      "src=\"wc*gjcN\"",
      "src=\"E3S76\"",
      "src=\"UF\"\"",
      "src=\"-nB'v#=A>d&<5n;717a^\""
    ],
    "5_incorrect_answers": [
      "sr(*\"uJQl-H!L(Naw[TuUzHrEHZ&\"",
      "src=\"wc*g6cNb",
      "srcSDE3S76\"",
      "src=~UFB\"",
      "sru=\"-nB'v#=A>d&<5n;717a^\""
    ]
  },
  {
    "regex": "a|e|i|n",
    "refactor_regex": "[aein]",
    "5_correct_answers": [
      "a",
      "a",
      "n",
      "e",
      "i"
    ],
    "5_incorrect_answers": [
      "I",
      "g",
      "Y",
      "H",
      "$"
    ]
  },
  {
    "regex": "\\<html\\>",
    "refactor_regex": "\\<(html)\\>",
    "5_correct_answers": [
      "<html>",
      "<html>",
      "<html>",
      "<html>",
      "<html>"
    ],
    "5_incorrect_answers": [
      "<ht>l>",
      "<htmx>",
      "<htm:>",
      "<hcmlx",
      "Dh;ml>"
    ]
  },
  {
    "regex": "/miplocal/dist/mip\\.js",
    "refactor_regex": "(/miplocal/dist/mip)((\\.))(js)",
    "5_correct_answers": [
      "/miplocal/dist/mip.js",
      "/miplocal/dist/mip.js",
      "/miplocal/dist/mip.js",
      "/miplocal/dist/mip.js",
      "/miplocal/dist/mip.js"
    ],
    "5_incorrect_answers": [
      "/miplocab/dist/mip.js",
      "/miplocal/dist/Qi7.js",
      "/miplocal/dist/mip.Es",
      "/miplocal/disnfmip.js",
      "/miplocal/dist/mipcjs"
    ]
  },
  {
    "regex": "<td>",
    "refactor_regex": "(<td>)",
    "5_correct_answers": [
      "<td>",
      "<td>",
      "<td>",
      "<td>",
      "<td>"
    ],
    "5_incorrect_answers": [
      "<tI:",
      "3-dZ",
      "Ztd>",
      "0t5>",
      "<tf>"
    ]
  },
  {
    "regex": "\"karma\"",
    "refactor_regex": "(\"karma\")",
    "5_correct_answers": [
      "\"karma\"",
      "\"karma\"",
      "\"karma\"",
      "\"karma\"",
      "\"karma\""
    ],
    "5_incorrect_answers": [
      "\"Xa:ma\"",
      "fkarma\"",
      "\"kaTma\"",
      "\"k)D6a\"",
      "\"kSrma\""
    ]
  },
  {
    "regex": "\\+CMGS:\\s*(\\d+)",
    "refactor_regex": "\\+CMGS:[ \\t\\n\\r\\f\\v]*([0-9]{1,})",
    "5_correct_answers": [
      "+CMGS:1821228588510534216779367",
      "+CMGS:7848894747350",
      "+CMGS:276374144607469679",
      "+CMGS:9828905",
      "+CMGS: 1154239402181321121"
    ],
    "5_incorrect_answers": [
      "+CMGSu)8212285885105342167793w7",
      "+CMGS:h848894c47350",
      "+CMGSF27k374144607469679",
      "+CMJS:9G289O5",
      "+CMGS: |15423940218132>121"
    ]
  },
  {
    "regex": "^execute immediately$",
    "refactor_regex": "^(execute immediately)$",
    "5_correct_answers": [
      "execute immediately",
      "execute immediately",
      "execute immediately",
      "execute immediately",
      "execute immediately"
    ],
    "5_incorrect_answers": [
      "e>eiutI immediately",
      "execute ixmediately",
      "exlcute i%meUiately",
      "executejimmediately",
      "sxEcPte immediately"
    ]
  },
  {
    "regex": "couldn't",
    "refactor_regex": "(couldn't)",
    "5_correct_answers": [
      "couldn't",
      "couldn't",
      "couldn't",
      "couldn't",
      "couldn't"
    ],
    "5_incorrect_answers": [
      "could{'t",
      "LZuldn'h",
      "Vou$dE't",
      "cauldn't",
      "couldR't"
    ]
  },
  {
    "regex": "([\\s])+",
    "refactor_regex": "((\\s))+",
    "5_correct_answers": [
      "  ",
      " ",
      " ",
      " ",
      " "
    ],
    "5_incorrect_answers": [
      "[\"",
      "t",
      "N",
      "#",
      "p"
    ]
  },
  {
    "regex": "(\\W|^|[\"])define(\\W|[\"]|$)",
    "refactor_regex": "([^a-zA-Z0-9_]|^|\")define([^a-zA-Z0-9_]|\"|$)",
    "5_correct_answers": [
      "define",
      "define\"",
      "define",
      "\"define",
      "\"define"
    ],
    "5_incorrect_answers": [
      "defi2e",
      "dVgined",
      "d%feni",
      "\"defi(e",
      "\"Tefiye"
    ]
  },
  {
    "regex": "[+-]?[\\d]+(\\.[\\d]+)?",
    "refactor_regex": "[+-]?[\\d][\\d]*(\\.[\\d][\\d]*){0,1}",
    "5_correct_answers": [
      "3712422957",
      "61646188858",
      "-556974981309.3305744671",
      "+338",
      "+0667857089066.6229"
    ],
    "5_incorrect_answers": [
      "=71O422957",
      "|164618Y858",
      "l55697W981309.3305744671",
      ";o3z",
      "p0667857089%6M.6229"
    ]
  },
  {
    "regex": "</body\\b",
    "refactor_regex": "(</body)\\b",
    "5_correct_answers": [
      "</body",
      "</body",
      "</body",
      "</body",
      "</body"
    ],
    "5_incorrect_answers": [
      "</bo(y",
      "P/Tody",
      ")/body",
      "1/bfdy",
      "b/body"
    ]
  },
  {
    "regex": "3 specs, 1 failure, 1 pending spec",
    "refactor_regex": "(3 specs, 1 failure, 1 pending spec)",
    "5_correct_answers": [
      "3 specs, 1 failure, 1 pending spec",
      "3 specs, 1 failure, 1 pending spec",
      "3 specs, 1 failure, 1 pending spec",
      "3 specs, 1 failure, 1 pending spec",
      "3 specs, 1 failure, 1 pending spec"
    ],
    "5_incorrect_answers": [
      "3 specs& 1 failure, 1]pending spec",
      "3 specs, 1 failure, 1 pedd&ng spec",
      "3 specs, 1 failnre, 1 pending spec",
      "3 specs, 1 failure, 1 Xending spec",
      "~ specs, 1 failure, 1 pending spec"
    ]
  },
  {
    "regex": "^y(es)?",
    "refactor_regex": "^y((es)){0,1}",
    "5_correct_answers": [
      "y",
      "yes",
      "yes",
      "y",
      "yes"
    ],
    "5_incorrect_answers": [
      "f",
      "Ber",
      "^es",
      "u",
      "|Ps"
    ]
  },
  {
    "regex": "https",
    "refactor_regex": "(https)",
    "5_correct_answers": [
      "https",
      "https",
      "https",
      "https",
      "https"
    ],
    "5_incorrect_answers": [
      "at9ps",
      "hBt:3",
      "3[tps",
      "6t\\As",
      "gttps"
    ]
  },
  {
    "regex": "([\\s\\n]*)(<.+>)[\\s\\n]*",
    "refactor_regex": "( |\\t|\\n|\\r|\\f|\\v|\\n)*<.+>( |\\t|\\n|\\r|\\f|\\v|\\n)*",
    "5_correct_answers": [
      "<ax&`V\"`0>",
      "<[t-(9]/s^&`;k^4zYtn->",
      "<q>%p0>",
      "<M>",
      "<hMtn$5k!UeJYGm]1j6]sMl7H$>"
    ],
    "5_incorrect_answers": [
      "<ax&`V\"`0J",
      "(,t-(9]/s^&`;k^4zYtn->",
      "kq>%_M>",
      "5M>",
      "GhMtn$5k!UeJYGm]1I6]sMl7z$>"
    ]
  },
  {
    "regex": "([.()])",
    "refactor_regex": "[.()]",
    "5_correct_answers": [
      "(",
      "(",
      ")",
      "(",
      ")"
    ],
    "5_incorrect_answers": [
      "R",
      "P",
      "6",
      "L",
      "2"
    ]
  },
  {
    "regex": "^\\s+\"(.+)\"\\s([^\"]+)$",
    "refactor_regex": "^\\s+\".{1,}\"\\s[^\"]{1,}$",
    "5_correct_answers": [
      " \"Ds)\" '-SXSdm^'Pp5)nQ)sW/AB$Zt ",
      "  \"j CrP&T,aEM\"cj?N\" /ef:3:0`",
      " \"aT>h*j328\" anM+b<jogx+`IQKK9NE",
      " \"kqCUxThK\" ZE`Qng-:A]YB]jkb]p",
      " \"+eH!c2t_xt$X\" lCWP XCRZL`i;uB"
    ],
    "5_incorrect_answers": [
      " \"Ds)' '-SXSdm^'Pp5)nQ)sW/tBcZt ",
      "  }j CrP&T,aEM\"cj?N\" /ef:3:0`",
      " \"aT>h*j328\"\\anM+b<jogx+`IQKK9N+",
      "W\"kqCUxThH\" ZE`Qng-:A]YB]jkB]p",
      "f\"+eH!c2t_xt$X\" lCWP XCRZL`i;uB"
    ]
  },
  {
    "regex": "([^\\?&=]+)=?([^&]*)",
    "refactor_regex": "([^\\?&=]+)=?([^&]{0,})",
    "5_correct_answers": [
      "XtQ+j$LE`TB!:8I!3UO`GUB",
      "u(VH]BA_ZzRHysH3e=)<'M$I!icq=8?bH",
      "9RdhMo=",
      "z\\T``cNxhjxs]",
      "fnFw=T_sJv=t2A5ct>e"
    ],
    "5_incorrect_answers": [
      "&tQbj$LE`TB!:8I!3UO`GUB",
      "?(VH]BA_ZzRHysH3e=)<.M$I! cq=8?bH",
      "&R!h5o=",
      "?\\T`lcNZhjxs]",
      "&nFw=TSsJv=t]A5ct>e"
    ]
  },
  {
    "regex": "(\\[(.*?)\\]|[0-9a-zA-Z_$]+)",
    "refactor_regex": "(\\[(.*?)\\]|[0-9a-zA-Z_$]{1,})",
    "5_correct_answers": [
      "zhE6yTGvSa77kaqjqen",
      "cR",
      "[uw,3Heq90<oG^O&O>u'U/ty&]",
      "[O'h`a.jY_XnI*S]",
      "[k0\\&rAmikJp. *]"
    ],
    "5_incorrect_answers": [
      "()E6yTGvSa77kaqjqen",
      "{R",
      "[uw,3Heq90<o+^O&O>u'U/ty&i",
      "[Ozh`a.jY_XnV*SK",
      "[k0\\&rAmikJp. *~"
    ]
  },
  {
    "regex": "no branches found",
    "refactor_regex": "(no branches found)",
    "5_correct_answers": [
      "no branches found",
      "no branches found",
      "no branches found",
      "no branches found",
      "no branches found"
    ],
    "5_incorrect_answers": [
      "nM branche  found",
      "no U#anches found",
      "no9branchei found",
      "Ho b3anches found",
      "no branchis found"
    ]
  },
  {
    "regex": "\\<exclamation\\>",
    "refactor_regex": "\\<(exclamation)\\>",
    "5_correct_answers": [
      "<exclamation>",
      "<exclamation>",
      "<exclamation>",
      "<exclamation>",
      "<exclamation>"
    ],
    "5_incorrect_answers": [
      "<exclamat0on>",
      "<exclLmation>",
      "<excl:]at7on>",
      "<ekcl-mVtion>",
      "<exclamationk"
    ]
  },
  {
    "regex": "other-url",
    "refactor_regex": "(other-url)",
    "5_correct_answers": [
      "other-url",
      "other-url",
      "other-url",
      "other-url",
      "other-url"
    ],
    "5_incorrect_answers": [
      "Ather-SrS",
      "oWher-Rrp",
      "othe6-url",
      "oQher-ur!",
      "otherJurl"
    ]
  },
  {
    "regex": "(38|40|27|32|13|46|8)",
    "refactor_regex": "((38)|(40)|(27)|(32)|(13)|(46)|8)",
    "5_correct_answers": [
      "46",
      "8",
      "27",
      "38",
      "38"
    ],
    "5_incorrect_answers": [
      "4c",
      "{",
      "21",
      "m8",
      "N8"
    ]
  },
  {
    "regex": "^/([^\\s]+?)-([^\\s]+?)$",
    "refactor_regex": "^/[^ \\t\\n\\r\\f\\v]{1,}?-[^ \\t\\n\\r\\f\\v]{1,}?$",
    "5_correct_answers": [
      "/rb-dm",
      "/=L*4TI>/KAg^pF&1JdX.x-!(edbtMb",
      "/,i9E(N-;UPAcZBnS\"f`iSeW0tp7J",
      "/2C-U",
      "/0dBjB]-N4W:J=Hfx6@$Q"
    ],
    "5_incorrect_answers": [
      "\\rbzdW",
      "~AL*4TI>/KAg^pF&1JdX.x-!(edbtMb",
      "/, 9E(N-;UPUcZBnS\"f`iSeW0tp7J",
      "42C-U",
      "/0dBjB]- 4W:J=Hox6@$k"
    ]
  },
  {
    "regex": "__o\\[(\\d+)\\]",
    "refactor_regex": "(__o)\\[[0-9]+\\]",
    "5_correct_answers": [
      "__o[128483139327341107972]",
      "__o[65828]",
      "__o[9502]",
      "__o[02170804213]",
      "__o[1402912926178955956499321]"
    ],
    "5_incorrect_answers": [
      "__o[12848313S327341107972]",
      "__o[]5828]",
      "__oL95w2]",
      "__o[02C70M0421~]",
      "__o[14029129261W8955956499321]"
    ]
  },
  {
    "regex": "\\bLa\\b",
    "refactor_regex": "\\b(La)\\b",
    "5_correct_answers": [
      "La",
      "La",
      "La",
      "La",
      "La"
    ],
    "5_incorrect_answers": [
      "`l",
      "+a",
      "Li",
      "}a",
      "Ll"
    ]
  },
  {
    "regex": "embed\\.php",
    "refactor_regex": "(embed[.])(php)",
    "5_correct_answers": [
      "embed.php",
      "embed.php",
      "embed.php",
      "embed.php",
      "embed.php"
    ],
    "5_incorrect_answers": [
      "<mEed.phd",
      "emTed\\php",
      "=mbed.php",
      "emLed{ph.",
      "3mbed.p1p"
    ]
  },
  {
    "regex": "^E\\d{3}:\\s*(\\d+),(\\d+):(.*)$",
    "refactor_regex": "^E\\d{3}:(\\s+)?(\\d{1,}),(\\d{1,}):(.*)$",
    "5_correct_answers": [
      "E797:2515,6824:Q",
      "E907:000,56945:80+O^ &h$\\j:o^",
      "E913: 13000495870066,26398209:",
      "E213:822423307,8387567669921:#WLb",
      "E102:80073644759963,8360758556:"
    ],
    "5_incorrect_answers": [
      "E797:251&,68JA:Q",
      "E90_:000,56945:80+O^ &h$\\j:`^",
      "E913: 1300049587^066,2=398209:",
      "E2q3:822423307,8387567669921:(WLb",
      "E102:80\\73644759963,836075855y:"
    ]
  },
  {
    "regex": "^(9)",
    "refactor_regex": "^9",
    "5_correct_answers": [
      "9",
      "9",
      "9",
      "9",
      "9"
    ],
    "5_incorrect_answers": [
      "-",
      "s",
      "c",
      "t",
      "k"
    ]
  },
  {
    "regex": "myparam",
    "refactor_regex": "(myparam)",
    "5_correct_answers": [
      "myparam",
      "myparam",
      "myparam",
      "myparam",
      "myparam"
    ],
    "5_incorrect_answers": [
      "Typaram",
      "myparTm",
      "1yparam",
      "myparap",
      "mypjram"
    ]
  },
  {
    "regex": "^/source/",
    "refactor_regex": "^(/source/)",
    "5_correct_answers": [
      "/source/",
      "/source/",
      "/source/",
      "/source/",
      "/source/"
    ],
    "5_incorrect_answers": [
      "/sour*e`",
      "/sourceF",
      "/sourcvr",
      "/sourc\"/",
      "/soubce/"
    ]
  },
  {
    "regex": "(\\.f\\d+)",
    "refactor_regex": "\\.f\\d{1,}",
    "5_correct_answers": [
      ".f950992",
      ".f501520216732669374",
      ".f1885047131791666096055",
      ".f0745143000262793",
      ".f6899963410512822500579"
    ],
    "5_incorrect_answers": [
      ".=950992",
      ".fE015202?67326693`4",
      ".fz88504-131791666096055",
      ".f?74514300026279,",
      ".b6899963410512822+00579"
    ]
  },
  {
    "regex": "\\d+ tests? from ([a-zA-Z_])",
    "refactor_regex": "\\d{1,} tests? from ([a-zA-Z_])",
    "5_correct_answers": [
      "89178648077632056 tests from U",
      "1178645863098 test from E",
      "07634372471927 test from t",
      "855277062003524 tests from J",
      "222690361 test from e"
    ],
    "5_incorrect_answers": [
      "8R1786i8077632056 tests from U",
      "117864U863098 testKfrom E",
      "Q7l34372471t27 test from t",
      "855277062003|24dtests from J",
      ",22690K61 test from I"
    ]
  },
  {
    "regex": "<span[^>]+ng-show",
    "refactor_regex": "<span[^>]{1,}ng-show",
    "5_correct_answers": [
      "<span=J22MCtYcng-show",
      "<span-Wm:)kOKZZhwLk[^#ng-show",
      "<span6'-dg2(Y$ng-show",
      "<span**``tR58jD[?1ng-show",
      "<span8r\"NE.D;8$fDf#z7\\LuMng-show"
    ],
    "5_incorrect_answers": [
      "<spagOJ22MCtYcng-show",
      "<span-Wm:)kOKDZhwLk=^#ng4show",
      "<spaM6'-dg2( $ng-show",
      "<sp(W**``tR58jD[-1ng-show",
      "<span8r\"NE.D;8$NDf#X7\\LuMng-:how"
    ]
  },
  {
    "regex": "([,:;.!?\"\\)])",
    "refactor_regex": "(,|:|;|\\.|!|\\?|\"|\\))",
    "5_correct_answers": [
      "?",
      ".",
      "\"",
      ",",
      "!"
    ],
    "5_incorrect_answers": [
      "0",
      "B",
      "b",
      "n",
      "5"
    ]
  },
  {
    "regex": "\\.(js|vue)",
    "refactor_regex": "(\\.)(js|vue)",
    "5_correct_answers": [
      ".js",
      ".js",
      ".vue",
      ".vue",
      ".js"
    ],
    "5_incorrect_answers": [
      "fv-",
      "aj<",
      "ELuX",
      ".Nue",
      "%\"s"
    ]
  },
  {
    "regex": "http://society6\\.com",
    "refactor_regex": "(http://society6\\.com)",
    "5_correct_answers": [
      "http://society6.com",
      "http://society6.com",
      "http://society6.com",
      "http://society6.com",
      "http://society6.com"
    ],
    "5_incorrect_answers": [
      "http://sucietN6.com",
      "http://soci|ty6.com",
      "ht8p://soci/ty6.cCm",
      "http://society6.c9m",
      "http://societ?6.c\"m"
    ]
  },
  {
    "regex": "(.*\\\\node_modules\\\\)([^\\\\]*)\\\\.*",
    "refactor_regex": ".*\\\\(node_modules)\\\\[^\\\\]{0,}\\\\.{0,}",
    "5_correct_answers": [
      "\\node_modules\\u$WJ``\\d'E\"EPEf",
      "y*`i32)@ m(1fz\\node_modules\\N#<JG\\",
      "Pq\\node_modules\\eO\\]1s3Z-H\\dGo+)tL",
      "*5N,Y\\node_modules\\R\"7 s^S/-ixF]\\-",
      "P<Adx\\node_modules\\+ChA &gENH\\I2"
    ],
    "5_incorrect_answers": [
      "\\node*modules\\u$WJ``[d'E\"EP'f",
      "y*`Q32)@ m(1fz\\vode_modul(s\\N#<JG\\",
      "Pq\\node1modules\\SO\\]1s3Z-H\\dGo+)tL",
      "*5N,(\\nod]_modules\\R\"7 s^S/-ixF]\\-",
      "P<Adx\\node_modules\\+ChAK&gENHsI2"
    ]
  },
  {
    "regex": "Invalid state",
    "refactor_regex": "(Invalid state)",
    "5_correct_answers": [
      "Invalid state",
      "Invalid state",
      "Invalid state",
      "Invalid state",
      "Invalid state"
    ],
    "5_incorrect_answers": [
      "Invalid statU",
      "Invalid sc $e",
      "Invalzd statp",
      "InxNlid 4tate",
      "Invabid state"
    ]
  },
  {
    "regex": "^(?:IGNORE\\b)",
    "refactor_regex": "^(IGNORE)\\b",
    "5_correct_answers": [
      "IGNORE",
      "IGNORE",
      "IGNORE",
      "IGNORE",
      "IGNORE"
    ],
    "5_incorrect_answers": [
      "IGNO*E",
      "IGNsR_",
      "IjNORE",
      "IGNORS",
      "|GNjRE"
    ]
  },
  {
    "regex": "[(){}\\[\\]|.,:;`]",
    "refactor_regex": "[(){}[\\]|.,:;`]",
    "5_correct_answers": [
      "`",
      ";",
      "[",
      ")",
      "`"
    ],
    "5_incorrect_answers": [
      "+",
      "t",
      "@",
      "\\",
      "E"
    ]
  },
  {
    "regex": "\\.keep",
    "refactor_regex": "((\\.))(keep)",
    "5_correct_answers": [
      ".keep",
      ".keep",
      ".keep",
      ".keep",
      ".keep"
    ],
    "5_incorrect_answers": [
      ".keeP",
      ".ke9r",
      ".ke'p",
      ".keeo",
      ".AeK<"
    ]
  },
  {
    "regex": "\\bprocess\\.env\\b",
    "refactor_regex": "\\b(process)\\.(env)\\b",
    "5_correct_answers": [
      "process.env",
      "process.env",
      "process.env",
      "process.env",
      "process.env"
    ],
    "5_incorrect_answers": [
      "pr0cess.env",
      "proless.env",
      "prkcesR.env",
      "process.e0v",
      "zrocessbenv"
    ]
  },
  {
    "regex": "\\[Rip by (.*)\\]",
    "refactor_regex": "\\[(Rip by ).*\\]",
    "5_correct_answers": [
      "[Rip by A4kCOUitX&x%]",
      "[Rip by \"]",
      "[Rip by G'TgY\"cE'?pE_U]",
      "[Rip by BB/]",
      "[Rip by g=5e?DYfij[o.YhDV!J]"
    ],
    "5_incorrect_answers": [
      "[Rif by A4kCOUitX&x+]",
      "[Rjp b$ \"]",
      "[RiF by .'wgY\"cE'?pE_U]",
      "[Rip ti BB/]",
      "[RipSby g=5e?DYfij[o.YhDZ!J]"
    ]
  },
  {
    "regex": "\\[(.*)\\]\\(\\)",
    "refactor_regex": "\\[.*\\]\\(\\)",
    "5_correct_answers": [
      "[Kj;p2k\"x7*yh6Wvdrv`6A&w+]()",
      "[4v?(4w4\\I\\yf(O2xq\"\\Nm+xa]()",
      "[1S+w^1qXnVXdRR,UB-L 3=y2]()",
      "[]()",
      "[3:#2+Abry&F^]()"
    ],
    "5_incorrect_answers": [
      "[Kj;p2k\"x7Iyh6Wvdrv`66&w+](s",
      "*4v?(4w4\\I\\y@(O2cq\"\\Nm+xa]()",
      "51S+w^1qXnVXdRR,UB-LJ3=y2o()",
      "j](_",
      "[3:#2fLbry&F^](u"
    ]
  },
  {
    "regex": "\\b\\w\\b",
    "refactor_regex": "\\b[\\dA-Z_a-z]\\b",
    "5_correct_answers": [
      "u",
      "4",
      "P",
      "G",
      "5"
    ],
    "5_incorrect_answers": [
      ">",
      ":",
      "\\",
      "]",
      "!"
    ]
  },
  {
    "regex": "@OPTION_LABEL",
    "refactor_regex": "(@OPTION_LABEL)",
    "5_correct_answers": [
      "@OPTION_LABEL",
      "@OPTION_LABEL",
      "@OPTION_LABEL",
      "@OPTION_LABEL",
      "@OPTION_LABEL"
    ],
    "5_incorrect_answers": [
      "@OPTION_LAXqL",
      "@OPTIBN_LABEL",
      "@|PIION_LABEL",
      "@OPLION_LABEL",
      "@OkFIO$_LABEL"
    ]
  },
  {
    "regex": "\\$\\{[\\S]*\\}",
    "refactor_regex": "\\$\\{([^ \\t\\n\\r\\f\\v])*\\}",
    "5_correct_answers": [
      "${}",
      "${}",
      "${}",
      "${}",
      "${}"
    ],
    "5_incorrect_answers": [
      "~{}",
      ">{}",
      "${J",
      "$J}",
      "N{8"
    ]
  },
  {
    "regex": "\\[2J",
    "refactor_regex": "\\[(2J)",
    "5_correct_answers": [
      "[2J",
      "[2J",
      "[2J",
      "[2J",
      "[2J"
    ],
    "5_incorrect_answers": [
      "=29",
      "h8J",
      "N-)",
      "[u%",
      "[$5"
    ]
  },
  {
    "regex": "a\\\\x3d(-?\\d+);",
    "refactor_regex": "a\\\\x3d(-?[0-9]+);",
    "5_correct_answers": [
      "a\\x3d-055135670291;",
      "a\\x3d-83166545;",
      "a\\x3d843;",
      "a\\x3d-2232865713212608981069066;",
      "a\\x3d-30942933;"
    ],
    "5_incorrect_answers": [
      "E\\x3d-055135670291;",
      "a\\x3d-83&66545;",
      "a9xn(843;",
      "a\\x3d-2232865713/12i089810!9066;",
      "a\\x3d-309429T3t"
    ]
  },
  {
    "regex": ".+:\\sbound\\s",
    "refactor_regex": ".{1,}:[ \\t\\n\\r\\f\\v]bound[ \\t\\n\\r\\f\\v]",
    "5_correct_answers": [
      "<V(3MjzDF7!;: bound ",
      "hd6f#-q: bound ",
      "zW5\\IZj$x: bound ",
      "uEi`7Ak: bound ",
      "5zNv>?Wn'1y\\TbfWhOi.: bound "
    ],
    "5_incorrect_answers": [
      "<V(3MjzDF7!cb bound ",
      "hlef#-q:bbound ",
      "zW5\\IZj$xk bourd ",
      "uEi`7Wk] bound ",
      "5z9v>?Wn'1y\\TbfWhOi.: b?.nd "
    ]
  },
  {
    "regex": "[^\\._a-zA-Z0-9-]",
    "refactor_regex": "[^\\._a-zA-Z\\d-]",
    "5_correct_answers": [
      "@",
      "'",
      "\\",
      "^",
      " "
    ],
    "5_incorrect_answers": [
      "4",
      "w",
      "S",
      "E",
      "O"
    ]
  },
  {
    "regex": "\\s*debugger;\\s*",
    "refactor_regex": "[ \\t\\n\\r\\f\\v]{0,}debugger;[ \\t\\n\\r\\f\\v]{0,}",
    "5_correct_answers": [
      " debugger;",
      "debugger;",
      "debugger; ",
      "debugger;",
      "debugger; "
    ],
    "5_incorrect_answers": [
      " i3buggerh",
      "deb)gger;",
      "dh{u3ger; ",
      "debujzer;",
      "dibugger; "
    ]
  },
  {
    "regex": "<%= @(.*?) %>",
    "refactor_regex": "(<%= @).*?( %>)",
    "5_correct_answers": [
      "<%= @?MT)$1h5K]# %>",
      "<%= @2+oGtA5jf+ %>",
      "<%= @%)%ea %>",
      "<%= @jy %>",
      "<%= @.+4M1&\\T_(?1 %>"
    ],
    "5_incorrect_answers": [
      "<%=[@?MT)$1h5K]# ]>",
      "<%= @2+xGtA5jf+fq>",
      "/%= ,%)%ea %>",
      "<%= @jy\\#>",
      "<G= @.+4M1V\\T_(?1 %>"
    ]
  },
  {
    "regex": "&Uuml;",
    "refactor_regex": "(&Uuml;)",
    "5_correct_answers": [
      "&Uuml;",
      "&Uuml;",
      "&Uuml;",
      "&Uuml;",
      "&Uuml;"
    ],
    "5_incorrect_answers": [
      "&U+ml;",
      "&Uu5l;",
      "AUum!;",
      "fUuJg;",
      "&Uumll"
    ]
  },
  {
    "regex": "\\d* failing",
    "refactor_regex": "\\d*( failing)",
    "5_correct_answers": [
      "2854106008 failing",
      "9029322178 failing",
      " failing",
      "58349 failing",
      "06841015903118690207515 failing"
    ],
    "5_incorrect_answers": [
      "2854106008 facl(Gg",
      "9029322178Rfwiling",
      " f)i(in4",
      ">8349 failing",
      "068410159031186902075A5 failinu"
    ]
  },
  {
    "regex": "&([^;]+);",
    "refactor_regex": "&[^;]+;",
    "5_correct_answers": [
      "&?<!)4e?K;",
      "&qz^u-for16yh^A_<C9*@%&;",
      "&BO2 $4G;",
      "&ux3gPiyG>!`WDN>d?%^Ok;",
      "&xPI@31;"
    ],
    "5_incorrect_answers": [
      "&?<!)4e?KP",
      "&qz^R-for16yh^A_<`9*@%&Z",
      ".BO2 $45;",
      "zux3gPiyG>!`1DN>d?%^O@;",
      "lxPI@31;"
    ]
  },
  {
    "regex": "^---",
    "refactor_regex": "^-{3}",
    "5_correct_answers": [
      "---",
      "---",
      "---",
      "---",
      "---"
    ],
    "5_incorrect_answers": [
      "-8i",
      "a`-",
      "-#-",
      ":--",
      "-S-"
    ]
  },
  {
    "regex": "^ProcessingInstruction-",
    "refactor_regex": "^(ProcessingInstruction-)",
    "5_correct_answers": [
      "ProcessingInstruction-",
      "ProcessingInstruction-",
      "ProcessingInstruction-",
      "ProcessingInstruction-",
      "ProcessingInstruction-"
    ],
    "5_incorrect_answers": [
      "ProcessingIlstructioH-",
      "Processi/gInstr_ctOon-",
      "ProcessingIcstruction-",
      "ProcessingInstructiLn-",
      "ArocesPin(Instruction-"
    ]
  },
  {
    "regex": "^v0\\.(10|[0-9])\\.",
    "refactor_regex": "^v0\\.(10|\\d)\\.",
    "5_correct_answers": [
      "v0.9.",
      "v0.0.",
      "v0.8.",
      "v0.2.",
      "v0.3."
    ],
    "5_incorrect_answers": [
      "v#vi.",
      "v0.c.",
      "v0.8Q",
      "|G.2i",
      "v~.t."
    ]
  },
  {
    "regex": "(/component){3}",
    "refactor_regex": "/component/component/component",
    "5_correct_answers": [
      "/component/component/component",
      "/component/component/component",
      "/component/component/component",
      "/component/component/component",
      "/component/component/component"
    ],
    "5_incorrect_answers": [
      "/component/compoeent/compon#nt",
      "/6ompon)nt/component/component",
      "/comVonent/component/component",
      "/component/compo[e2t/component",
      "/component/coIponent/component"
    ]
  },
  {
    "regex": "'\\s*$",
    "refactor_regex": "'(\\s{1,}|)$",
    "5_correct_answers": [
      "'",
      "'",
      "'",
      "'",
      "'"
    ],
    "5_incorrect_answers": [
      "R",
      "a",
      "*",
      "C",
      "S"
    ]
  },
  {
    "regex": "(\\*)",
    "refactor_regex": "([*])",
    "5_correct_answers": [
      "*",
      "*",
      "*",
      "*",
      "*"
    ],
    "5_incorrect_answers": [
      "y",
      "7",
      "!",
      "T",
      "~"
    ]
  },
  {
    "regex": "^(\\w+)(:(.+))?",
    "refactor_regex": "^([a-zA-Z0-9_]{1,})(:(.{1,}))?",
    "5_correct_answers": [
      "I",
      "nfh",
      "YI:k RYN^[(2_G1AX&r",
      "S:i[4%+Pl8WDI)lkX'dqxxKoH",
      "eNm:<XT"
    ],
    "5_incorrect_answers": [
      "|",
      "?fh",
      "\"I:k RYN^[#2_GaAX&r",
      " :i[4%+Pl8WDI)l4h'dqxxKoH",
      "^Nm:<XT"
    ]
  },
  {
    "regex": "Battle on",
    "refactor_regex": "(Battle on)",
    "5_correct_answers": [
      "Battle on",
      "Battle on",
      "Battle on",
      "Battle on",
      "Battle on"
    ],
    "5_incorrect_answers": [
      "Battse on",
      "Battl& ow",
      "[attle on",
      "BCQtle on",
      "nattlA o|"
    ]
  },
  {
    "regex": "^ujanuwari",
    "refactor_regex": "^(ujanuwari)",
    "5_correct_answers": [
      "ujanuwari",
      "ujanuwari",
      "ujanuwari",
      "ujanuwari",
      "ujanuwari"
    ],
    "5_incorrect_answers": [
      "ujanuwar|",
      "ujanuoarK",
      "ujaLuwaE\"",
      "ujanuwa>i",
      "ujanuwar>"
    ]
  },
  {
    "regex": "[A-Za-z_$]+$",
    "refactor_regex": "[A-Z_a-z\\$]{1,}$",
    "5_correct_answers": [
      "Lfsu",
      "QVCWoycumIMNJYRdyh_qio",
      "YFFZ$SEODfrWxxrJc",
      "aC",
      "AAREWTXuyY"
    ],
    "5_incorrect_answers": [
      "@fsu",
      "QVCWoycumIM*JYRdyh_q|o",
      "YFFZ,SLODfrW^xrJc",
      "a[",
      "AAREWTX@4t"
    ]
  },
  {
    "regex": "\"gid\"",
    "refactor_regex": "(\"gid\")",
    "5_correct_answers": [
      "\"gid\"",
      "\"gid\"",
      "\"gid\"",
      "\"gid\"",
      "\"gid\""
    ],
    "5_incorrect_answers": [
      "\"Ii$\"",
      "5yidO",
      "\"gif\"",
      "\"2id?",
      "\"3i,y"
    ]
  },
  {
    "regex": "v[23]000(\\w\\w)*",
    "refactor_regex": "v(2|3)000(\\w\\w)*",
    "5_correct_answers": [
      "v2000",
      "v2000",
      "v3000AI1k",
      "v20007f",
      "v2000"
    ],
    "5_incorrect_answers": [
      "g2000",
      "v20b0",
      "v&000AI1V",
      "v20907f",
      "v2J00"
    ]
  },
  {
    "regex": "auto-delivered\\s+wirelessly",
    "refactor_regex": "auto-delivered\\s\\s*wirelessly",
    "5_correct_answers": [
      "auto-delivered wirelessly",
      "auto-delivered wirelessly",
      "auto-delivered wirelessly",
      "auto-delivered wirelessly",
      "auto-delivered wirelessly"
    ],
    "5_incorrect_answers": [
      "auto-dwlivered wirelessl%",
      "auto-de3ivered wiren0ssly",
      "auto-delivered:wirelessly",
      "auto-del<vered wprelessly",
      "Auto-deliv%red wirelessly"
    ]
  },
  {
    "regex": "firefox(/[\\d\\.]+)*",
    "refactor_regex": "firefox(/[\\d\\.][\\d\\.]*)*",
    "5_correct_answers": [
      "firefox",
      "firefox/7379598095146343667023",
      "firefox/5989290415.220743.3100934",
      "firefox",
      "firefox/60594"
    ],
    "5_incorrect_answers": [
      "Sire+hx",
      "firefYx/7379598095196343667{23",
      "fire'ox/5989290415.220743.3100934",
      "fi3e/gx",
      ",>\"efox/60594"
    ]
  },
  {
    "regex": "=[\\s\\S]*?(?:&|$)",
    "refactor_regex": "=[\\s\\S]*?[&$]",
    "5_correct_answers": [
      "=&",
      "= &",
      "=&",
      "=&",
      "=&"
    ],
    "5_incorrect_answers": [
      "&&",
      "l y",
      "fa",
      "yP",
      "E4"
    ]
  },
  {
    "regex": "360Spider",
    "refactor_regex": "(360Spider)",
    "5_correct_answers": [
      "360Spider",
      "360Spider",
      "360Spider",
      "360Spider",
      "360Spider"
    ],
    "5_incorrect_answers": [
      "3@0Spide'",
      "360SpIder",
      "36?Spider",
      "362SCider",
      "\"60Spid'r"
    ]
  },
  {
    "regex": "(\\d) (minutes|hour|hours) ago",
    "refactor_regex": "[0-9] (minutes|hour|hours) ago",
    "5_correct_answers": [
      "5 hours ago",
      "8 hours ago",
      "0 hours ago",
      "5 hour ago",
      "1 hour ago"
    ],
    "5_incorrect_answers": [
      "5 hoursSago",
      "8 hoursFego",
      "05hoe(s ago",
      "B hoyr ag?",
      "1 hour a16"
    ]
  },
  {
    "regex": "input must not be empty",
    "refactor_regex": "(input must not be empty)",
    "5_correct_answers": [
      "input must not be empty",
      "input must not be empty",
      "input must not be empty",
      "input must not be empty",
      "input must not be empty"
    ],
    "5_incorrect_answers": [
      "input must not\"bl empty",
      "i+put must not be em/ty",
      "inpkt nust not be empty",
      "inUut must not be empty",
      "input must not _e empty"
    ]
  },
  {
    "regex": "^/channel/(.+?)/?$",
    "refactor_regex": "^(/channel/)(.+?)(/|)$",
    "5_correct_answers": [
      "/channel/1qOij\\cl;fzbpc**9szp[",
      "/channel/B/",
      "/channel/CZiU[!I+t3,1eBxRNbJe",
      "/channel/FS2?,L-Z%!H+ij(vAw]0a,t+F",
      "/channel/AdI<\"5kgP/C^F[V)\\0"
    ],
    "5_incorrect_answers": [
      "/chanYel/1qOij\\cl;fzbhc**9szp[",
      "[chan6el/B/",
      "/cwannel/CZiT[!IQt3,1eBxRNbJe",
      "/chainel/FS2?,L-Z%!H+ij(vAw]0^}t+F",
      "/chatnel/Ad`<\"5kgP/C^F[VS\\0"
    ]
  },
  {
    "regex": "Trace-Command",
    "refactor_regex": "(Trace-Command)",
    "5_correct_answers": [
      "Trace-Command",
      "Trace-Command",
      "Trace-Command",
      "Trace-Command",
      "Trace-Command"
    ],
    "5_incorrect_answers": [
      "TrSce-CoEmand",
      "TraPe-Command",
      "Trace-CommaLd",
      "Trac&-Command",
      "TrNce-Cosmand"
    ]
  },
  {
    "regex": "\\*/\\s?$",
    "refactor_regex": "\\*/(| |\\t|\\n|\\r|\\f|\\v)$",
    "5_correct_answers": [
      "*/",
      "*/",
      "*/",
      "*/",
      "*/"
    ],
    "5_incorrect_answers": [
      "k/",
      "L/",
      "d:",
      "*9",
      "*>"
    ]
  },
  {
    "regex": "<.*>; rel=\"describedBy\"",
    "refactor_regex": "<.*(>; rel=\"describedBy\")",
    "5_correct_answers": [
      "<>; rel=\"describedBy\"",
      "<WN[>; rel=\"describedBy\"",
      "<=;SdgX rl$>; rel=\"describedBy\"",
      "<NEx!4M>; rel=\"describedBy\"",
      "<>; rel=\"describedBy\""
    ],
    "5_incorrect_answers": [
      "<N;Irel=\"described&y\"",
      "<>N[>; rel=\"describedBM\"",
      "<=;SdgX rl$>; rel=IdescribedBy\"",
      "<NEx!4M>; xel=\"describVdBy\"",
      "<>O rel=?describedBy\""
    ]
  },
  {
    "regex": "\\s[^\\s]+",
    "refactor_regex": "( |\\t|\\n|\\r|\\f|\\v)\\S{1,}",
    "5_correct_answers": [
      " 'zbUtV\"",
      " brv/10;,V(EVAEpK<",
      " :<2;Q6Na_M",
      " ;\"",
      " fs[aGGI11Am<>C[`ah"
    ],
    "5_incorrect_answers": [
      "zNzb\"tV\"",
      "N3rvq10;,V(EVAEpK<",
      "]s<2;Q6Na_M",
      "|m\"",
      "Kfs[aGGI11Amy>C[`Lh"
    ]
  },
  {
    "regex": "^-[^-]+",
    "refactor_regex": "^-[^-]{1,}",
    "5_correct_answers": [
      "-'r`Bp*",
      "->J5G4a?;uj]_",
      "->w'mu\")@AFDvr@jYP&ojv",
      "-!!7XKz<80VLow40b:HV3",
      "-k]:LIm]wtis\""
    ],
    "5_incorrect_answers": [
      "h'ikBp*",
      "}>J5G4a?;uj]_",
      "W>w%mu\")@AFDvr@jYP&ojv",
      "S!!7XKz<80VLow40b:HV3",
      "0k]:Lfm][tis\""
    ]
  },
  {
    "regex": "^([\\S ]+) \\(([\\d]+) Units?\\)$",
    "refactor_regex": "^([\\S ]+) \\(([\\d]+) Unit(s|)\\)$",
    "5_correct_answers": [
      "   (863649054240633477392 Units)",
      "   (2234284610776120690807 Units)",
      "        (36743145984569 Unit)",
      "              (0776 Units)",
      "     (7688846199 Unit)"
    ],
    "5_incorrect_answers": [
      "   (8636490.4240633477392 Units)",
      "   (2234284610U_6120690807 Units)",
      "        (3674c115984569 Unit)",
      "         @    (0776 /nits)",
      "     t7688846199 Unit)"
    ]
  },
  {
    "regex": "jquery\\.jqplot\\.min\\.js",
    "refactor_regex": "(jquery)[.](jqplot)[.](min)[.](js)",
    "5_correct_answers": [
      "jquery.jqplot.min.js",
      "jquery.jqplot.min.js",
      "jquery.jqplot.min.js",
      "jquery.jqplot.min.js",
      "jquery.jqplot.min.js"
    ],
    "5_incorrect_answers": [
      "j uery.jqplot.min.hs",
      "jquery.j9F=ot.min.js",
      "jquery.vqpljt=min.js",
      "jqu?rR.jqplot.min^js",
      "jquery.j6p[ot.min.us"
    ]
  },
  {
    "regex": "Opera Mobi[\\s\\S]*Opera ([0-9\\.]+)",
    "refactor_regex": "(Opera Mobi)[\\s\\S]*(Opera )([0-9\\.]+)",
    "5_correct_answers": [
      "Opera Mobi Opera 36.533.",
      "Opera MobiOpera 467.",
      "Opera MobiOpera 81511409624",
      "Opera MobiOpera 966208783",
      "Opera MobiOpera 69"
    ],
    "5_incorrect_answers": [
      "Opera Mobi c!era 36.533.",
      "Opera MobiOper% 467.",
      "Opera MobiOpera28151W409624",
      "Operh MobiOpera 9662087t3",
      "Opera MobiTpera 69"
    ]
  },
  {
    "regex": "^3[47]\\d{3}$",
    "refactor_regex": "^3(4|7)\\d{3}$",
    "5_correct_answers": [
      "37104",
      "34079",
      "34472",
      "34511",
      "34186"
    ],
    "5_incorrect_answers": [
      "27?0E",
      "3v07v",
      "/44H2",
      "3B511",
      "3=186"
    ]
  },
  {
    "regex": "[Ss]hort.*[Dd]ating",
    "refactor_regex": "(Short|short).*(Dating|dating)",
    "5_correct_answers": [
      "shortWOs6Dating",
      "short*kaqdOKYiW]jw7Dating",
      "ShortN^zdating",
      "shortOi;MqFsLb\\l6NDcdating",
      "shortDating"
    ],
    "5_incorrect_answers": [
      "shorxWOs6Dating",
      "sho0t*k_qdOKYiW]jw7Qating",
      "ShoQtN^zdat+ng",
      "shortOi;MqnsLb\\l6NDNdatinc",
      "shortDBting"
    ]
  },
  {
    "regex": "^online:",
    "refactor_regex": "^(online:)",
    "5_correct_answers": [
      "online:",
      "online:",
      "online:",
      "online:",
      "online:"
    ],
    "5_incorrect_answers": [
      "on[iwe:",
      "Kn$gne:",
      "on%ene:",
      "an$ine:",
      "onlineq"
    ]
  },
  {
    "regex": "\\b(dci|cinema)\\s+4k\\b",
    "refactor_regex": "\\b(dci|cinema)\\s{1,}(4k)\\b",
    "5_correct_answers": [
      "dci  4k",
      "cinema  4k",
      "dci 4k",
      "dci 4k",
      "cinema 4k"
    ],
    "5_incorrect_answers": [
      "d$ig 4r",
      "cinem7  4F",
      "d'i \"k",
      "Mci 4k",
      "cinemaU4k"
    ]
  },
  {
    "regex": "@([^()]+):\\d+",
    "refactor_regex": "@[^()][^()]{0,}:(0|1|2|3|4|5|6|7|8|9)(0|1|2|3|4|5|6|7|8|9){0,}",
    "5_correct_answers": [
      "@%89[-:849030360",
      "@51/;9U;mP:57912775078101",
      "@q5@uJ,;ituF\"IG:08622872603",
      "@\\VwC\\ey3b:314082188877798169822",
      "@\\nOL:d[qlz<M\\:67220982"
    ],
    "5_incorrect_answers": [
      "b%89[-|849030360",
      "?=*/;9U;mP:57912775078101",
      "@q5@uJ,;i%uF\"IGo08622872603",
      "@\\VwC\\ey3b:K14082188877798169822",
      "}\\nOL:d[qlz<:\\:67;20982"
    ]
  },
  {
    "regex": "\\s?has-error",
    "refactor_regex": "\\s(has-error)|(has-error)",
    "5_correct_answers": [
      "has-error",
      "has-error",
      "has-error",
      "has-error",
      "has-error"
    ],
    "5_incorrect_answers": [
      "has-err/r",
      "hasGerr.r",
      "has-j*Nor",
      "Bas-e@roo",
      "has-e.ror"
    ]
  },
  {
    "regex": "^.open",
    "refactor_regex": "^.(open)",
    "5_correct_answers": [
      "oopen",
      "Uopen",
      "yopen",
      "Lopen",
      "Bopen"
    ],
    "5_incorrect_answers": [
      "oO6en",
      "JopKn",
      "yoMHn",
      "Lopun",
      "Bopvn"
    ]
  },
  {
    "regex": "Must be either string or array",
    "refactor_regex": "(Must be either string or array)",
    "5_correct_answers": [
      "Must be either string or array",
      "Must be either string or array",
      "Must be either string or array",
      "Must be either string or array",
      "Must be either string or array"
    ],
    "5_incorrect_answers": [
      "Murt be either string or array",
      "Must?be either string or array",
      "Must be e7ther stringhor array",
      "Must be either str=ng or Wrray",
      "Must be e+tPer string or array"
    ]
  },
  {
    "regex": "/25",
    "refactor_regex": "(/25)",
    "5_correct_answers": [
      "/25",
      "/25",
      "/25",
      "/25",
      "/25"
    ],
    "5_incorrect_answers": [
      "0@5",
      "[2_",
      "/ZO",
      "/2_",
      "+2g"
    ]
  },
  {
    "regex": "Error( in .*?)?:(.*)",
    "refactor_regex": "Error(( in .*?))?:.*",
    "5_correct_answers": [
      "Error in &e>!u:Gkbi7&Hn^M9#-e:",
      "Error:dgi[v",
      "Error in +4ow:",
      "Error:`*5jLHKABec\\%v<AxFd0p",
      "Error in a:-Y?L4&VN"
    ],
    "5_incorrect_answers": [
      "Error iw &e>!u:Gk'i7&Hn^M9h-e:",
      "UKror:dii[v",
      "zrror %n +4ow:",
      "Er}o':`*5jLHKABec\\jv<AxFd0p",
      "Orror i6 a:-Y?L4&VN"
    ]
  },
  {
    "regex": "data:application/font-woff",
    "refactor_regex": "(data:application/font-woff)",
    "5_correct_answers": [
      "data:application/font-woff",
      "data:application/font-woff",
      "data:application/font-woff",
      "data:application/font-woff",
      "data:application/font-woff"
    ],
    "5_incorrect_answers": [
      "drta:applicJtion/f}nt-woff",
      "dDta:application/fo<t-woff",
      "data:applica*ion/fgnt-wof;",
      "data:application/fo(t-woff",
      "d$ta:applicgtion/f6nt-woff"
    ]
  },
  {
    "regex": "screen([0-9]*).png",
    "refactor_regex": "screen(\\d*).png",
    "5_correct_answers": [
      "screen715737099578837097636opng",
      "screen415423305550545469vpng",
      "screen118984182778epng",
      "screen131661852png",
      "screen418824119487573464701png"
    ],
    "5_incorrect_answers": [
      "screen7157370995^8837093636opng",
      "screen41542`30 550541469vpng",
      "screen118'8f182778epng",
      "screen1316618>,png",
      "scseen418824119487573464701png"
    ]
  },
  {
    "regex": "[a-z][a-z-]+(=\".*?\")?",
    "refactor_regex": "(a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z)(a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|\\-)(a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|\\-)*(=\".*?\"){0,1}",
    "5_correct_answers": [
      "npkkmaxbeqohhl-fgwu=\"+nQIg<6@!+1\"",
      "xgdbpsv-cspnwtdpywgtokclou",
      "pdflzdfxxldps",
      "ps",
      "vstlwxlnihpwr=\"Cim1pU6tobR9l89\""
    ],
    "5_incorrect_answers": [
      "'pkkmaxbeqohhl-f,wu=\"+nQIg<6@!+1\"",
      "Agdbpsv-cspnAtdpywDtokclou",
      "{dflzdfxx]@ps",
      "I3",
      "vBtlwxlnih@wr=\"Cim1pU6tobp9l89\""
    ]
  },
  {
    "regex": "<title.*?>(.+?)</title>",
    "refactor_regex": "(<title).*?>(.+?)(</title>)",
    "5_correct_answers": [
      "<title,%'X>cB-C%aix</title>",
      "<title,K38H>>>a\\EZRV_uA</title>",
      "<titleE><paM\"8</title>",
      "<titleJLxTKGI[wNwIF2j/>tO</title>",
      "<titleJ)h.@>0nD</title>"
    ],
    "5_incorrect_answers": [
      "<t:tle,%'X>cB-C%aix</title>",
      "^title,K38H>>>a\\EZRV_uA</tit]e>",
      "6ti}leE><paM\"8</title>",
      "<,itleJLxTKGI?wNwIF2j/>tO</tNtle>",
      "<titoeJ)h.@>0nD</ti&le>"
    ]
  },
  {
    "regex": ".*/modules/",
    "refactor_regex": ".*(/modules/)",
    "5_correct_answers": [
      "6?2,479`k$^;9_\"^CeZLKk.H/modules/",
      "#k^\" E26Z`^-Mq@[3S`Aw(/modules/",
      "7RCM9N]Jh;A$J.s(i[o2</modules/",
      "4X^b4t9(qpj/modules/",
      "&;uIt/modules/"
    ],
    "5_incorrect_answers": [
      "6?2,479`k$^;9v\"^CeZLKk.H/mDdules/",
      "#k^\" E26Z`^-Mq@[3S`Aw(_mod]les/",
      "7RCM9N]Jh;A$J.s(i[o2<Xmodules/",
      "4X^b4t|(qpj/modu:eu/",
      ");uIt=mldules/"
    ]
  },
  {
    "regex": "^hello\\.(world)?$",
    "refactor_regex": "^(hello)[.](world|)$",
    "5_correct_answers": [
      "hello.world",
      "hello.",
      "hello.",
      "hello.world",
      "hello."
    ],
    "5_incorrect_answers": [
      "heim'.world",
      "''llo.",
      "helVo.",
      "hrllP.world",
      "hel]ol"
    ]
  },
  {
    "regex": "^(?:/host_mnt)?/([a-zA-Z])/(.*)$",
    "refactor_regex": "^(?:/host_mnt)?/((a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z))/(.*)$",
    "5_correct_answers": [
      "/u/ebJ1<b-^(avNFF",
      "/host_mnt/b/ZGWDclJ",
      "/host_mnt/d/-QltzRdt",
      "/host_mnt/H/4X=XY(3QuxbhLCRJ",
      "/host_mnt/d/:%&M#R4bK"
    ],
    "5_incorrect_answers": [
      "/:/ebJ1<b-^(@vNFp",
      "/host_qnt/bwZGW,clJ",
      "/hos9_mnt/E/-QltzRdt",
      "_host_mnt/H/4X=XY(3QuxbhLCRJ",
      "/Lost_mnt/d/:%&M#R4bZ"
    ]
  },
  {
    "regex": "^-[1-9]\\d*\\.\\d*|-0\\.\\d*[1-9]\\d*$",
    "refactor_regex": "^-[1-9]\\d{0,}\\.\\d{0,}|(-0)\\.\\d{0,}[1-9]\\d{0,}$",
    "5_correct_answers": [
      "-37742733488.116277754646",
      "-0.8165418272101374631282966389",
      "-49403600037.91598336075",
      "-0.8860262",
      "-0.235850003379382815632678082"
    ],
    "5_incorrect_answers": [
      "-37742{33480.116277754646",
      "-J.81;5418272101374631282966389",
      "-494036Q0037.91598336075",
      "w0.8O60262",
      "-01235850003379382615632678082"
    ]
  },
  {
    "regex": ", stat '[^'\\n]*'$",
    "refactor_regex": "(, stat ')[^'\\n]{0,}'$",
    "5_correct_answers": [
      ", stat '9A\\Pm%'",
      ", stat '>?IM=5F\\f\"1QtGl'",
      ", stat '%'",
      ", stat '>RSSedQ&tWl4rBj>'",
      ", stat 'Wtjdh &,Ks%y$$/k$'"
    ],
    "5_incorrect_answers": [
      ", suat H9A\\Jm%'",
      ", stat />?IM=5F\\fI1QtGl'",
      ", sta/ 0Y'",
      ", statq*>RSSedQ&tWl4rBj>'",
      ", -tat 'Wtjdh &,Ks%P$H/k$'"
    ]
  },
  {
    "regex": "picker(.date)?.js$",
    "refactor_regex": "picker(.date){0,1}.js$",
    "5_correct_answers": [
      "picker+dateOjs",
      "pickerHjs",
      "pickerIdateDjs",
      "pickerzjs",
      "picker'js"
    ],
    "5_incorrect_answers": [
      "picker+daMeOjs",
      "pic<eYHjP",
      "pi)ker dateGjs",
      "pMckerzjs",
      "picker'Ys"
    ]
  },
  {
    "regex": "\\?([\\w\\W]+?)$",
    "refactor_regex": "(\\?)((\\w|[^a-zA-Z\\d_])+?)$",
    "5_correct_answers": [
      "?4",
      "?'8",
      "?cE2",
      "??",
      "? "
    ],
    "5_incorrect_answers": [
      "\\4",
      "^')",
      "Cc'2",
      "*?",
      "c "
    ]
  },
  {
    "regex": "STRING|NUMBER|NAME|TRUE|FALSE",
    "refactor_regex": "(STRING|NUMBER|NAME|TRUE|FALSE)",
    "5_correct_answers": [
      "STRING",
      "FALSE",
      "NUMBER",
      "NAME",
      "FALSE"
    ],
    "5_incorrect_answers": [
      "n)RI{G",
      "FhLSd",
      "NWMBER",
      "KAMe",
      "FAWSE"
    ]
  },
  {
    "regex": "xd_receiver|\\.htj|\\.htc|/admin",
    "refactor_regex": "xd_receiver|[.]htj|[.]htc|/admin",
    "5_correct_answers": [
      ".htj",
      ".htc",
      "/admin",
      "xd_receiver",
      ".htj"
    ],
    "5_incorrect_answers": [
      "thtj",
      "3htc",
      "/ad^if",
      "xd_receivHe",
      "G.tj"
    ]
  },
  {
    "regex": "(pages\\s*=\\s*[\"{]\\d+)([\"}])",
    "refactor_regex": "(pages)\\s*=\\s*[\"{]\\d+[\"}]",
    "5_correct_answers": [
      "pages=\"07502388566564}",
      "pages =\"759340\"",
      "pages =\"3433}",
      "pages= {6}",
      "pages={0796\""
    ],
    "5_incorrect_answers": [
      "p,gesZ\"0750238856656t}",
      "pages =\"7593J0\"",
      "jage; =\"3433}",
      "pageS= {6h",
      "pages={<796\""
    ]
  },
  {
    "regex": "base64|url$",
    "refactor_regex": "(base64|url$)",
    "5_correct_answers": [
      "url",
      "url",
      "base64",
      "base64",
      "url"
    ],
    "5_incorrect_answers": [
      "grl",
      "<ru",
      "base/;",
      "ba,l64",
      "nrl"
    ]
  },
  {
    "regex": "(-?[^-]+)(?:-(.+)|)",
    "refactor_regex": "(-?[^-][^-]*)(?:-(.+)|)",
    "5_correct_answers": [
      "->%WIqEY=VCv/[",
      "-.yJ%KO7uI\\E)Vw5kb",
      "-Xjt5B",
      "-]S[",
      "-K/wqTKmd-ORxZaCB/ezY<["
    ],
    "5_incorrect_answers": [
      "--%WIqEY=TCv/[",
      "--yK%KO7uI\\E)Vw5kb",
      "--jt5B",
      "--`g",
      "--/wqTKmd-ORxZaCB/e6J<["
    ]
  },
  {
    "regex": "\\s*[,;\\|]\\s*",
    "refactor_regex": "( |\\t|\\n|\\r|\\f|\\v)*(,|;|\\|)( |\\t|\\n|\\r|\\f|\\v)*",
    "5_correct_answers": [
      "|",
      "| ",
      ",",
      " ;",
      ";"
    ],
    "5_incorrect_answers": [
      "Z",
      "?'",
      "=",
      " {",
      "."
    ]
  },
  {
    "regex": "^INT|^BIGINT|^VAR|^TINY",
    "refactor_regex": "^(INT)|^(BIGINT)|^(VAR)|^(TINY)",
    "5_correct_answers": [
      "VAR",
      "BIGINT",
      "BIGINT",
      "TINY",
      "VAR"
    ],
    "5_incorrect_answers": [
      "VZo",
      "BI3INT",
      "BIGI$T",
      "&INY",
      "VYR"
    ]
  },
  {
    "regex": "^href=\"",
    "refactor_regex": "^(href=\")",
    "5_correct_answers": [
      "href=\"",
      "href=\"",
      "href=\"",
      "href=\"",
      "href=\""
    ],
    "5_incorrect_answers": [
      "Tfe:=\"",
      "!+ef=\"",
      "hBef=%",
      "FreC=\"",
      "hl#f=\""
    ]
  },
  {
    "regex": "^Caused by Error: root message",
    "refactor_regex": "^(Caused by Error: root message)",
    "5_correct_answers": [
      "Caused by Error: root message",
      "Caused by Error: root message",
      "Caused by Error: root message",
      "Caused by Error: root message",
      "Caused by Error: root message"
    ],
    "5_incorrect_answers": [
      "Caused by?Error: root m/ssgge",
      "Caused by Error: root<meseage",
      "Caused bM Erpor: root me|sage",
      "Caused by Error:xroot message",
      " aused by E0ror: root m<ssage"
    ]
  },
  {
    "regex": "\\(\\s*\\)",
    "refactor_regex": "\\(( |\\t|\\n|\\r|\\f|\\v)*\\)",
    "5_correct_answers": [
      "( )",
      "()",
      "()",
      "()",
      "()"
    ],
    "5_incorrect_answers": [
      "e ;",
      "S)",
      "t)",
      "~)",
      "=K"
    ]
  },
  {
    "regex": "^/r/([a-z0-9_-]+)$",
    "refactor_regex": "^/r/([a-z0-9_-][a-z0-9_-]*)$",
    "5_correct_answers": [
      "/r/e2_n-pya2g8fv4m2",
      "/r/r2_-o5smq_zh0i7jn",
      "/r/wcwb62nkygy-_pkil",
      "/r/e-yc",
      "/r/vd5mm4v_w612sp1h40tx5x78"
    ],
    "5_incorrect_answers": [
      "/r/e2_n-pyz/g8fv4m2",
      "/1/r2_-o5soq_zh0i7jn",
      "/rOwcwb6Gnkygy-_pkil",
      "/k/e-yc",
      "/\"/vd5mm4v_w612spLh40tx5x78"
    ]
  },
  {
    "regex": "^[-_a-z0-9]+$",
    "refactor_regex": "^[\\-0-9_a-z]{1,}$",
    "5_correct_answers": [
      "ka3q7kfjmpiu",
      "o42gaq8vsbkkq9-",
      "n620qca",
      "q_-e52dtydh",
      "h7ohxdxqz"
    ],
    "5_incorrect_answers": [
      "wa3q7k>jmpiu",
      "> 2gaq8vsbkkq9-",
      "n62oqcI",
      "q_-eL2dtydh",
      "h7o?xd qu"
    ]
  },
  {
    "regex": "(^[^ ]+).*",
    "refactor_regex": "^[^ ][^ ]*.*",
    "5_correct_answers": [
      "0w+lX",
      "sehTO`2.u(j==UHuh\\unU8dt.X_>",
      ":",
      "z>SR&E&b_Wm=J&,Qqw<=m?dLudX",
      "LnvId-X"
    ],
    "5_incorrect_answers": [
      " w[lX",
      " ehTO`2.u(j==UCuh\\unU8dtfX_>",
      " ",
      " >SR&E&b_Wm=J&,Qqw<=m?dLudX",
      " nvsd-X"
    ]
  },
  {
    "regex": "^(.*)(:(\\d+))$",
    "refactor_regex": "^(.*:([0-9]+))$",
    "5_correct_answers": [
      "X2BE'\";$t4(4P2V^PGt:41",
      "^?6g2:2496044429506933195232255",
      "U2Y&/st&&0DTx ZM\"E?Rav\\x:1",
      "\"u3%Wpv:87433959265146195288",
      "'::130570849"
    ],
    "5_incorrect_answers": [
      "X2BE'\";$t4(4P2V^PGti>1",
      "^?6g2:249604442950693319523225F",
      "U2Y&/st&&0DTx ZM\"E?R#;\\xF1",
      "\"u3%Wpv:8743395 265146295288",
      "'::1J057084c"
    ]
  },
  {
    "regex": "^window\\.(.*)",
    "refactor_regex": "^window[.](.*)",
    "5_correct_answers": [
      "window.S",
      "window.zi\\>[\\gA;o",
      "window.Ui<WccI&4<ty\\ac<2R4^jn",
      "window.LtU\\C.6i\\hPr(C^",
      "window.8ycz7$w `0;c3ETr.z:IwH+E"
    ],
    "5_incorrect_answers": [
      "wiKdonIS",
      "win7o9.zi\\>[\\gA;o",
      "Dindo\\.Ui<WccI&p<ty\\ac<2R4^jn",
      "windo?.Lt:\\C.6i\\hPr(C^",
      "windowh8ycz7$w `0;c3ETr.ztIwH+E"
    ]
  },
  {
    "regex": "require\\('lodash'\\)",
    "refactor_regex": "(require)\\(('lodash')\\)",
    "5_correct_answers": [
      "require('lodash')",
      "require('lodash')",
      "require('lodash')",
      "require('lodash')",
      "require('lodash')"
    ],
    "5_incorrect_answers": [
      "requirev'loda hJ)",
      "require('lodKsh')",
      ":equire('l,dash')",
      "Yequireg'lqdash')",
      "require('9odash')"
    ]
  },
  {
    "regex": "(?:\\.\\.)|[:]",
    "refactor_regex": "((?:(\\.\\.))|:)",
    "5_correct_answers": [
      "..",
      ":",
      ":",
      "..",
      ":"
    ],
    "5_incorrect_answers": [
      ";.",
      "e",
      "X",
      "v.",
      "K"
    ]
  },
  {
    "regex": "Unable to start Mimosa",
    "refactor_regex": "(Unable to start Mimosa)",
    "5_correct_answers": [
      "Unable to start Mimosa",
      "Unable to start Mimosa",
      "Unable to start Mimosa",
      "Unable to start Mimosa",
      "Unable to start Mimosa"
    ],
    "5_incorrect_answers": [
      "rnab)e to startPMimosa",
      "Un'ble to start Mimosa",
      "Unable to start MiMmsa",
      "Unable to Vtart_Mim=sa",
      "U`able to start Mimosa"
    ]
  },
  {
    "regex": "^(\\w+Warning:).*",
    "refactor_regex": "^(\\w{1,}Warning:).*",
    "5_correct_answers": [
      "X6Warning:",
      "BWarning:+7@cPS<\\Yqy/Qzmb\"U1rZf",
      "PxWarning:<XKaFz;GhpI(hyTP",
      "7Warning:3Pa",
      "UWarning:XD;_OJh5JLst#09"
    ],
    "5_incorrect_answers": [
      "+7Warnin-:",
      "BWarn2ng:+7@cP <\\Yqy/1zmb\"U1rZf",
      "Pxiarning:<XKaFz;GhpI(hyTP",
      "7Warni-=:3Pa",
      "UWarningRXD;_OJh5JLst#09"
    ]
  },
  {
    "regex": "editor\\.fontSize",
    "refactor_regex": "editor(\\.)fontSize",
    "5_correct_answers": [
      "editor.fontSize",
      "editor.fontSize",
      "editor.fontSize",
      "editor.fontSize",
      "editor.fontSize"
    ],
    "5_incorrect_answers": [
      "editor.fottSize",
      "`d&tor.fontSizz",
      "e4itor.fontSize",
      "editor.UontSize",
      "Uditor.fBnpSize"
    ]
  },
  {
    "regex": "^(.+)\\.(.+)",
    "refactor_regex": "^.+((\\.)).+",
    "5_correct_answers": [
      "C^'Wq.PnK>+g-Xt2/S\".",
      "d=)!wPfY_MC0W: eo;Vq+A.@r7fYjYa65",
      "@%o.]G",
      "wXMD++-4?&YB.M+d6h",
      "R]L*+Y0d.0 AT]g;.jl'D.(UL(*"
    ],
    "5_incorrect_answers": [
      "C^pWqbJnK>+g-Xt2/S\".",
      "d=)!wPfY_MC0W: eK;Vq+A/@r7fYjYa65",
      "@%o4]G",
      "wXMD++-4?&YB8M+d6h",
      "NOMATCH123"
    ]
  },
  {
    "regex": "http[s]*://",
    "refactor_regex": "(http|http(s)+)(://)",
    "5_correct_answers": [
      "httpsssss://",
      "httpsss://",
      "httpsssssssssssssssssss://",
      "httpssssssssssss://",
      "httpsssssssssssssssss://"
    ],
    "5_incorrect_answers": [
      "httzsssss://",
      "htpAsss://",
      "httpssss#ssssssssssssss://",
      "httpsEssEsssssss://",
      "httpsssssssssss[sssrs://"
    ]
  },
  {
    "regex": "<%%= nameCapitalized %>",
    "refactor_regex": "(<%%= nameCapitalized %>)",
    "5_correct_answers": [
      "<%%= nameCapitalized %>",
      "<%%= nameCapitalized %>",
      "<%%= nameCapitalized %>",
      "<%%= nameCapitalized %>",
      "<%%= nameCapitalized %>"
    ],
    "5_incorrect_answers": [
      "<%%= uameCapitalized %>",
      "<%%= \"ameCa0italized %>",
      "<%%= nameCapitaliz6d %>",
      "<%%= nameCapitali8ed %>",
      "<%%= ntmeCapit@lized %>"
    ]
  },
  {
    "regex": "^_smil(\\d+)$",
    "refactor_regex": "^(_smil)([0-9][0-9]*)$",
    "5_correct_answers": [
      "_smil5",
      "_smil6060425386889361419967856",
      "_smil6417385430829",
      "_smil081",
      "_smil67"
    ],
    "5_incorrect_answers": [
      "(smil-",
      "_Qmil6060425386889361419967856",
      "_smil641738,43082*",
      "_smcl0dq",
      "_smi<g7"
    ]
  },
  {
    "regex": "OmniWeb",
    "refactor_regex": "(OmniWeb)",
    "5_correct_answers": [
      "OmniWeb",
      "OmniWeb",
      "OmniWeb",
      "OmniWeb",
      "OmniWeb"
    ],
    "5_incorrect_answers": [
      ">mniWeb",
      "OmTiWeb",
      "Omn2Web",
      "OmviWeb",
      "OmY6Web"
    ]
  },
  {
    "regex": "^/?pages/",
    "refactor_regex": "^(/|)(pages/)",
    "5_correct_answers": [
      "/pages/",
      "/pages/",
      "/pages/",
      "pages/",
      "pages/"
    ],
    "5_incorrect_answers": [
      "}pages/",
      "/p+ge:/",
      "/p+ge7r",
      "(ages/",
      "pog1sV"
    ]
  },
  {
    "regex": "^(623041|622351)\\d{3}$",
    "refactor_regex": "^(623041|622351)\\d\\d\\d$",
    "5_correct_answers": [
      "622351216",
      "623041054",
      "622351629",
      "623041979",
      "622351077"
    ],
    "5_incorrect_answers": [
      "6223?1216",
      "6230410^4",
      "6/i35162}",
      "62304=#79",
      "62r3Z107S"
    ]
  },
  {
    "regex": "^--out=(.*)$",
    "refactor_regex": "^--out=.*$",
    "5_correct_answers": [
      "--out=4Ff_zf2",
      "--out=I",
      "--out=a=mD9rsJ $J`",
      "--out=8T _c]U5edstCH",
      "--out=/D7H2rM+EWR3 L''"
    ],
    "5_incorrect_answers": [
      "- out=XFf_zf2",
      "c-buL=I",
      "i-out=a=mD9rsJ $Jw",
      "]-out=8T _c]U5edstCU",
      "`-out=/D7H2VM+E1R3 L''"
    ]
  },
  {
    "regex": "((a)b)c",
    "refactor_regex": "(abc)",
    "5_correct_answers": [
      "abc",
      "abc",
      "abc",
      "abc",
      "abc"
    ],
    "5_incorrect_answers": [
      "mbo",
      "aL\"",
      "abo",
      "a}c",
      ".bc"
    ]
  },
  {
    "regex": "^\\$([@#\\$_%\\d\\w]+)\\.",
    "refactor_regex": "^\\$[@#\\$_%0-9\\w]+\\.",
    "5_correct_answers": [
      "$371.",
      "$7.",
      "$6@.",
      "$b.",
      "$9."
    ],
    "5_incorrect_answers": [
      "$3l16",
      "O7.",
      "v6@`",
      "g@.",
      "$9p"
    ]
  },
  {
    "regex": "{{(\\w*)}}",
    "refactor_regex": "{{([abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\d_]*)}}",
    "5_correct_answers": [
      "{{}}",
      "{{}}",
      "{{}}",
      "{{}}",
      "{{juWJ3m}}"
    ],
    "5_incorrect_answers": [
      "{{r`",
      "{v`}",
      "{{}=",
      "{{}i",
      "{{vuWJ&m}}"
    ]
  },
  {
    "regex": "0x[0-9A-Fa-f]+\\-0x[0-9A-Fa-f]+",
    "refactor_regex": "0x[0-9A-Fa-f]((0|1|2|3|4|5|6|7|8|9|A|B|C|D|E|F|a|b|c|d|e|f){1,})?\\-0x[0-9A-Fa-f]((0|1|2|3|4|5|6|7|8|9|A|B|C|D|E|F|a|b|c|d|e|f){1,})?",
    "5_correct_answers": [
      "0xB1f3398DddB613f6e4b59-0x078",
      "0x9-0xAa548f2BB7dEa73F55083DD4",
      "0xCa6eA95-0x4C4f3Ae3F4dd4ddA7c8",
      "0xe7D-0xE",
      "0x0528Ab6B8-0x5A3ADD95c20"
    ],
    "5_incorrect_answers": [
      "0xA1f3398DddB610f6e4b59-^x078",
      "0x9-0xRa548f2BB7dEa73F55083DD4",
      "0xC:6ep95-0x4C4f3AeuF4dd4ddA7c8",
      "0xk7Di0&E",
      "0x0528Ab6Bf-0R5A3ADD95c20"
    ]
  },
  {
    "regex": "No matching color patterns found",
    "refactor_regex": "(No matching color patterns found)",
    "5_correct_answers": [
      "No matching color patterns found",
      "No matching color patterns found",
      "No matching color patterns found",
      "No matching color patterns found",
      "No matching color patterns found"
    ],
    "5_incorrect_answers": [
      "No matching )ol0r patte%ns found",
      "No matching col4r patter*sPfound",
      "No maUching color patterns found",
      "No matching color #atterns found",
      "No matching color patterns Nound"
    ]
  },
  {
    "regex": "(^|\\s)swipeview-loading(\\s|$)",
    "refactor_regex": "(\\^|\\s)swipeview-loading(\\s|\\$)",
    "5_correct_answers": [
      " swipeview-loading ",
      " swipeview-loading ",
      " swipeview-loading ",
      " swipeview-loading ",
      " swipeview-loading "
    ],
    "5_incorrect_answers": [
      " swipe`iep-loading ",
      " CwipeOmew-loading ",
      " swupevie}-lPading ",
      "uswipevae|-loading ",
      " swipeview-~oeding "
    ]
  },
  {
    "regex": "^concat(?::([\\s\\S]+))?",
    "refactor_regex": "^(concat)(:(( |\\t|\\n|\\r|\\f|\\v|\\S)( |\\t|\\n|\\r|\\f|\\v|\\S)*))?",
    "5_correct_answers": [
      "concat",
      "concat",
      "concat",
      "concat",
      "concat"
    ],
    "5_incorrect_answers": [
      "concwt",
      "copcqt",
      "cozsat",
      "HonvYt",
      "To_caN"
    ]
  },
  {
    "regex": "(\\[\\[\\[)",
    "refactor_regex": "\\[{3}",
    "5_correct_answers": [
      "[[[",
      "[[[",
      "[[[",
      "[[[",
      "[[["
    ],
    "5_incorrect_answers": [
      "{'[",
      "[:[",
      "<[;",
      "e[[",
      "B=["
    ]
  },
  {
    "regex": "smoke",
    "refactor_regex": "(smoke)",
    "5_correct_answers": [
      "smoke",
      "smoke",
      "smoke",
      "smoke",
      "smoke"
    ],
    "5_incorrect_answers": [
      "vmoke",
      "amike",
      "smo:e",
      "h[okp",
      "9mok~"
    ]
  },
  {
    "regex": "^[a-zA-Z_$][0-9a-zA-Z_]{1,4}",
    "refactor_regex": "^[A-Z_a-z\\$][0-9A-Z_a-z][0-9A-Z_a-z]?[0-9A-Z_a-z]?[0-9A-Z_a-z]?",
    "5_correct_answers": [
      "QVt",
      "LeET8",
      "HZph",
      "wXJdt",
      "a9M9"
    ],
    "5_incorrect_answers": [
      "Q\":",
      " eM/8",
      "H&ph",
      " X];t",
      "79C9"
    ]
  },
  {
    "regex": "#!?/api",
    "refactor_regex": "(#/api|#!/api)",
    "5_correct_answers": [
      "#/api",
      "#/api",
      "#/api",
      "#!/api",
      "#!/api"
    ],
    "5_incorrect_answers": [
      "W/api",
      "#Yapi",
      "#japi",
      "&!/api",
      "#!/adi"
    ]
  },
  {
    "regex": "<Report>.*</Report>",
    "refactor_regex": "(<Report>).*(</Report>)",
    "5_correct_answers": [
      "<Report>S?#3[xl&epK</Report>",
      "<Report>Ks#</Report>",
      "<Report>YET\")6VoRj%wQCL7g</Report>",
      "<Report>8W0(tt</Report>",
      "<Report>x=@w=N</Report>"
    ],
    "5_incorrect_answers": [
      "<Report>S?#B[xl&epK</]eport>",
      "<Report>Kv$</R{port>",
      "<Reporo>YET\")6VoRj%wQCL7g</Report>",
      "<Report>8W0(dt<!feport>",
      "<Report>x=@w=N</Re&ort>"
    ]
  },
  {
    "regex": "^/debug-level",
    "refactor_regex": "^(/debug-level)",
    "5_correct_answers": [
      "/debug-level",
      "/debug-level",
      "/debug-level",
      "/debug-level",
      "/debug-level"
    ],
    "5_incorrect_answers": [
      "/debug-le_el",
      "/debug@level",
      "Vdebug-lewel",
      "/drbug-l&vel",
      "/debug-lev_n"
    ]
  },
  {
    "regex": "^#/definitions/(\\w*)$",
    "refactor_regex": "^(#/definitions/([a-zA-Z0-9_]+)?)$",
    "5_correct_answers": [
      "#/definitions/",
      "#/definitions/",
      "#/definitions/",
      "#/definitions/RvD",
      "#/definitions/"
    ],
    "5_incorrect_answers": [
      "#Jdefinitions/",
      "#/definitSonso",
      "#/definitioos,",
      "#/defi-itions/?vD",
      "#/defini_iA2s/"
    ]
  },
  {
    "regex": "from.*('|\"|;)$",
    "refactor_regex": "from.*(\"|'|;)$",
    "5_correct_answers": [
      "from\"",
      "from+#t2%t\"",
      "from8VYlA6wbB\"hr^_GObsP'",
      "fromsm&;x;",
      "fromT%o[oozo&3T#5.fT!2g;"
    ],
    "5_incorrect_answers": [
      "xroP\"",
      "fro%+#tj%t\"",
      "fro~8VYlA6wbB\"hr^_GObs>Q",
      "f(omsm&;n;",
      "frofT%o[oozo&3T# .fT!2y;"
    ]
  },
  {
    "regex": "\\.?search\\.",
    "refactor_regex": "[.]{0,1}search[.]",
    "5_correct_answers": [
      "search.",
      "search.",
      "search.",
      ".search.",
      "search."
    ],
    "5_incorrect_answers": [
      "sear_YR",
      "Iearc{x",
      "sYarcj.",
      ".search4",
      "se}rch."
    ]
  },
  {
    "regex": "^([A-z\\-]{4,})$",
    "refactor_regex": "^[A-Z_`a-z\\-\\[\\\\\\]\\^]{4,}$",
    "5_correct_answers": [
      "CkDS\\MUYdFHmeSH",
      "FHkJDhLCjwphJRNwc",
      "dgKGFnXxQI\\EulLh^",
      "wKYu\\Y]tPAhGDYZSKvh-yMAE",
      "F-jdi^QEUOHVl"
    ],
    "5_incorrect_answers": [
      "CkDS\\MUYdF7meSH",
      "E,kJDhLCjwphJRNwc",
      "dg$GFnXxQI'EulLh^",
      "wKYu\\Y]tPAhGDYXSKvh7yMAE",
      "F-jdi^iEUq3Vl"
    ]
  },
  {
    "regex": "(application|message|multipart)",
    "refactor_regex": "application|message|multipart",
    "5_correct_answers": [
      "application",
      "multipart",
      "application",
      "message",
      "multipart"
    ],
    "5_incorrect_answers": [
      "appliration",
      "mglti7arq",
      "apLlicntion",
      "me-sagN",
      "mulRipart"
    ]
  },
  {
    "regex": ":(.*)/(.*)\\.git$",
    "refactor_regex": ":(.*)/(.*)(\\.)git$",
    "5_correct_answers": [
      ":0fUM]1SpT[/MNe.git",
      ":gQT+/OS[/\"U.git",
      ":jy1*D9-1/n@#kIEs(1oo.git",
      ":b59HN/T(>T==j4\"_v<cr/ExiR.git",
      ":)%(Zy%,_40=G-PTd5/?v1XZQ:?\" U.git"
    ],
    "5_incorrect_answers": [
      ":0f\"M]1SnT[/MNe.gmt",
      ":gQT+3OS[K\"U.@it",
      ":jy1*D9-1/n@#kIEs(1oo.xit",
      ":b59HN/T(>T==j4\"_v<cr/ExiR.gat",
      ":)%(Zy%,_40=G-PTd5/?v1XZQ:?\"~U.sit"
    ]
  },
  {
    "regex": "\\{{3}([^}|^\\{]*)\\}{3}",
    "refactor_regex": "\\{{{[^}|^\\{]*\\}}}",
    "5_correct_answers": [
      "{{{2}}}",
      "{{{cXUV79Bdn:#yPF#mbuOYO]__}}}",
      "{{{\\@nyTr+@)Jh:}}}",
      "{{{s_]Y+YBZm-}}}",
      "{{{SFZPkh4irNbFuOC}}}"
    ],
    "5_incorrect_answers": [
      "W{{2}}}",
      "{{qcXUV79Bdn:#yPF#mbuOYO]__}}}",
      "{8n\\@nyTr+@)ih:}}}",
      "{{Is_]Y+YBZm-}}}",
      "O{{SFZPkh4mrNbFuOC}}}"
    ]
  },
  {
    "regex": "(internal)\\s*function\\s*",
    "refactor_regex": "internal[ \\t\\n\\r\\f\\v]{0,}function[ \\t\\n\\r\\f\\v]{0,}",
    "5_correct_answers": [
      "internalfunction ",
      "internalfunction",
      "internalfunction ",
      "internal  function ",
      "internalfunction"
    ],
    "5_incorrect_answers": [
      "inte9!/lfunction ",
      "inteQnalfu&c9ion",
      "intBrnalfunction ",
      "internal  fHnction ",
      "ingersalfun*tion"
    ]
  },
  {
    "regex": "^[a-z]+[a-z0-9-]*$",
    "refactor_regex": "^[a-z][a-z]{0,}[a-z\\d-]{0,}$",
    "5_correct_answers": [
      "wfszvn3x7mliz7p-jl3j30h49",
      "abbbbsjmxhxla6upqgq",
      "cqnc57-j30q",
      "uazbuaobbanb4vk6nh561unsthg9",
      "qwtqadrsruh"
    ],
    "5_incorrect_answers": [
      "wfszvn3x7mliz7pCjl3j30h49",
      "abbbbsjmMhxlT6upqgq",
      "cqgc57-.30q",
      "uazbua-bbanb4vk6nhm61Unsthg9",
      ",wtIadrsruh"
    ]
  },
  {
    "regex": "Must be between",
    "refactor_regex": "(Must be between)",
    "5_correct_answers": [
      "Must be between",
      "Must be between",
      "Must be between",
      "Must be between",
      "Must be between"
    ],
    "5_incorrect_answers": [
      "Must be beZween",
      "Must Ge ,etween",
      "Must/be between",
      "Mus; be between",
      "Must be bXt^een"
    ]
  },
  {
    "regex": "({{?)(\\w+)}",
    "refactor_regex": "({{?[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_]{1,})}",
    "5_correct_answers": [
      "{_}",
      "{{m}",
      "{{UW}",
      "{kLcW}",
      "{6}"
    ],
    "5_incorrect_answers": [
      "V_}",
      "{{;}",
      "{{UWz",
      "Z=LcWM",
      "{4Q"
    ]
  },
  {
    "regex": "second=([\\-\\d]+)",
    "refactor_regex": "(second=)([\\-0-9]+)",
    "5_correct_answers": [
      "second=975713453337830841--",
      "second=30688",
      "second=325-6-5151-828945143664",
      "second=9",
      "second=67-511729521383"
    ],
    "5_incorrect_answers": [
      "secon[=9757134533h7830841(-",
      "seconJ=30688",
      "Vecond=#25-6-5151-828945143664",
      "second=t",
      "secon<=67u511729K21383"
    ]
  },
  {
    "regex": "enter safeword password:",
    "refactor_regex": "(enter safeword password:)",
    "5_correct_answers": [
      "enter safeword password:",
      "enter safeword password:",
      "enter safeword password:",
      "enter safeword password:",
      "enter safeword password:"
    ],
    "5_incorrect_answers": [
      "enter safeword pAs|word:",
      "enter safewordDpas<word:",
      "enter safeword aa,sword:",
      "enter safewoOd pa]sword*",
      "enter safew-id ?assword:"
    ]
  },
  {
    "regex": "not one of \"one\", \"two\", \"three\"",
    "refactor_regex": "(not one of \"one\", \"two\", \"three\")",
    "5_correct_answers": [
      "not one of \"one\", \"two\", \"three\"",
      "not one of \"one\", \"two\", \"three\"",
      "not one of \"one\", \"two\", \"three\"",
      "not one of \"one\", \"two\", \"three\"",
      "not one of \"one\", \"two\", \"three\""
    ],
    "5_incorrect_answers": [
      "not one of \"one#, \"two\", \"three\"",
      "not on6 of \"oKe\", \"two\", \"thvee\"",
      "not one of \"one\", \"two\", Bthr8eJ",
      "/ot one of \"Qne\", \"two\", \"thrFe\"",
      "not on> oF \"one\", \"two\", \"three\""
    ]
  },
  {
    "regex": "(ipad|playbook)",
    "refactor_regex": "((ipad)|(playbook))",
    "5_correct_answers": [
      "playbook",
      "ipad",
      "playbook",
      "ipad",
      "playbook"
    ],
    "5_incorrect_answers": [
      "pliybook",
      "ihad",
      "p|aybook",
      "ipfX",
      "playbo=l"
    ]
  },
  {
    "regex": "{[\\w, ]+}",
    "refactor_regex": "{[\\w, ]{1,}}",
    "5_correct_answers": [
      "{xK}",
      "{I}",
      "{n}",
      "{ }",
      "{v5g}"
    ],
    "5_incorrect_answers": [
      ":xC>",
      "j&}",
      "<nT",
      "w9c",
      "{w_gH"
    ]
  },
  {
    "regex": "(\\**$)",
    "refactor_regex": "\\**$",
    "5_correct_answers": [
      "********",
      "*******",
      "********",
      "**",
      "*"
    ],
    "5_incorrect_answers": [
      "S*5h****",
      "Q*{****",
      "a*h***Z*",
      "*h",
      "P"
    ]
  },
  {
    "regex": "color: #00ff00;",
    "refactor_regex": "(color: #00ff00;)",
    "5_correct_answers": [
      "color: #00ff00;",
      "color: #00ff00;",
      "color: #00ff00;",
      "color: #00ff00;",
      "color: #00ff00;"
    ],
    "5_incorrect_answers": [
      "color: #00fD00;",
      "colo*: #00ff00;",
      "color: #00Bfn0;",
      "color: #0Dff00;",
      "col\\v: #00ff00;"
    ]
  },
  {
    "regex": "one-point-five-point-six",
    "refactor_regex": "(one-point-five-point-six)",
    "5_correct_answers": [
      "one-point-five-point-six",
      "one-point-five-point-six",
      "one-point-five-point-six",
      "one-point-five-point-six",
      "one-point-five-point-six"
    ],
    "5_incorrect_answers": [
      "one-point?fi(e-point-six",
      "onerpoint-five-}oint-six",
      "oneVpoint-five-pointOsix",
      "one-goint-fhve-poinY-six",
      "one-pLint-five-point-six"
    ]
  },
  {
    "regex": "^dd-(.*)$",
    "refactor_regex": "^(dd-).*$",
    "5_correct_answers": [
      "dd-n(1W`\\B\")<Q7&",
      "dd-TuaeXPV+Uj>[c).5g",
      "dd-'@HzLJl,-GDorLW,1:rGrb",
      "dd-yGXPaLy[2_h,;wuCu1-kxRDZ",
      "dd-%Wo72)k2OSHl("
    ],
    "5_incorrect_answers": [
      "ddNn(1W`\\B\")<Q<o",
      "$d-TuaeXPV+Uj>[c).5g",
      "dN-'@HzwJ,,-GDorLW,1:rGrb",
      "dn-yGXPaLy[2_h,^whCu1-kxRDZ",
      "UdB%Wo72)N2OSHl("
    ]
  },
  {
    "regex": "^SCH",
    "refactor_regex": "^(SCH)",
    "5_correct_answers": [
      "SCH",
      "SCH",
      "SCH",
      "SCH",
      "SCH"
    ],
    "5_incorrect_answers": [
      "SC-",
      "SC1",
      "S%H",
      "bgj",
      "aCH"
    ]
  },
  {
    "regex": "^i\\-[0-9a-f]{3}$",
    "refactor_regex": "^i\\-[0-9a-f][0-9a-f][0-9a-f]$",
    "5_correct_answers": [
      "i-992",
      "i-2f5",
      "i-e1b",
      "i-799",
      "i-095"
    ],
    "5_incorrect_answers": [
      "z-(92",
      "ig*F5",
      "i-e1t",
      "iM7n9",
      ":-0Jc"
    ]
  },
  {
    "regex": "<(h\\d)([^>]*)>",
    "refactor_regex": "<h[0-9][^>]{0,}>",
    "5_correct_answers": [
      "<h3YoCN%#Ek>",
      "<h4sSCi54j(T2i1.Ex@>",
      "<h2_>",
      "<h74VI(0[\"'>",
      "<h4MJ57ID;iB_9>"
    ],
    "5_incorrect_answers": [
      "Uh3:oCN%#Ek>",
      "<I4sS2i54j(T2ih.Ex@>",
      "<K2_%",
      "<hD4VI(0X\"'>",
      "<h4M257ID;iB_9S"
    ]
  },
  {
    "regex": "([^:])(/){2,}",
    "refactor_regex": "[^:]/{2,}",
    "5_correct_answers": [
      "U/////////////////",
      "F////////",
      "&/////////////",
      "T///////////////////",
      "J//////////////////////////"
    ],
    "5_incorrect_answers": [
      "UJ/////W//////////",
      "(=*//////",
      "&/P1//////////",
      "T/c///I/////////////",
      "Ji////////p////////////////"
    ]
  },
  {
    "regex": "^([\\S\\s]*?)</([^-\\-;->\\s]+)\\s*>",
    "refactor_regex": "^((\\S|\\s)*?)(</)([^-\\-;->\\s]+)\\s*>",
    "5_correct_answers": [
      " </b[HIzH\\L9D0 >",
      "</_sW`&pQk.x'i&G25\"ffUC#>",
      "</cFw4]G]cL)gjo]93J6D3aid(.>",
      "</muFs@tN>",
      "</W9sp]/Hm9Wav*i>"
    ],
    "5_incorrect_answers": [
      " <zb[HIvH\\x9D0 >",
      ",/_sW`&pQkUx'i&G2Z\"ffUC#>",
      "</cFw4]G]cL)gko]93J6D3aid(.{",
      "&/*u?s@tN>",
      "</W9!p]/Hm9Wav*is"
    ]
  },
  {
    "regex": "Unknown munit render state error",
    "refactor_regex": "(Unknown munit render state error)",
    "5_correct_answers": [
      "Unknown munit render state error",
      "Unknown munit render state error",
      "Unknown munit render state error",
      "Unknown munit render state error",
      "Unknown munit render state error"
    ],
    "5_incorrect_answers": [
      "Unknown mtnit render State erIor",
      "Unknown muni0 render ctate error",
      "Unknown munct render state errtr",
      "Unknown munit render staWe err- ",
      "Unknown munit ren{er state errzr"
    ]
  },
  {
    "regex": "^\\s*(:[^:]+:.*)",
    "refactor_regex": "^(\\s+){0,1}:[^:]+:.*",
    "5_correct_answers": [
      ":w/ciU]F\"Lj,TtE.?Ge:_:8tK)F')qt\"",
      ":t;X^:",
      ":.7s[h8AWj]BgX1(>mG:RHBnOnoBah d2",
      ":bX:F00'KdNFOS&",
      ":6dq*<j9bnX+b!]GO<E:j."
    ],
    "5_incorrect_answers": [
      "^w/ciU]F\"Lj,TtE.?Ge:_:8tK)F')qt\"",
      "Q4;X^:",
      "9.7s[h8AWj]BgX1(>mG:RHBnOnoBah d2",
      "$bX:R00'KdN^OS&",
      "B6dq*<j9bnX+b!]GO<E:j."
    ]
  },
  {
    "regex": "^([\"'])use strict",
    "refactor_regex": "^(\"use strict|'use strict)",
    "5_correct_answers": [
      "'use strict",
      "'use strict",
      "\"use strict",
      "'use strict",
      "\"use strict"
    ],
    "5_incorrect_answers": [
      "'ufe s3rict",
      "'p@e st(ict",
      "luWe strict",
      "'usq stticm",
      "\"use stri&t"
    ]
  },
  {
    "regex": "^Static",
    "refactor_regex": "^(Static)",
    "5_correct_answers": [
      "Static",
      "Static",
      "Static",
      "Static",
      "Static"
    ],
    "5_incorrect_answers": [
      "Stat<c",
      "Sba(ic",
      "&tEt\\c",
      "Sqatiy",
      "w?atiR"
    ]
  },
  {
    "regex": "(.+)\\[(\\d+)\\]$",
    "refactor_regex": ".{1,}\\[\\d+\\]$",
    "5_correct_answers": [
      "\"@_rAGK<P[5]",
      "z2<::GwV[9008342084109922]",
      "wv@[3811789100]",
      "eKRw2La<nTG)A,:&C5XZ@[3233830]",
      "x_JqE0=pGp'g)ZAc[034]"
    ],
    "5_incorrect_answers": [
      "\"@_rAGK<P\\5]",
      "z#<::GwV99008342084109922]",
      "Xv@[381178+100]",
      "eKRw2LaOnTG)A,:&C5XZ@[)233830]",
      "x_JqE0=pGp'g)ZAc[03e!"
    ]
  },
  {
    "regex": "melon",
    "refactor_regex": "(melon)",
    "5_correct_answers": [
      "melon",
      "melon",
      "melon",
      "melon",
      "melon"
    ],
    "5_incorrect_answers": [
      "Eelon",
      "meH%n",
      "m+lon",
      "oelon",
      "medJ*"
    ]
  },
  {
    "regex": "^(?:ch\\b)",
    "refactor_regex": "^(ch)\\b",
    "5_correct_answers": [
      "ch",
      "ch",
      "ch",
      "ch",
      "ch"
    ],
    "5_incorrect_answers": [
      "PF",
      "u!",
      "wh",
      "c`",
      "Nh"
    ]
  },
  {
    "regex": "(^| )test-name( |$)",
    "refactor_regex": "^test-name |^test-name$| test-name | test-name$",
    "5_correct_answers": [
      "test-name ",
      " test-name ",
      " test-name",
      " test-name ",
      " test-name"
    ],
    "5_incorrect_answers": [
      "zest-nam+ ",
      " test-name+",
      " test-n#me",
      " Oest-na1e-",
      " test-nam)"
    ]
  },
  {
    "regex": "^unit",
    "refactor_regex": "^(unit)",
    "5_correct_answers": [
      "unit",
      "unit",
      "unit",
      "unit",
      "unit"
    ],
    "5_incorrect_answers": [
      "u%it",
      "uG)6",
      "unik",
      "uxit",
      "unsk"
    ]
  }
]